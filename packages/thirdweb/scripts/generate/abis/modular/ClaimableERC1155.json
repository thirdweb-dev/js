[
  "function beforeMintERC1155(address _to, uint256 _id, uint256 _quantity, bytes _data) payable returns (bytes)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function encodeBytesBeforeMintERC1155(((uint256 tokenId, uint48 startTimestamp, uint48 endTimestamp, address recipient, uint256 quantity, address currency, uint256 pricePerUnit, bytes32 uid) request, bytes signature, address currency, uint256 pricePerUnit, bytes32[] recipientAllowlistProof) params) pure returns (bytes)",
  "function encodeBytesOnInstall(address primarySaleRecipient) pure returns (bytes)",
  "function encodeBytesOnUninstall() pure returns (bytes)",
  "function getClaimConditionByTokenId(uint256 _id) view returns ((uint256 availableSupply, bytes32 allowlistMerkleRoot, uint256 pricePerUnit, address currency, uint48 startTimestamp, uint48 endTimestamp, string auxData) claimCondition)",
  "function getModuleConfig() pure returns ((bool registerInstallationCallback, bytes4[] requiredInterfaces, bytes4[] supportedInterfaces, (bytes4 selector)[] callbackFunctions, (bytes4 selector, uint256 permissionBits)[] fallbackFunctions) config)",
  "function getSaleConfig() view returns (address primarySaleRecipient)",
  "function onInstall(bytes data)",
  "function onUninstall(bytes data)",
  "function setClaimConditionByTokenId(uint256 _id, (uint256 availableSupply, bytes32 allowlistMerkleRoot, uint256 pricePerUnit, address currency, uint48 startTimestamp, uint48 endTimestamp, string auxData) _claimCondition)",
  "function setSaleConfig(address _primarySaleRecipient)",
  "error BeforeMintCallbackERC1155NotImplemented()",
  "error ClaimableIncorrectNativeTokenSent()",
  "error ClaimableIncorrectPriceOrCurrency()",
  "error ClaimableNotInAllowlist()",
  "error ClaimableOutOfSupply()",
  "error ClaimableOutOfTimeWindow()",
  "error ClaimableRequestInvalidToken()",
  "error ClaimableRequestMismatch()",
  "error ClaimableRequestOutOfTimeWindow()",
  "error ClaimableRequestUidReused()",
  "error ClaimableRequestUnauthorizedSignature()"
]