import type { ConnectLocale } from "./types.js";

const connectLocaleFr: ConnectLocale = {
  id: "fr_FR",
  signIn: "S'authentifier",
  defaultButtonTitle: "Se Connecter",
  connecting: "Connexion",
  switchNetwork: "Changer de réseau",
  switchingNetwork: "Changement de réseau",
  defaultModalTitle: "Se connecter",
  recommended: "Recommandé",
  installed: "Installé",
  buy: "Acheter",
  continueAsGuest: "Continuer en tant qu'invité",
  connectAWallet: "Connecter un portefeuille",
  newToWallets: "En savoir plus sur les portefeuilles",
  getStarted: "Commencer",
  guest: "Invité",
  send: "Envoyer",
  receive: "Recevoir",
  currentNetwork: "Réseau actuel",
  switchAccount: "Changer de compte",
  requestTestnetFunds: "Demander des fonds Testnet",
  transactions: "Transactions",
  payTransactions: "Transactions en Euros",
  walletTransactions: "Transactions du portefeuille",
  viewAllTransactions: "Voir toutes les transactions",
  backupWallet: "Sauvegarder le portefeuille",
  guestWalletWarning:
    "Ceci est un portefeuille invité temporaire. Sauvegardez le portefeuille si vous ne voulez pas perdre l'accès",
  switchTo: "Passer à", // Used in "Switch to <Wallet-Name>"
  connectedToSmartWallet: "Compte intelligent",
  confirmInWallet: "Confirmer dans le portefeuille",
  disconnectWallet: "Déconnecter le portefeuille",
  copyAddress: "Copier l'adresse",
  personalWallet: "Portefeuille personnel",
  smartWallet: "Portefeuille intelligent",
  or: "OU",
  goBackButton: "Retour",
  welcomeScreen: {
    defaultTitle: "Votre porte d'entrée vers le monde décentralisé",
    defaultSubtitle: "Connectez un portefeuille pour commencer",
  },
  agreement: {
    prefix: "En vous connectant, vous acceptez les",
    termsOfService: "Conditions d'utilisation",
    and: "&",
    privacyPolicy: "Politique de confidentialité",
  },
  networkSelector: {
    title: "Sélectionner un réseau",
    mainnets: "Mainnets",
    testnets: "Testnets",
    allNetworks: "Tous",
    addCustomNetwork: "Ajouter un réseau personnalisé",
    inputPlaceholder: "Rechercher un réseau ou un ID de chaîne",
    categoryLabel: {
      recentlyUsed: "Récemment utilisé",
      popular: "Populaire",
      others: "Tous les réseaux",
    },
    loading: "Chargement",
    failedToSwitch: "Échec du changement de réseau",
  },
  receiveFundsScreen: {
    title: "Recevoir des fonds",
    instruction:
      "Copiez l'adresse du portefeuille pour envoyer des fonds à ce portefeuille",
  },
  sendFundsScreen: {
    title: "Envoyer des fonds",
    submitButton: "Envoyer",
    token: "Token",
    sendTo: "Envoyer à",
    amount: "Montant",
    successMessage: "Transaction réussie",
    invalidAddress: "Adresse invalide",
    noTokensFound: "Aucun token trouvé",
    searchToken: "Rechercher ou coller l'adresse du token",
    transactionFailed: "Échec de la transaction",
    transactionRejected: "Transaction rejetée",
    insufficientFunds: "Fonds insuffisants",
    selectTokenTitle: "Sélectionner un token",
    sending: "Envoi en cours",
  },
  signatureScreen: {
    instructionScreen: {
      title: "Se connecter",
      instruction:
        "Veuillez signer la demande de message dans votre portefeuille pour continuer",
      signInButton: "Se connecter",
      disconnectWallet: "Déconnecter le portefeuille",
    },
    signingScreen: {
      title: "Connexion en cours",
      prompt: "Signez la demande de signature dans votre portefeuille",
      promptForSafe:
        "Signez la demande de signature dans votre portefeuille et approuvez la transaction dans Safe",
      approveTransactionInSafe: "Approuvez la transaction dans Safe",
      tryAgain: "Réessayer",
      failedToSignIn: "Échec de la connexion",
      inProgress: "En attente de confirmation",
    },
  },
  manageWallet: {
    title: "Gérer le portefeuille",
    connectAnApp: "Connecter une application",
    exportPrivateKey: "Exporter la clé privée",
  },
  viewFunds: {
    title: "Voir les fonds",
    viewNFTs: "Voir les NFT",
    viewTokens: "Voir les tokens",
    viewAssets: "Voir les actifs",
  },
};

export default connectLocaleFr;
