import type { ConnectLocale } from "./types.js";

const connectLocaleEn: ConnectLocale = {
  agreement: {
    and: "&",
    prefix: "By connecting, you agree to the",
    privacyPolicy: "Privacy Policy",
    termsOfService: "Terms of Service",
  },
  backupWallet: "Backup Wallet",
  buy: "Buy",
  confirmInWallet: "Confirm in wallet",
  connectAWallet: "Connect a Wallet",
  connectedToSmartWallet: "Smart Account",
  connecting: "Connecting",
  continueAsGuest: "Continue as guest",
  copyAddress: "Copy Address",
  currentNetwork: "Current network",
  defaultButtonTitle: "Connect",
  defaultModalTitle: "Sign in",
  disconnectWallet: "Disconnect Wallet",
  getStarted: "Get started",
  goBackButton: "Back",
  guest: "Guest",
  guestWalletWarning:
    "This is a temporary guest wallet. Backup wallet if you don't want to lose access to it",
  id: "en_US",
  installed: "Installed",
  manageWallet: {
    connectAnApp: "Connect an App",
    exportPrivateKey: "Export Private Key",
    linkedProfiles: "Linked Profiles",
    linkProfile: "Link a Profile",
    title: "Manage Wallet",
  },
  networkSelector: {
    addCustomNetwork: "Add Custom Network",
    allNetworks: "All",
    categoryLabel: {
      others: "All Networks",
      popular: "Popular",
      recentlyUsed: "Recently Used",
    },
    failedToSwitch: "Failed to switch network",
    inputPlaceholder: "Search Network or Chain ID",
    loading: "Loading",
    mainnets: "Mainnets",
    testnets: "Testnets",
    title: "Select Network",
  },
  newToWallets: "New to wallets?",
  or: "OR",
  passkeys: {
    linkPasskey: "Link a Passkey",
    title: "Passkeys",
  },
  payTransactions: "Fiat Transactions",
  personalWallet: "Personal Wallet",
  receive: "Receive", // Used in "Switch to <Wallet-Name>"
  receiveFundsScreen: {
    instruction: "Copy the address to send funds to this wallet",
    title: "Receive Funds",
  },
  recommended: "Recommended",
  requestTestnetFunds: "Request Testnet Funds",
  send: "Send",
  sendFundsScreen: {
    amount: "Amount",
    insufficientFunds: "Insufficient Funds",
    invalidAddress: "Invalid Address",
    noTokensFound: "No Tokens Found",
    searchToken: "Search or Paste token address",
    selectTokenTitle: "Select a Token",
    sending: "Sending",
    sendTo: "Send to",
    submitButton: "Send",
    successMessage: "Transaction Successful",
    title: "Send Funds",
    token: "Token",
    transactionFailed: "Transaction Failed",
    transactionRejected: "Transaction Rejected",
  },
  signatureScreen: {
    instructionScreen: {
      disconnectWallet: "Disconnect Wallet",
      instruction: "Please sign the message request in your wallet to continue",
      signInButton: "Sign in",
      title: "Sign in",
    },
    signingScreen: {
      approveTransactionInSafe: "Approve transaction in Safe",
      failedToSignIn: "Failed to Sign in",
      inProgress: "Awaiting Confirmation",
      prompt: "Signing the signature request in your wallet",
      promptForSafe:
        "Sign signature request in your wallet & approve transaction in Safe",
      title: "Signing In",
      tryAgain: "Try Again",
    },
  },
  signIn: "Sign in",
  smartWallet: "Smart Wallet",
  switchAccount: "Switch Account",
  switchingNetwork: "Switching Network",
  switchNetwork: "Switch Network",
  switchTo: "Switch to",
  transactions: "Transactions",
  viewAllTransactions: "View All Transactions",
  viewFunds: {
    title: "View Funds",
    viewAssets: "View Assets",
    viewNFTs: "View NFTs",
    viewTokens: "View Tokens",
  },
  walletTransactions: "Wallet Transactions",
  welcomeScreen: {
    defaultSubtitle: "Connect a wallet to get started",
    defaultTitle: "Your gateway to the decentralized world",
  },
};

export default connectLocaleEn;
