{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.31.1",
    "schemaVersion": 1009,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@thirdweb-dev/storage!",
  "docComment": "",
  "name": "@thirdweb-dev/storage",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@thirdweb-dev/storage!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@thirdweb-dev/storage!GatewayUrls:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GatewayUrls = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key: string]: string[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GatewayUrls",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@thirdweb-dev/storage!IpfsUploadBatchOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IpfsUploadBatchOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    rewriteFileNames?: {\n        fileStartNumber: number;\n    };\n    uploadWithGatewayUrl?: boolean;\n    onProgress?: (event: "
            },
            {
              "kind": "Reference",
              "text": "UploadProgressEvent",
              "canonicalReference": "@thirdweb-dev/storage!UploadProgressEvent:type"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    uploadWithoutDirectory?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IpfsUploadBatchOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@thirdweb-dev/storage!IpfsUploader:class",
          "docComment": "/**\n * Default uploader used - handles uploading arbitrary data to IPFS\n *\n * @example\n * ```jsx\n * // Can instantiate the uploader with default configuration\n * const uploader = new StorageUploader();\n * const storage = new ThirdwebStorage(uploader);\n *\n * // Or optionally, can pass configuration\n * const gatewayUrls = {\n *   // We define a mapping of schemes to gateway URLs\n *   \"ipfs://\": [\n *     \"https://gateway.ipfscdn.io/ipfs/\",\n *     \"https://cloudflare-ipfs.com/ipfs/\",\n *     \"https://ipfs.io/ipfs/\",\n *   ],\n * };\n * const options = {\n *   // Define cutom gateway URLs\n *   gatewayUrls,\n *   // Upload objects with resolvable URLs\n *   uploadWithGatewayUrl: true,\n * }\n * const storage = new ThirdwebStorage(options);\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class IpfsUploader implements "
            },
            {
              "kind": "Reference",
              "text": "IStorageUploader",
              "canonicalReference": "@thirdweb-dev/storage!IStorageUploader:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IpfsUploadBatchOptions",
              "canonicalReference": "@thirdweb-dev/storage!IpfsUploadBatchOptions:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IpfsUploader",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@thirdweb-dev/storage!IpfsUploader:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `IpfsUploader` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "IpfsUploaderOptions",
                  "canonicalReference": "@thirdweb-dev/storage!IpfsUploaderOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@thirdweb-dev/storage!IpfsUploader#gatewayUrls:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gatewayUrls: "
                },
                {
                  "kind": "Reference",
                  "text": "GatewayUrls",
                  "canonicalReference": "@thirdweb-dev/storage!GatewayUrls:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "gatewayUrls",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@thirdweb-dev/storage!IpfsUploader#uploadBatch:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uploadBatch(data: "
                },
                {
                  "kind": "Reference",
                  "text": "FileOrBufferOrString",
                  "canonicalReference": "@thirdweb-dev/storage!FileOrBufferOrString:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "IpfsUploadBatchOptions",
                  "canonicalReference": "@thirdweb-dev/storage!IpfsUploadBatchOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "uploadBatch"
            },
            {
              "kind": "Property",
              "canonicalReference": "@thirdweb-dev/storage!IpfsUploader#uploadWithGatewayUrl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uploadWithGatewayUrl: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "uploadWithGatewayUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@thirdweb-dev/storage!IpfsUploaderOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IpfsUploaderOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    gatewayUrls?: "
            },
            {
              "kind": "Reference",
              "text": "GatewayUrls",
              "canonicalReference": "@thirdweb-dev/storage!GatewayUrls:type"
            },
            {
              "kind": "Content",
              "text": ";\n    uploadWithGatewayUrl?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IpfsUploaderOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@thirdweb-dev/storage!IStorageDownloader:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IStorageDownloader "
            }
          ],
          "releaseTag": "Public",
          "name": "IStorageDownloader",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@thirdweb-dev/storage!IStorageDownloader#download:member(1)",
              "docComment": "/**\n * Download arbitrary data from any URL scheme\n *\n * @param url - The URL to download data from\n *\n * @returns The response object of the fetch\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "download(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "!Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "download"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thirdweb-dev/storage!IStorageDownloader#gatewayUrls:member",
              "docComment": "/**\n * Gateway URLs used to replace schemes on download\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gatewayUrls: "
                },
                {
                  "kind": "Reference",
                  "text": "GatewayUrls",
                  "canonicalReference": "@thirdweb-dev/storage!GatewayUrls:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "gatewayUrls",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@thirdweb-dev/storage!IStorageUploader:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IStorageUploader<T extends "
            },
            {
              "kind": "Reference",
              "text": "UploadOptions",
              "canonicalReference": "@thirdweb-dev/storage!UploadOptions:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IStorageUploader",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thirdweb-dev/storage!IStorageUploader#gatewayUrls:member",
              "docComment": "/**\n * If specified, will be used to replace any gateway URLs with schemes on upload\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gatewayUrls?: "
                },
                {
                  "kind": "Reference",
                  "text": "GatewayUrls",
                  "canonicalReference": "@thirdweb-dev/storage!GatewayUrls:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "gatewayUrls",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@thirdweb-dev/storage!IStorageUploader#uploadBatch:member(1)",
              "docComment": "/**\n * Upload an array of arbitrary file data or JSON strings\n *\n * @param data - Array of arbitrary file data or JSON strings to upload\n *\n * @param options - Options to pass through to the uploader\n *\n * @returns Array of uploaded file URIs\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uploadBatch(data: "
                },
                {
                  "kind": "Reference",
                  "text": "FileOrBufferOrString",
                  "canonicalReference": "@thirdweb-dev/storage!FileOrBufferOrString:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "name": "uploadBatch"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@thirdweb-dev/storage!IStorageUploader#uploadWithGatewayUrl:member",
              "docComment": "/**\n * If specified, will upload objects with gateway URLs instead of schemes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uploadWithGatewayUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "uploadWithGatewayUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@thirdweb-dev/storage!StorageDownloader:class",
          "docComment": "/**\n * Default downloader used - handles downloading from all schemes specified in the gateway URLs configuration.\n *\n * @example\n * ```jsx\n * // Can instantiate the downloader with the default gateway URLs\n * const downloader = new StorageDownloader();\n * const storage = new ThirdwebStorage(undefined, downloader);\n *\n * // Or optionally, can specify your own mapping of URLs\n * const gatewayUrls = {\n *   // We define a mapping of schemes to gateway URLs\n *   \"ipfs://\": [\n *     \"https://gateway.ipfscdn.io/ipfs/\",\n *     \"https://cloudflare-ipfs.com/ipfs/\",\n *     \"https://ipfs.io/ipfs/\",\n *   ],\n * };\n * const downloader = new StorageDownloader(gatewayUrls);\n * const storage = new ThirdwebStorage(undefined, downloader);\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class StorageDownloader implements "
            },
            {
              "kind": "Reference",
              "text": "IStorageDownloader",
              "canonicalReference": "@thirdweb-dev/storage!IStorageDownloader:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "StorageDownloader",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@thirdweb-dev/storage!StorageDownloader:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `StorageDownloader` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(gatewayUrls?: "
                },
                {
                  "kind": "Reference",
                  "text": "GatewayUrls",
                  "canonicalReference": "@thirdweb-dev/storage!GatewayUrls:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "gatewayUrls",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@thirdweb-dev/storage!StorageDownloader#download:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "download(uri: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", attempts?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "!Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "uri",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "attempts",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "download"
            },
            {
              "kind": "Property",
              "canonicalReference": "@thirdweb-dev/storage!StorageDownloader#gatewayUrls:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gatewayUrls: "
                },
                {
                  "kind": "Reference",
                  "text": "GatewayUrls",
                  "canonicalReference": "@thirdweb-dev/storage!GatewayUrls:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "gatewayUrls",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@thirdweb-dev/storage!ThirdwebStorage:class",
          "docComment": "/**\n * Upload and download files from decentralized storage systems.\n *\n * @example\n * ```jsx\n * // Create a default storage class without any configuration\n * const storage = new ThirdwebStorage();\n *\n * // Upload any file or JSON object\n * const uri = await storage.upload(data);\n * const result = await storage.download(uri);\n *\n * // Or configure a custom uploader and downloader\n * const downloader = new StorageDownloader();\n * const uploader = new IpfsUploader();\n * const storage = new ThirdwebStorage(uploader, downloader)\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ThirdwebStorage<T extends "
            },
            {
              "kind": "Reference",
              "text": "UploadOptions",
              "canonicalReference": "@thirdweb-dev/storage!UploadOptions:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "IpfsUploadBatchOptions",
              "canonicalReference": "@thirdweb-dev/storage!IpfsUploadBatchOptions:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "ThirdwebStorage",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@thirdweb-dev/storage!ThirdwebStorage:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ThirdwebStorage` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(uploader?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStorageUploader",
                  "canonicalReference": "@thirdweb-dev/storage!IStorageUploader:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ", downloader?: "
                },
                {
                  "kind": "Reference",
                  "text": "IStorageDownloader",
                  "canonicalReference": "@thirdweb-dev/storage!IStorageDownloader:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "uploader",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "downloader",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@thirdweb-dev/storage!ThirdwebStorage#download:member(1)",
              "docComment": "/**\n * Downloads arbitrary data from any URL scheme.\n *\n * @param url - The URL of the data to download\n *\n * @returns The response object fetched from the resolved URL\n *\n * @example\n * ```jsx\n * const uri = \"ipfs://example\";\n * const data = await storage.download(uri);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "download(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "!Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "download"
            },
            {
              "kind": "Method",
              "canonicalReference": "@thirdweb-dev/storage!ThirdwebStorage#downloadJSON:member(1)",
              "docComment": "/**\n * Downloads JSON data from any URL scheme. Resolves any URLs with schemes to retrievable gateway URLs.\n *\n * @param url - The URL of the JSON data to download\n *\n * @returns The JSON data fetched from the resolved URL\n *\n * @example\n * ```jsx\n * const uri = \"ipfs://example\"\n * const json = await storage.downloadJSON(uri);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "downloadJSON<TJSON = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TJSON>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TJSON",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "downloadJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "@thirdweb-dev/storage!ThirdwebStorage#upload:member(1)",
              "docComment": "/**\n * Upload arbitrary file or JSON data using the configured decentralized storage system. Automatically uploads any file data within JSON objects and replaces them with hashes.\n *\n * @param data - Arbitrary file or JSON data to upload\n *\n * @param options - Options to pass through to the storage uploader class\n *\n * @returns - The URI of the uploaded data\n *\n * @example\n * ```jsx\n * // Upload file data\n * const file = readFileSync(\"../file.jpg\");\n * const fileUri = await storage.upload(file);\n *\n * // Or upload a JSON object\n * const json = { name: \"JSON\", image: file };\n * const jsonUri = await storage.upload(json);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upload(data: "
                },
                {
                  "kind": "Reference",
                  "text": "Json",
                  "canonicalReference": "@thirdweb-dev/storage!Json:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "FileOrBuffer",
                  "canonicalReference": "@thirdweb-dev/storage!FileOrBuffer:type"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "upload"
            },
            {
              "kind": "Method",
              "canonicalReference": "@thirdweb-dev/storage!ThirdwebStorage#uploadBatch:member(1)",
              "docComment": "/**\n * Batch upload arbitrary file or JSON data using the configured decentralized storage system. Automatically uploads any file data within JSON objects and replaces them with hashes.\n *\n * @param data - Array of arbitrary file or JSON data to upload\n *\n * @param options - Options to pass through to the storage uploader class\n *\n * @returns - The URIs of the uploaded data\n *\n * @example\n * ```jsx\n * // Upload an array of file data\n * const files = [\n *  readFileSync(\"../file1.jpg\"),\n *  readFileSync(\"../file2.jpg\"),\n * ];\n * const fileUris = await storage.uploadBatch(files);\n *\n * // Upload an array of JSON objects\n * const objects = [\n *  { name: \"JSON 1\", image: files[0] },\n *  { name: \"JSON 2\", image: files[1] },\n * ];\n * const jsonUris = await storage.uploadBatch(objects);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uploadBatch(data: "
                },
                {
                  "kind": "Reference",
                  "text": "Json",
                  "canonicalReference": "@thirdweb-dev/storage!Json:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "FileOrBuffer",
                  "canonicalReference": "@thirdweb-dev/storage!FileOrBuffer:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "uploadBatch"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@thirdweb-dev/storage!UploadOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UploadOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key: string]: any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "UploadOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@thirdweb-dev/storage!UploadProgressEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UploadProgressEvent = "
            },
            {
              "kind": "Content",
              "text": "{\n    progress: number;\n    total: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "UploadProgressEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        }
      ]
    }
  ]
}
