/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { ERC721Drop, ERC721DropInterface } from "../ERC721Drop";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_royaltyRecipient",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_royaltyBps",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_primarySaleRecipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxClaimableSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantityLimitPerTransaction",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "waitTimeInSecondsBetweenClaims",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "pricePerToken",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IClaimCondition.ClaimCondition",
        name: "condition",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "resetEligibility",
        type: "bool",
      },
    ],
    name: "ClaimConditionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "prevURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newURI",
        type: "string",
      },
    ],
    name: "ContractURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRoyaltyRecipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRoyaltyBps",
        type: "uint256",
      },
    ],
    name: "DefaultRoyalty",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "PrimarySaleRecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "royaltyRecipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royaltyBps",
        type: "uint256",
      },
    ],
    name: "RoyaltyForToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "revealedURI",
        type: "string",
      },
    ],
    name: "TokenURIRevealed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "startTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantityClaimed",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "startTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedBaseURI",
        type: "bytes",
      },
    ],
    name: "TokensLazyMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pricePerToken",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "proof",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "maxQuantityInAllowlist",
            type: "uint256",
          },
        ],
        internalType: "struct IDropSinglePhase.AllowlistProof",
        name: "_allowlistProof",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimCondition",
    outputs: [
      {
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxClaimableSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "supplyClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantityLimitPerTransaction",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "waitTimeInSecondsBetweenClaims",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "encryptDecrypt",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "encryptedData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURICount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getBatchIdAtIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
    ],
    name: "getClaimTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "lastClaimedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextValidClaimTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultRoyaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_batchId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_key",
        type: "bytes",
      },
    ],
    name: "getRevealURI",
    outputs: [
      {
        internalType: "string",
        name: "revealedURI",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyaltyInfoForToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_batchId",
        type: "uint256",
      },
    ],
    name: "isEncryptedBatch",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_baseURIForTokens",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "lazyMint",
    outputs: [
      {
        internalType: "uint256",
        name: "batchId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenIdToClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenIdToMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "primarySaleRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_key",
        type: "bytes",
      },
    ],
    name: "reveal",
    outputs: [
      {
        internalType: "string",
        name: "revealedURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxClaimableSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantityLimitPerTransaction",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "waitTimeInSecondsBetweenClaims",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "pricePerToken",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct IClaimCondition.ClaimCondition",
        name: "_condition",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "_resetClaimEligibility",
        type: "bool",
      },
    ],
    name: "setClaimConditions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_royaltyRecipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royaltyBps",
        type: "uint256",
      },
    ],
    name: "setDefaultRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_saleRecipient",
        type: "address",
      },
    ],
    name: "setPrimarySaleRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_bps",
        type: "uint256",
      },
    ],
    name: "setRoyaltyInfoForToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pricePerToken",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "verifyMaxQuantityPerTransaction",
        type: "bool",
      },
    ],
    name: "verifyClaim",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "proof",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "maxQuantityInAllowlist",
            type: "uint256",
          },
        ],
        internalType: "struct IDropSinglePhase.AllowlistProof",
        name: "_allowlistProof",
        type: "tuple",
      },
    ],
    name: "verifyClaimMerkleProof",
    outputs: [
      {
        internalType: "bool",
        name: "validMerkleProof",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "merkleProofIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620044ee380380620044ee833981016040819052620000349162000377565b8451859085906200004d906002906020850190620001e7565b50805162000063906003906020840190620001e7565b505060008055506200007533620000a0565b6200008a836001600160801b038416620000f2565b62000095816200019d565b505050505062000464565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6127108111156200013b5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600e80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b828054620001f59062000427565b90600052602060002090601f01602090048101928262000219576000855562000264565b82601f106200023457805160ff191683800117855562000264565b8280016001018555821562000264579182015b828111156200026457825182559160200191906001019062000247565b506200027292915062000276565b5090565b5b8082111562000272576000815560010162000277565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002b557600080fd5b81516001600160401b0380821115620002d257620002d26200028d565b604051601f8301601f19908116603f01168101908282118183101715620002fd57620002fd6200028d565b816040528381526020925086838588010111156200031a57600080fd5b600091505b838210156200033e57858201830151818301840152908201906200031f565b83821115620003505760008385830101525b9695505050505050565b80516001600160a01b03811681146200037257600080fd5b919050565b600080600080600060a086880312156200039057600080fd5b85516001600160401b0380821115620003a857600080fd5b620003b689838a01620002a3565b96506020880151915080821115620003cd57600080fd5b50620003dc88828901620002a3565b945050620003ed604087016200035a565b60608701519093506001600160801b03811681146200040b57600080fd5b91506200041b608087016200035a565b90509295509295909350565b600181811c908216806200043c57607f821691505b602082108114156200045e57634e487b7160e01b600052602260045260246000fd5b50919050565b61407a80620004746000396000f3fe60806040526004361061028c5760003560e01c806377312a9e11610164578063b24f2d39116100c6578063d37c353b1161008a578063e8a3d48511610064578063e8a3d48514610852578063e985e9c514610867578063ffbb7a13146108b057600080fd5b8063d37c353b14610792578063d637ed59146107b2578063e71503221461083257600080fd5b8063b24f2d39146106d2578063b67875ce146106fd578063b88d4fde14610732578063c87b56dd14610752578063ce8056421461077257600080fd5b80639fc4d68f11610128578063a72e157d11610102578063a72e157d14610670578063ac9650d814610690578063acd083f8146106bd57600080fd5b80639fc4d68f14610610578063a05112fc14610630578063a22cb4651461065057600080fd5b806377312a9e1461057d5780638da5cb5b1461059d578063938e3d7b146105bb57806395d89b41146105db5780639bcf7a15146105f057600080fd5b80633b1475a71161020d5780635ab31c1a116101d157806363b45e2d116101ab57806363b45e2d146105285780636f4f28371461053d57806370a082311461055d57600080fd5b80635ab31c1a146104d5578063600dd5ea146104e85780636352211e1461050857600080fd5b80633b1475a71461041e57806342842e0e1461043357806342966c6814610453578063492e224b146104735780634cc157df1461049357600080fd5b806313af40351161025457806313af40351461035c57806318160ddd1461037c57806323b872dd1461039f5780632419f51b146103bf5780632a55205a146103df57600080fd5b806301ffc9a71461029157806306fdde03146102c6578063079fe40e146102e8578063081812fc1461031a578063095ea7b31461033a575b600080fd5b34801561029d57600080fd5b506102b16102ac366004613451565b6108e7565b60405190151581526020015b60405180910390f35b3480156102d257600080fd5b506102db610954565b6040516102bd91906134c6565b3480156102f457600080fd5b50600e546001600160a01b03165b6040516001600160a01b0390911681526020016102bd565b34801561032657600080fd5b506103026103353660046134d9565b6109e6565b34801561034657600080fd5b5061035a61035536600461350e565b610a2a565b005b34801561036857600080fd5b5061035a610377366004613538565b610ab1565b34801561038857600080fd5b50600154600054035b6040519081526020016102bd565b3480156103ab57600080fd5b5061035a6103ba366004613553565b610b07565b3480156103cb57600080fd5b506103916103da3660046134d9565b610b12565b3480156103eb57600080fd5b506103ff6103fa36600461358f565b610b80565b604080516001600160a01b0390931683526020830191909152016102bd565b34801561042a57600080fd5b50600f54610391565b34801561043f57600080fd5b5061035a61044e366004613553565b610bbd565b34801561045f57600080fd5b5061035a61046e3660046134d9565b610bd8565b34801561047f57600080fd5b506102b161048e3660046134d9565b610be3565b34801561049f57600080fd5b506104b36104ae3660046134d9565b610c09565b604080516001600160a01b03909316835261ffff9091166020830152016102bd565b61035a6104e3366004613696565b610c74565b3480156104f457600080fd5b5061035a61050336600461350e565b610da6565b34801561051457600080fd5b506103026105233660046134d9565b610df9565b34801561053457600080fd5b50600c54610391565b34801561054957600080fd5b5061035a610558366004613538565b610e0b565b34801561056957600080fd5b50610391610578366004613538565b610e59565b34801561058957600080fd5b5061035a61059836600461373b565b610ea8565b3480156105a957600080fd5b506009546001600160a01b0316610302565b3480156105c757600080fd5b5061035a6105d636600461377c565b611093565b3480156105e757600080fd5b506102db6110e1565b3480156105fc57600080fd5b5061035a61060b3660046137c5565b6110f0565b34801561061c57600080fd5b506102db61062b366004613833565b611140565b34801561063c57600080fd5b506102db61064b3660046134d9565b6112cd565b34801561065c57600080fd5b5061035a61066b36600461387f565b611367565b34801561067c57600080fd5b5061035a61068b3660046138ab565b6113fd565b34801561069c57600080fd5b506106b06106ab366004613906565b6115f0565b6040516102bd919061397b565b3480156106c957600080fd5b50600054610391565b3480156106de57600080fd5b50600a546001600160a01b03811690600160a01b900461ffff166104b3565b34801561070957600080fd5b5061071d610718366004613538565b6116e5565b604080519283526020830191909152016102bd565b34801561073e57600080fd5b5061035a61074d3660046139dd565b611722565b34801561075e57600080fd5b506102db61076d3660046134d9565b61176c565b34801561077e57600080fd5b506102db61078d366004613833565b6117db565b34801561079e57600080fd5b506103916107ad366004613a45565b61189f565b3480156107be57600080fd5b506011546012546013546014546015546016546017546018546107ee97969594939291906001600160a01b031688565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c08301526001600160a01b031660e0820152610100016102bd565b34801561083e57600080fd5b506102db61084d366004613abf565b611937565b34801561085e57600080fd5b506102db6119ac565b34801561087357600080fd5b506102b1610882366004613b1b565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b3480156108bc57600080fd5b506108d06108cb366004613b4e565b6119b9565b6040805192151583526020830191909152016102bd565b60006301ffc9a760e01b6001600160e01b03198316148061091857506380ac58cd60e01b6001600160e01b03198316145b806109335750635b5e139f60e01b6001600160e01b03198316145b8061094e57506001600160e01b0319821663152a902d60e11b145b92915050565b60606002805461096390613ba5565b80601f016020809104026020016040519081016040528092919081815260200182805461098f90613ba5565b80156109dc5780601f106109b1576101008083540402835291602001916109dc565b820191906000526020600020905b8154815290600101906020018083116109bf57829003601f168201915b5050505050905090565b60006109f182611bc5565b610a0e576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610a3582610df9565b9050806001600160a01b0316836001600160a01b03161415610a6a5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614610aa157610a848133610882565b610aa1576040516367d9dca160e11b815260040160405180910390fd5b610aac838383611bf0565b505050565b610ab9611c4c565b610afb5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b610b0481611c79565b50565b610aac838383611ccb565b6000610b1d600c5490565b8210610b5b5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610af2565b600c8281548110610b6e57610b6e613bda565b90600052602060002001549050919050565b600080600080610b8f86610c09565b90945084925061ffff169050612710610ba88287613c06565b610bb29190613c3b565b925050509250929050565b610aac83838360405180602001604052806000815250611722565b610b04816001611eba565b60008181526010602052604081208054829190610bff90613ba5565b9050119050919050565b6000818152600b60209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610c505780516020820151610c6a565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b610c82868686868686612095565b601954600080610c933389876119b9565b915091506000856020013560001480610cac5750601654155b9050610cbb338a8a8a856113fd565b828015610ccc575060008660200135115b15610cfb576000848152601b60209081526040808320600886901c845290915290208054600160ff85161b1790555b8860116002016000828254610d109190613c4f565b90915550506000848152601a602090815260408083203384529091528120429055610d3d908a8a8a612131565b6000610d498b8b6121ef565b9050806001600160a01b038c16336001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68d604051610d9191815260200190565b60405180910390a45050505050505050505050565b610dae611c4c565b610deb5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b610df582826121fc565b5050565b6000610e04826122b1565b5192915050565b610e13611c4c565b610e505760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b610b04816123cd565b60006001600160a01b038216610e82576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610eb0611c4c565b610eed5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b6019546013548215610f3c575060003360405160609190911b6bffffffffffffffffffffffff191660208201524360348201526054016040516020818303038152906040528051906020012091505b8360200135811115610f905760405162461bcd60e51b815260206004820152601260248201527f6d617820737570706c7920636c61696d656400000000000000000000000000006044820152606401610af2565b604051806101000160405280856000013581526020018560200135815260200182815260200185606001358152602001856080013581526020018560a0013581526020018560c0013581526020018560e0016020810190610ff19190613538565b6001600160a01b03908116909152815160115560208201516012556040808301516013556060830151601455608083015160155560a083015160165560c083015160175560e090920151601880546001600160a01b031916919092161790556019839055517f583ecce39d40d7b7653fd2cb1cdc19aa03714482ffd00fafa242355cdcd79080906110859086908690613c67565b60405180910390a150505050565b61109b611c4c565b6110d85760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b610b0481612417565b60606003805461096390613ba5565b6110f8611c4c565b6111355760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b610aac8383836124f9565b60008381526010602052604081208054606092919061115e90613ba5565b80601f016020809104026020016040519081016040528092919081815260200182805461118a90613ba5565b80156111d75780601f106111ac576101008083540402835291602001916111d7565b820191906000526020600020905b8154815290600101906020018083116111ba57829003601f168201915b505050505090508051600014156112305760405162461bcd60e51b815260206004820152601160248201527f4e6f7468696e6720746f2072657665616c0000000000000000000000000000006044820152606401610af2565b600080828060200190518101906112479190613cd9565b91509150611256828787611937565b935080848787466040516020016112709493929190613d5a565b60405160208183030381529060405280519060200120146112c35760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610af2565b5050509392505050565b601060205260009081526040902080546112e690613ba5565b80601f016020809104026020016040519081016040528092919081815260200182805461131290613ba5565b801561135f5780601f106113345761010080835404028352916020019161135f565b820191906000526020600020905b81548152906001019060200180831161134257829003601f168201915b505050505081565b6001600160a01b0382163314156113915760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b604080516101008101825260115481526012546020820152601354918101919091526014546060820152601554608082015260165460a082015260175460c08201526018546001600160a01b0390811660e0830181905290851614158061146857508060c001518314155b156114b55760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207072696365206f722063757272656e6379000000000000006044820152606401610af2565b8415806114cd57508180156114cd5750806060015185115b1561151a5760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207175616e74697479000000000000000000000000000000006044820152606401610af2565b806020015185826040015161152f9190613c4f565b111561157d5760405162461bcd60e51b815260206004820152601260248201527f65786365656473206d617820737570706c7900000000000000000000000000006044820152606401610af2565b600080611589886116e5565b9150915042836000015111806115a8575081158015906115a857508042105b156115e65760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610af2565b5050505050505050565b60608167ffffffffffffffff81111561160b5761160b6135c9565b60405190808252806020026020018201604052801561163e57816020015b60608152602001906001900390816116295790505b50905060005b828110156116de576116ae3085858481811061166257611662613bda565b90506020028101906116749190613d83565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506125c292505050565b8282815181106116c0576116c0613bda565b602002602001018190525080806116d690613dca565b915050611644565b5092915050565b6019546000908152601a602090815260408083206001600160a01b038516845290915290205460155481018181101561171d57506000195b915091565b61172d848484611ccb565b6001600160a01b0383163b1561176657611749848484846125ee565b611766576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606000611779836126d7565b5090506000611787846127ea565b905061179282610be3565b156117c057806040516020016117a89190613de5565b60405160208183030381529060405292505050919050565b806117ca8561294b565b6040516020016117a8929190613e0a565b60606117e5611c4c565b6118225760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b600061182d85610b12565b905061183a818585611140565b91506118558160405180602001604052806000815250612a61565b61185f8183612a80565b847f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d8360405161188f91906134c6565b60405180910390a2509392505050565b60008115611920576000806118b684860186613e39565b9150915081516000141580156118cb57508015155b1561191d5761191d88600f546118e19190613c4f565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612a6192505050565b50505b61192d8686868686612a9f565b9695505050505050565b8251604080518083016020019091528181529060005b818110156119a357600085858360405160200161196c93929190613e7e565b60408051601f1981840301815291905280516020918201208884018201511885840182015261199c915082613c4f565b905061194d565b50509392505050565b600880546112e690613ba5565b604080516101008101825260115481526012546020820152601354918101919091526014546060820152601554608082015260165460a0820181905260175460c08301526018546001600160a01b031660e0830152600091829115611bbc57611aa1611a258580613e90565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a08301516040516bffffffffffffffffffffffff1960608b901b16602080830191909152880135603482015260540160405160208183030381529060405280519060200120612be2565b909350915082611af35760405162461bcd60e51b815260206004820152601060248201527f6e6f7420696e20616c6c6f776c697374000000000000000000000000000000006044820152606401610af2565b6019546000908152601b60209081526040808320600886901c8452909152902054600160ff84161b1615611b595760405162461bcd60e51b815260206004820152600d60248201526c1c1c9bdbd98818db185a5b5959609a1b6044820152606401610af2565b602084013515801590611b6f5750836020013585115b15611bbc5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207174792070726f6f660000000000000000000000000000006044820152606401610af2565b50935093915050565b600080548210801561094e575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000611c606009546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6000611cd6826122b1565b9050836001600160a01b031681600001516001600160a01b031614611d0d5760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611d2b5750611d2b8533610882565b80611d46575033611d3b846109e6565b6001600160a01b0316145b905080611d6657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611d8d57604051633a954ecd60e21b815260040160405180910390fd5b611d9960008487611bf0565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611e6f576000548214611e6f578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b6000611ec5836122b1565b80519091508215611f2b576000336001600160a01b0383161480611eee5750611eee8233610882565b80611f09575033611efe866109e6565b6001600160a01b0316145b905080611f2957604051632ce44b5f60e11b815260040160405180910390fd5b505b611f3760008583611bf0565b6001600160a01b038082166000818152600560209081526040808320805470010000000000000000000000000000000060001967ffffffffffffffff80841691909101811667ffffffffffffffff19841681178390048216600190810183169093027fffffffffffffffff0000000000000000ffffffffffffffff0000000000000000909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b17855591890180845292208054919490911661204b57600054821461204b578054602087015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060018054810190555050565b3332146120ca5760405162461bcd60e51b81526020600482015260036024820152621093d560ea1b6044820152606401610af2565b600f54856000546120db9190613c4f565b11156121295760405162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f756768206d696e74656420746f6b656e7300000000000000006044820152606401610af2565b505050505050565b8061213b57611766565b60006121478285613c06565b90506001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156121bd578034146121bd5760405162461bcd60e51b815260206004820152601560248201527f4d7573742073656e6420746f74616c20707269636500000000000000000000006044820152606401610af2565b60006001600160a01b038616156121d457856121e1565b600e546001600160a01b03165b905061212984338385612cb0565b60005461094e8383612cfa565b6127108111156122405760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610af2565b600a80546001600160a01b03841675ffffffffffffffffffffffffffffffffffffffffffff199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6040805160608101825260008082526020820181905291810191909152816000548110156123b457600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff161515918101829052906123b25780516001600160a01b031615612348579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff16151592810192909252156123ad579392505050565b612348565b505b604051636f96cda160e11b815260040160405180910390fd5b600e80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b60006008805461242690613ba5565b80601f016020809104026020016040519081016040528092919081815260200182805461245290613ba5565b801561249f5780601f106124745761010080835404028352916020019161249f565b820191906000526020600020905b81548152906001019060200180831161248257829003601f168201915b505085519394506124bb936008935060208701925090506133a2565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516124ed929190613eda565b60405180910390a15050565b61271081111561253d5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610af2565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b60606125e7838360405180606001604052806027815260200161401e60279139612d14565b9392505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290612623903390899088908890600401613f08565b6020604051808303816000875af192505050801561265e575060408051601f3d908101601f1916820190925261265b91810190613f3a565b60015b6126b9573d80801561268c576040519150601f19603f3d011682016040523d82523d6000602084013e612691565b606091505b5080516126b1576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60008060006126e5600c5490565b90506000600c80548060200260200160405190810160405280929190818152602001828054801561273557602002820191906000526020600020905b815481526020019060010190808311612721575b5050505050905060005b828110156127a15781818151811061275957612759613bda565b602002602001015186101561278f5780935081818151811061277d5761277d613bda565b60200260200101519450505050915091565b61279a600182613c4f565b905061273f565b5060405162461bcd60e51b815260206004820152600f60248201527f496e76616c696420746f6b656e496400000000000000000000000000000000006044820152606401610af2565b606060006127f7600c5490565b90506000600c80548060200260200160405190810160405280929190818152602001828054801561284757602002820191906000526020600020905b815481526020019060010190808311612833575b5050505050905060005b828110156127a15781818151811061286b5761286b613bda565b602002602001015185101561293957600d600083838151811061289057612890613bda565b6020026020010151815260200190815260200160002080546128b190613ba5565b80601f01602080910402602001604051908101604052809291908181526020018280546128dd90613ba5565b801561292a5780601f106128ff5761010080835404028352916020019161292a565b820191906000526020600020905b81548152906001019060200180831161290d57829003601f168201915b50505050509350505050919050565b612944600182613c4f565b9050612851565b60608161296f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612999578061298381613dca565b91506129929050600a83613c3b565b9150612973565b60008167ffffffffffffffff8111156129b4576129b46135c9565b6040519080825280601f01601f1916602001820160405280156129de576020820181803683370190505b5090505b84156126cf576129f3600183613f57565b9150612a00600a86613f6e565b612a0b906030613c4f565b60f81b818381518110612a2057612a20613bda565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612a5a600a86613c3b565b94506129e2565b60008281526010602090815260409091208251610aac928401906133a2565b6000828152600d602090815260409091208251610aac928401906133a2565b6000612aa9611c4c565b612ae65760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b85612b335760405162461bcd60e51b815260206004820152601060248201527f4d696e74696e67203020746f6b656e73000000000000000000000000000000006044820152606401610af2565b6000600f549050612b7b818888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612de792505050565b600f919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001612bb18a84613c4f565b612bbb9190613f57565b88888888604051612bd0959493929190613fab565b60405180910390a25095945050505050565b6000808281805b8751811015612ca457612bfd600283613c06565b91506000888281518110612c1357612c13613bda565b60200260200101519050808411612c55576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612c91565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183612c8e9190613c4f565b92505b5080612c9c81613dca565b915050612be9565b50941495939450505050565b80612cba57611766565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612cee57612ce98282612e4b565b611766565b61176684848484612eee565b610df5828260405180602001604052806000815250612f47565b60606001600160a01b0384163b612d7c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610af2565b600080856001600160a01b031685604051612d979190613fe4565b600060405180830381855af49150503d8060008114612dd2576040519150601f19603f3d011682016040523d82523d6000602084013e612dd7565b606091505b509150915061192d82828661310c565b600080612df48486613c4f565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d602090815260409091208551929450849350611bbc9290918601906133a2565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612e98576040519150601f19603f3d011682016040523d82523d6000602084013e612e9d565b606091505b5050905080610aac5760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610af2565b816001600160a01b0316836001600160a01b03161415612f0d57611766565b6001600160a01b038316301415612f3257612ce96001600160a01b0385168383613145565b6117666001600160a01b0385168484846131bd565b6000546001600160a01b038416612f7057604051622e076360e81b815260040160405180910390fd5b82612f8e5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b156130b7575b60405182906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a461308060008784806001019550876125ee565b61309d576040516368d2bf6b60e11b815260040160405180910390fd5b8082106130355782600054146130b257600080fd5b6130fc565b5b6040516001830192906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48082106130b8575b5060009081556117669085838684565b6060831561311b5750816125e7565b82511561312b5782518084602001fd5b8160405162461bcd60e51b8152600401610af291906134c6565b6040516001600160a01b038316602482015260448101829052610aac90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b0319909316929092179091526131f5565b6040516001600160a01b03808516602483015283166044820152606481018290526117669085906323b872dd60e01b90608401613171565b600061324a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166132c79092919063ffffffff16565b805190915015610aac57808060200190518101906132689190614000565b610aac5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610af2565b60606126cf8484600085856001600160a01b0385163b6133295760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610af2565b600080866001600160a01b031685876040516133459190613fe4565b60006040518083038185875af1925050503d8060008114613382576040519150601f19603f3d011682016040523d82523d6000602084013e613387565b606091505b509150915061339782828661310c565b979650505050505050565b8280546133ae90613ba5565b90600052602060002090601f0160209004810192826133d05760008555613416565b82601f106133e957805160ff1916838001178555613416565b82800160010185558215613416579182015b828111156134165782518255916020019190600101906133fb565b50613422929150613426565b5090565b5b808211156134225760008155600101613427565b6001600160e01b031981168114610b0457600080fd5b60006020828403121561346357600080fd5b81356125e78161343b565b60005b83811015613489578181015183820152602001613471565b838111156117665750506000910152565b600081518084526134b281602086016020860161346e565b601f01601f19169290920160200192915050565b6020815260006125e7602083018461349a565b6000602082840312156134eb57600080fd5b5035919050565b80356001600160a01b038116811461350957600080fd5b919050565b6000806040838503121561352157600080fd5b61352a836134f2565b946020939093013593505050565b60006020828403121561354a57600080fd5b6125e7826134f2565b60008060006060848603121561356857600080fd5b613571846134f2565b925061357f602085016134f2565b9150604084013590509250925092565b600080604083850312156135a257600080fd5b50508035926020909101359150565b6000604082840312156135c357600080fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715613608576136086135c9565b604052919050565b600067ffffffffffffffff82111561362a5761362a6135c9565b50601f01601f191660200190565b600061364b61364684613610565b6135df565b905082815283838301111561365f57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261368757600080fd5b6125e783833560208501613638565b60008060008060008060c087890312156136af57600080fd5b6136b8876134f2565b9550602087013594506136cd604088016134f2565b935060608701359250608087013567ffffffffffffffff808211156136f157600080fd5b6136fd8a838b016135b1565b935060a089013591508082111561371357600080fd5b5061372089828a01613676565b9150509295509295509295565b8015158114610b0457600080fd5b60008082840361012081121561375057600080fd5b6101008082121561376057600080fd5b84935083013590506137718161372d565b809150509250929050565b60006020828403121561378e57600080fd5b813567ffffffffffffffff8111156137a557600080fd5b8201601f810184136137b657600080fd5b6126cf84823560208401613638565b6000806000606084860312156137da57600080fd5b8335925061357f602085016134f2565b60008083601f8401126137fc57600080fd5b50813567ffffffffffffffff81111561381457600080fd5b60208301915083602082850101111561382c57600080fd5b9250929050565b60008060006040848603121561384857600080fd5b83359250602084013567ffffffffffffffff81111561386657600080fd5b613872868287016137ea565b9497909650939450505050565b6000806040838503121561389257600080fd5b61389b836134f2565b915060208301356137718161372d565b600080600080600060a086880312156138c357600080fd5b6138cc866134f2565b9450602086013593506138e1604087016134f2565b92506060860135915060808601356138f88161372d565b809150509295509295909350565b6000806020838503121561391957600080fd5b823567ffffffffffffffff8082111561393157600080fd5b818501915085601f83011261394557600080fd5b81358181111561395457600080fd5b8660208260051b850101111561396957600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156139d057603f198886030184526139be85835161349a565b945092850192908501906001016139a2565b5092979650505050505050565b600080600080608085870312156139f357600080fd5b6139fc856134f2565b9350613a0a602086016134f2565b925060408501359150606085013567ffffffffffffffff811115613a2d57600080fd5b613a3987828801613676565b91505092959194509250565b600080600080600060608688031215613a5d57600080fd5b85359450602086013567ffffffffffffffff80821115613a7c57600080fd5b613a8889838a016137ea565b90965094506040880135915080821115613aa157600080fd5b50613aae888289016137ea565b969995985093965092949392505050565b600080600060408486031215613ad457600080fd5b833567ffffffffffffffff80821115613aec57600080fd5b613af887838801613676565b94506020860135915080821115613b0e57600080fd5b50613872868287016137ea565b60008060408385031215613b2e57600080fd5b613b37836134f2565b9150613b45602084016134f2565b90509250929050565b600080600060608486031215613b6357600080fd5b613b6c846134f2565b925060208401359150604084013567ffffffffffffffff811115613b8f57600080fd5b613b9b868287016135b1565b9150509250925092565b600181811c90821680613bb957607f821691505b602082108114156135c357634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615613c2057613c20613bf0565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613c4a57613c4a613c25565b500490565b60008219821115613c6257613c62613bf0565b500190565b600061012082019050833582526020840135602083015260408401356040830152606084013560608301526080840135608083015260a084013560a083015260c084013560c08301526001600160a01b03613cc460e086016134f2565b1660e083015291151561010090910152919050565b60008060408385031215613cec57600080fd5b825167ffffffffffffffff811115613d0357600080fd5b8301601f81018513613d1457600080fd5b8051613d2261364682613610565b818152866020838501011115613d3757600080fd5b613d4882602083016020860161346e565b60209590950151949694955050505050565b60008551613d6c818460208a0161346e565b820184868237909301918252506020019392505050565b6000808335601e19843603018112613d9a57600080fd5b83018035915067ffffffffffffffff821115613db557600080fd5b60200191503681900382131561382c57600080fd5b6000600019821415613dde57613dde613bf0565b5060010190565b60008251613df781846020870161346e565b600360fc1b920191825250600101919050565b60008351613e1c81846020880161346e565b835190830190613e3081836020880161346e565b01949350505050565b60008060408385031215613e4c57600080fd5b823567ffffffffffffffff811115613e6357600080fd5b613e6f85828601613676565b95602094909401359450505050565b82848237909101908152602001919050565b6000808335601e19843603018112613ea757600080fd5b83018035915067ffffffffffffffff821115613ec257600080fd5b6020019150600581901b360382131561382c57600080fd5b604081526000613eed604083018561349a565b8281036020840152613eff818561349a565b95945050505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261192d608083018461349a565b600060208284031215613f4c57600080fd5b81516125e78161343b565b600082821015613f6957613f69613bf0565b500390565b600082613f7d57613f7d613c25565b500690565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b858152606060208201526000613fc5606083018688613f82565b8281036040840152613fd8818587613f82565b98975050505050505050565b60008251613ff681846020870161346e565b9190910192915050565b60006020828403121561401257600080fd5b81516125e78161372d56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220683a9fc5dbf8a98c39bd71fe494c113d272e62b3151c0cf08f441e9c20ea5f2064736f6c634300080c0033";

type ERC721DropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721DropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Drop__factory extends ContractFactory {
  constructor(...args: ERC721DropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: string,
    _symbol: string,
    _royaltyRecipient: string,
    _royaltyBps: BigNumberish,
    _primarySaleRecipient: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Drop> {
    return super.deploy(
      _name,
      _symbol,
      _royaltyRecipient,
      _royaltyBps,
      _primarySaleRecipient,
      overrides || {}
    ) as Promise<ERC721Drop>;
  }
  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _royaltyRecipient: string,
    _royaltyBps: BigNumberish,
    _primarySaleRecipient: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _royaltyRecipient,
      _royaltyBps,
      _primarySaleRecipient,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Drop {
    return super.attach(address) as ERC721Drop;
  }
  override connect(signer: Signer): ERC721Drop__factory {
    return super.connect(signer) as ERC721Drop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721DropInterface {
    return new utils.Interface(_abi) as ERC721DropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Drop {
    return new Contract(address, _abi, signerOrProvider) as ERC721Drop;
  }
}
