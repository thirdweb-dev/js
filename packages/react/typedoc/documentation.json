{
	"id": 0,
	"name": "@thirdweb-dev/react",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1053,
			"name": "VerifyOwnershipWithPaper",
			"variant": "reference",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/payments/components/VerifyOwnershipWithPaper.tsx",
					"line": 36,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/VerifyOwnershipWithPaper.tsx#L36"
				}
			],
			"target": 1003
		},
		{
			"id": 1007,
			"name": "PaperCheckoutDisplay",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 1011,
					"name": "DRAWER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Open the checkout in a drawer on the right side of the parent page with a darkened background.\n\nNOTE: Pay with Crypto is disabled in this display mode."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
							"line": 38,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L38"
						}
					],
					"type": {
						"type": "literal",
						"value": "DRAWER"
					}
				},
				{
					"id": 1012,
					"name": "EMBED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Embed the checkout directly on the parent page.\n\nNOTE: Pay with Crypto is disabled in this display mode."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
							"line": 45,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L45"
						}
					],
					"type": {
						"type": "literal",
						"value": "EMBED"
					}
				},
				{
					"id": 1010,
					"name": "MODAL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Open the checkout in a modal on the parent page with a darkened background.\n\nNOTE: Pay with Crypto is disabled in this display mode."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
							"line": 31,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L31"
						}
					],
					"type": {
						"type": "literal",
						"value": "MODAL"
					}
				},
				{
					"id": 1009,
					"name": "NEW_TAB",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Open the checkout in a new browser tab."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
							"line": 24,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L24"
						}
					],
					"type": {
						"type": "literal",
						"value": "NEW_TAB"
					}
				},
				{
					"id": 1008,
					"name": "POPUP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Open the checkout in a new popup centered over the parent window."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
							"line": 19,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L19"
						}
					],
					"type": {
						"type": "literal",
						"value": "POPUP"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						1011,
						1012,
						1010,
						1009,
						1008
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
					"line": 15,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L15"
				}
			]
		},
		{
			"id": 960,
			"name": "PayWithCryptoErrorCode",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 966,
					"name": "ChainSwitchUnderway",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "There is a network switch already underway"
					}
				},
				{
					"id": 961,
					"name": "ErrorConnectingToWallet",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Error connecting to wallet"
					}
				},
				{
					"id": 962,
					"name": "ErrorSendingTransaction",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Something went wrong sending transaction"
					}
				},
				{
					"id": 963,
					"name": "InsufficientBalance",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Insufficient ETH"
					}
				},
				{
					"id": 967,
					"name": "PendingSignature",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Pending Signature"
					}
				},
				{
					"id": 964,
					"name": "TransactionCancelled",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Transaction Cancelled"
					}
				},
				{
					"id": 965,
					"name": "WrongChain",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "Wrong Chain Detected"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						966,
						961,
						962,
						963,
						967,
						964,
						965
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
					"line": 19,
					"character": 20
				}
			]
		},
		{
			"id": 951,
			"name": "PaymentsSDKErrorCode",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 958,
					"name": "AddressNotAllowed",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "This address is not on the allowlist."
					}
				},
				{
					"id": 956,
					"name": "EmailNotVerified",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "The email was unable to be verified."
					}
				},
				{
					"id": 955,
					"name": "InvalidCard",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "The card information is invalid. Please double check that the Card, CVC, and Zip code are all correct."
					}
				},
				{
					"id": 954,
					"name": "InvalidProps",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "The props you passed in to this component are not valid."
					}
				},
				{
					"id": 959,
					"name": "NoActiveClaimPhase",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "There is no active claim phase at the moment."
					}
				},
				{
					"id": 957,
					"name": "NotEnoughSupply",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "There is not enough supply to claim."
					}
				},
				{
					"id": 952,
					"name": "UserAbandonedCheckout",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "User abandoned the checkout"
					}
				},
				{
					"id": 953,
					"name": "UserLoginFailed",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "User login failed"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						958,
						956,
						955,
						954,
						959,
						957,
						952,
						953
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
					"line": 9,
					"character": 20
				}
			]
		},
		{
			"id": 798,
			"name": "MediaRendererProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 800,
					"name": "alt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The alt text for the media."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 49,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L49"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 809,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L33"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 818,
						"name": "SharedMediaProps.children"
					}
				},
				{
					"id": 805,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The className to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 812,
						"name": "SharedMediaProps.className"
					}
				},
				{
					"id": 808,
					"name": "controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Show the media controls (where applicable)\n\nBy default it is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 817,
						"name": "SharedMediaProps.controls"
					}
				},
				{
					"id": 802,
					"name": "gatewayUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IPFS gateway URL to use"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 57,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L57"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 804,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS height property to apply on the rendered element."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 65,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L65"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 815,
						"name": "SharedMediaProps.height"
					}
				},
				{
					"id": 810,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provide the [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the media if it is known"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 819,
						"name": "SharedMediaProps.mimeType"
					}
				},
				{
					"id": 801,
					"name": "poster",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The media poster image uri. (if applicable)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 53,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L53"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 807,
					"name": "requireInteraction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Require user interaction to play the media.\n\nBy default it is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 25,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 816,
						"name": "SharedMediaProps.requireInteraction"
					}
				},
				{
					"id": 799,
					"name": "src",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The media source uri."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 45,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L45"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 806,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The style to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 813,
						"name": "SharedMediaProps.style"
					}
				},
				{
					"id": 803,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS width property to apply on the rendered element."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 61,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L61"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 814,
						"name": "SharedMediaProps.width"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						800,
						809,
						805,
						808,
						802,
						804,
						810,
						801,
						807,
						799,
						806,
						803
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/types.ts",
					"line": 41,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L41"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 811,
					"name": "SharedMediaProps",
					"package": "@thirdweb-dev/react"
				}
			]
		},
		{
			"id": 934,
			"name": "MediaType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 936,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
							"line": 721,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/MediaRenderer.tsx#L721"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 935,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
							"line": 720,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/MediaRenderer.tsx#L720"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						936,
						935
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
					"line": 719,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/MediaRenderer.tsx#L719"
				}
			]
		},
		{
			"id": 1054,
			"name": "PaymentSuccessResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1055,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique ID for this purchase."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/payments/interfaces/PaymentSuccessResult.ts",
							"line": 6,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/PaymentSuccessResult.ts#L6"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1055
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/payments/interfaces/PaymentSuccessResult.ts",
					"line": 2,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/PaymentSuccessResult.ts#L2"
				}
			]
		},
		{
			"id": 991,
			"name": "PaymentsProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 993,
					"name": "appName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/payments/Provider.tsx",
							"line": 24,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/Provider.tsx#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 992,
					"name": "chainName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/payments/Provider.tsx",
							"line": 23,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/Provider.tsx#L23"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../payments/src/constants/blockchain.ts",
							"qualifiedName": "SupportedChainName"
						},
						"name": "SupportedChainName",
						"package": "@thirdweb-dev/payments"
					}
				},
				{
					"id": 994,
					"name": "clientId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/payments/Provider.tsx",
							"line": 25,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/Provider.tsx#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						993,
						992,
						994
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/payments/Provider.tsx",
					"line": 22,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/Provider.tsx#L22"
				}
			]
		},
		{
			"id": 811,
			"name": "SharedMediaProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 818,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L33"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				},
				{
					"id": 812,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The className to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 817,
					"name": "controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Show the media controls (where applicable)\n\nBy default it is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 815,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS height property to apply on the rendered element."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 19,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 819,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provide the [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the media if it is known"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 816,
					"name": "requireInteraction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Require user interaction to play the media.\n\nBy default it is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 25,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 813,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The style to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					}
				},
				{
					"id": 814,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS width property to apply on the rendered element."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						818,
						812,
						817,
						815,
						819,
						816,
						813,
						814
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/types.ts",
					"line": 3,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L3"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 798,
					"name": "MediaRendererProps"
				},
				{
					"type": "reference",
					"target": 937,
					"name": "ThirdwebNftMediaProps"
				}
			]
		},
		{
			"id": 937,
			"name": "ThirdwebNftMediaProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 946,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L33"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 818,
						"name": "SharedMediaProps.children"
					}
				},
				{
					"id": 942,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The className to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 812,
						"name": "SharedMediaProps.className"
					}
				},
				{
					"id": 945,
					"name": "controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Show the media controls (where applicable)\n\nBy default it is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 817,
						"name": "SharedMediaProps.controls"
					}
				},
				{
					"id": 941,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "CSS height of the media"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/NftMedia.tsx",
							"line": 18,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/NftMedia.tsx#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 815,
						"name": "SharedMediaProps.height"
					}
				},
				{
					"id": 938,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The NFT metadata of the NFT returned by the thirdweb sdk."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/NftMedia.tsx",
							"line": 10,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/NftMedia.tsx#L10"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "objectOutputType"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 939,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/core/schema/nft.d.ts",
											"line": 278,
											"character": 303
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodUnion"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodEffects"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
															"qualifiedName": "ZodUnion"
														},
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																			"qualifiedName": "ZodBigInt"
																		},
																		"name": "ZodBigInt",
																		"package": "zod"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																			"qualifiedName": "ZodType"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																					"qualifiedName": "BigNumber"
																				},
																				"name": "BigNumber",
																				"package": "@ethersproject/bignumber"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																					"qualifiedName": "ZodTypeDef"
																				},
																				"name": "ZodTypeDef",
																				"package": "zod"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																					"qualifiedName": "BigNumber"
																				},
																				"name": "BigNumber",
																				"package": "@ethersproject/bignumber"
																			}
																		],
																		"name": "ZodType",
																		"package": "zod"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																			"qualifiedName": "ZodType"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+bn.js@5.1.1/node_modules/@types/bn.js/index.d.ts",
																					"qualifiedName": "BN"
																				},
																				"name": "BN",
																				"package": "@types/bn.js"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																					"qualifiedName": "ZodTypeDef"
																				},
																				"name": "ZodTypeDef",
																				"package": "zod"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+bn.js@5.1.1/node_modules/@types/bn.js/index.d.ts",
																					"qualifiedName": "BN"
																				},
																				"name": "BN",
																				"package": "@types/bn.js"
																			}
																		],
																		"name": "ZodType",
																		"package": "zod"
																	}
																]
															}
														],
														"name": "ZodUnion",
														"package": "zod"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "bigint"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																	"qualifiedName": "BigNumber"
																},
																"name": "BigNumber",
																"package": "@ethersproject/bignumber"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@types+bn.js@5.1.1/node_modules/@types/bn.js/index.d.ts",
																	"qualifiedName": "BN"
																},
																"name": "BN",
																"package": "@types/bn.js"
															}
														]
													}
												],
												"name": "ZodEffects",
												"package": "zod"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodUnknown"
												},
												"name": "ZodUnknown",
												"package": "zod"
											}
										]
									}
								],
								"name": "ZodUnion",
								"package": "zod"
							},
							{
								"type": "literal",
								"value": "strip"
							}
						],
						"name": "objectOutputType",
						"package": "zod"
					}
				},
				{
					"id": 947,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provide the [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the media if it is known"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 819,
						"name": "SharedMediaProps.mimeType"
					}
				},
				{
					"id": 944,
					"name": "requireInteraction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Require user interaction to play the media.\n\nBy default it is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 25,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 816,
						"name": "SharedMediaProps.requireInteraction"
					}
				},
				{
					"id": 943,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The style to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/types.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 813,
						"name": "SharedMediaProps.style"
					}
				},
				{
					"id": 940,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "CSS width of the media"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/NftMedia.tsx",
							"line": 14,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/NftMedia.tsx#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 814,
						"name": "SharedMediaProps.width"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						946,
						942,
						945,
						941,
						938,
						947,
						944,
						943,
						940
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/NftMedia.tsx",
					"line": 6,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/NftMedia.tsx#L6"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 811,
					"name": "SharedMediaProps",
					"package": "@thirdweb-dev/react"
				}
			]
		},
		{
			"id": 792,
			"name": "ThirdwebProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 796,
					"name": "locale",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "locale object contains text used for all thirdweb components\n\nit allows you to change the language used in UI components or override the texts used in the UI\n\nReact SDK comes out of the box with Spanish and Japanese locale functions, but you can add support for any language you want just by passing an object with the required strings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "## Using Built-in Locales\n\n### Using the Spanish locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, es } from \"@thirdweb-dev/react\";\n\nconst spanish = es();\n\n<ThirdwebProvider locale={spanish}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Using the Japanese locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, jp } from \"@thirdweb-dev/react\";\n\nconst japanese = jp();\n\n<ThirdwebProvider locale={japanese}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Using English locale ( default )\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, en } from \"@thirdweb-dev/react\";\n\nconst english = en();\n\n<ThirdwebProvider locale={english}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n## Overriding the locale\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, en } from \"@thirdweb-dev/react\";\n\n// override some texts\nconst english = en({\n  connectWallet: {\n    confirmInWallet: \"Confirm in your wallet\",\n  },\n  wallets: {\n    metamaskWallet: {\n      connectionScreen: {\n        inProgress: \"Awaiting Confirmation\",\n        instruction: \"Accept connection request in your MetaMask wallet\",\n      },\n    },\n  },\n});\n\n<ThirdwebProvider locale={english}>\n  <App />\n</ThirdwebProvider>;\n\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Custom locale object\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\n\n<ThirdwebProvider locale={{ .... }}>\n  <App />\n</ThirdwebProvider>;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 157,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/thirdweb-provider.tsx#L157"
						}
					],
					"type": {
						"type": "reference",
						"target": 228,
						"name": "ThirdwebLocale",
						"package": "@thirdweb-dev/react"
					}
				},
				{
					"id": 795,
					"name": "signer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use a signer instead of "
							},
							{
								"kind": "code",
								"text": "`supportedWallets`"
							},
							{
								"kind": "text",
								"text": " if you want to provide your own wallet connection logic."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 80,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/thirdweb-provider.tsx#L80"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/src.ts/index.ts",
							"qualifiedName": "Signer"
						},
						"name": "Signer",
						"package": "@ethersproject/abstract-signer"
					}
				},
				{
					"id": 793,
					"name": "supportedWallets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Wallets supported by the dApp\n\nIf no wallets are provided, the default wallets will be used which is equivalent to the following:\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n[\n metamaskWallet(),\n coinbaseWallet(),\n walletConnect(),\n trustWallet(),\n rainbowWallet(),\n zerionWallet(),\n phantomWallet(),\n]\n```"
							},
							{
								"kind": "text",
								"text": "\n\n"
							},
							{
								"kind": "code",
								"text": "```jsx\nimport { metamaskWallet, coinbaseWallet, walletConnect } from \"@thirdweb-dev/react\";\n\n<ThirdwebProvider\n supportedWallets={[\n   metamaskWallet(),\n   coinbaseWallet(),\n   walletConnect()\n ]}\n/>\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 54,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/thirdweb-provider.tsx#L54"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../react-core/src/core/types/wallet.ts",
								"qualifiedName": "WalletConfig"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "WalletConfig",
							"package": "@thirdweb-dev/react-core"
						}
					}
				},
				{
					"id": 794,
					"name": "theme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set the theme for all thirdweb components\n\nBy default it is set to \"dark\".\n\ntheme can be set to either \"dark\" or \"light\" or a custom theme object.\n\nYou can also import "
							},
							{
								"kind": "code",
								"text": "`lightTheme`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`darkTheme`"
							},
							{
								"kind": "text",
								"text": " functions from "
							},
							{
								"kind": "code",
								"text": "`@thirdweb-dev/react`"
							},
							{
								"kind": "text",
								"text": " to use the default themes as base and overrides parts of it."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport { lightTheme } from \"@thirdweb-dev/react\";\nconst customTheme = lightTheme({\n colors: {\n   modalBg: 'red'\n }\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 75,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/thirdweb-provider.tsx#L75"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/design-system/index.ts",
							"qualifiedName": "ThemeObjectOrType"
						},
						"name": "ThemeObjectOrType",
						"package": "@thirdweb-dev/react"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						796,
						795,
						793,
						794
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
					"line": 20,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/thirdweb-provider.tsx#L20"
				}
			],
			"typeParameters": [
				{
					"id": 797,
					"name": "TChains",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../chains/src/types.ts",
								"qualifiedName": "Chain"
							},
							"name": "Chain",
							"package": "@thirdweb-dev/chains"
						}
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
								"qualifiedName": "ThirdwebProviderCoreProps"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "TChains",
									"refersToTypeParameter": true
								}
							],
							"name": "ThirdwebProviderCoreProps",
							"package": "@thirdweb-dev/react-core"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "createWalletStorage"
								},
								{
									"type": "literal",
									"value": "supportedWallets"
								},
								{
									"type": "literal",
									"value": "theme"
								},
								{
									"type": "literal",
									"value": "signerWallet"
								}
							]
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			]
		},
		{
			"id": 723,
			"name": "Web3ButtonProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 739,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The logic to execute when the button is clicked.\n\nThe contract instance is available as the first argument of the function for you to interact with.\n\nIf the action you are performing is async, make sure to return a Promise from the action function so that the SDK knows when the action is complete"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\n<Web3Button\n contractAddress=\"0x...\"\n action={(contract) => contract.erc721.claim(1)}\n>\n Claim NFT\n</Web3Button>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 95,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L95"
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TActionFn",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 724,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the class to apply to the button for adding custom styles"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\n<Web3Button className=\"my-custom-class\" contractAddress={contractAddress} action={someAction} >\nClaim NFT\n</Web3Button>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 42,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L42"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 743,
					"name": "connectWallet",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Web3Button renders a ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) if no wallet is connected. You can pass props for that component by passing a "
							},
							{
								"kind": "code",
								"text": "`connectWallet`"
							},
							{
								"kind": "text",
								"text": " prop to Web3Button"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\n<Web3Button\n contractAddress=\"0x...\"\n action={(contract) => contract.erc721.claim(1)}\n>\n Claim NFT\n</Web3Button>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 125,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L125"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 744,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 749,
									"name": "auth",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 152,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L152"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 750,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 751,
													"name": "loginOptional",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
															"line": 153,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L153"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 752,
													"name": "onLogin",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
															"line": 154,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L154"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 753,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
																	"line": 154,
																	"character": 16,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L154"
																}
															],
															"signatures": [
																{
																	"id": 754,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
																			"line": 154,
																			"character": 16,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L154"
																		}
																	],
																	"parameters": [
																		{
																			"id": 755,
																			"name": "token",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												},
												{
													"id": 756,
													"name": "onLogout",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
															"line": 155,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L155"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 757,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
																	"line": 155,
																	"character": 17,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L155"
																}
															],
															"signatures": [
																{
																	"id": 758,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
																			"line": 155,
																			"character": 17,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L155"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														751,
														752,
														756
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
													"line": 152,
													"character": 11,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L152"
												}
											]
										}
									}
								},
								{
									"id": 746,
									"name": "btnTitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "text to render in ConnectWallet button\n\nThe default is "
											},
											{
												"kind": "code",
												"text": "`\"Connect Wallet\"`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 136,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L136"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 745,
									"name": "className",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The class to apply to the ConnectWallet component for adding custom styles"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 129,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L129"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 760,
									"name": "modalSize",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set the size of the modal - "
											},
											{
												"kind": "code",
												"text": "`compact`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`wide`"
											},
											{
												"kind": "text",
												"text": " on desktop\n\nModal size is always "
											},
											{
												"kind": "code",
												"text": "`compact`"
											},
											{
												"kind": "text",
												"text": " on mobile.\n\nBy default it is set to "
											},
											{
												"kind": "code",
												"text": "`\"wide\"`"
											},
											{
												"kind": "text",
												"text": " for desktop"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 170,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L170"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "compact"
											},
											{
												"type": "literal",
												"value": "wide"
											}
										]
									}
								},
								{
									"id": 747,
									"name": "modalTitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "title of the ["
											},
											{
												"kind": "code",
												"text": "`ConnectWallet`"
											},
											{
												"kind": "text",
												"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal.\n\nThe default is "
											},
											{
												"kind": "code",
												"text": "`\"Connect\"`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 143,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L143"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 748,
									"name": "modalTitleIconUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Replace the thirdweb icon next to modalTitle and set your own iconUrl\n\nSet to empty string to hide the icon"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 150,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L150"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 762,
									"name": "privacyPolicyUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, ConnectWallet Modal will show a Privacy Policy message at the bottom with below link"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 180,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L180"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 759,
									"name": "style",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "apply custom styles to ConnectWallet button element"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 161,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L161"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.CSSProperties"
										},
										"name": "CSSProperties",
										"package": "@types/react",
										"qualifiedName": "React.CSSProperties"
									}
								},
								{
									"id": 761,
									"name": "termsOfServiceUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, ConnectWallet Modal will show a Terms of Service message at the bottom with below link"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 175,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L175"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 763,
									"name": "welcomeScreen",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Customize the welcome screen of the ConnectWallet Modal\n\nEither provide a component to replace the default screen entirely or an object with title, subtitle and imgSrc to change the content of the default screen"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 187,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L187"
										}
									],
									"type": {
										"type": "reference",
										"target": 632,
										"name": "WelcomeScreen",
										"package": "@thirdweb-dev/react"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										749,
										746,
										745,
										760,
										747,
										748,
										762,
										759,
										761,
										763
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
									"line": 125,
									"character": 18,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L125"
								}
							]
						}
					}
				},
				{
					"id": 726,
					"name": "contractAbi",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The [Application Binary Interface](https://docs.soliditylang.org/en/v0.8.17/abi-spec.html) (ABI) of the contract.\n\nThis is only required if you have not imported your contract to the [thirdweb dashboard](https://thirdweb.com/dashboard)."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 54,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L54"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
							"qualifiedName": "ContractInterface"
						},
						"name": "ContractInterface",
						"package": "@ethersproject/contracts"
					}
				},
				{
					"id": 725,
					"name": "contractAddress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the address of the contract\n\nIf you have not imported your contract to [thirdweb dashboard](https://thirdweb.com/dashboard), you must additionally specify the contractAbi prop."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 48,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 738,
					"name": "isDisabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the button should be disabled or not\n\nThe button is disabled and shows a spinner when the transaction is executing."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 76,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L76"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 731,
					"name": "onError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 64,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L64"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 732,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
									"line": 64,
									"character": 12,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L64"
								}
							],
							"signatures": [
								{
									"id": 733,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback function to be run when the contract method call fails."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 64,
											"character": 12,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L64"
										}
									],
									"parameters": [
										{
											"id": 734,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "error thrown when running given "
													},
													{
														"kind": "code",
														"text": "`action`"
													},
													{
														"kind": "text",
														"text": " function"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 735,
					"name": "onSubmit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 69,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L69"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 736,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
									"line": 69,
									"character": 13,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L69"
								}
							],
							"signatures": [
								{
									"id": 737,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback function to be run after the user has confirmed the transaction.\nIt is called just before the "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " function is called"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 69,
											"character": 13,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L69"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 727,
					"name": "onSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 59,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L59"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 728,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
									"line": 59,
									"character": 14,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L59"
								}
							],
							"signatures": [
								{
									"id": 729,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback function to be run when the contract method call is successful."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 59,
											"character": 14,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L59"
										}
									],
									"parameters": [
										{
											"id": 730,
											"name": "result",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value returned from given "
													},
													{
														"kind": "code",
														"text": "`action`"
													},
													{
														"kind": "text",
														"text": " function when it is called"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Awaited"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "TActionFn",
																"refersToTypeParameter": true
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												],
												"name": "Awaited",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 742,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The style to apply to the button element"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 110,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L110"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					}
				},
				{
					"id": 764,
					"name": "switchNetworkBtnTitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set a custom label for the \"Switch Network\" button"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 193,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L193"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 741,
					"name": "theme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The theme to use for the button"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 105,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L105"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "light"
							},
							{
								"type": "literal",
								"value": "dark"
							},
							{
								"type": "reference",
								"target": 182,
								"name": "Theme",
								"package": "@thirdweb-dev/react"
							}
						]
					}
				},
				{
					"id": 740,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "button element's "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": " attribute"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 100,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L100"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "button"
							},
							{
								"type": "literal",
								"value": "reset"
							},
							{
								"type": "literal",
								"value": "submit"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						739,
						724,
						743,
						726,
						725,
						738,
						731,
						735,
						727,
						742,
						764,
						741,
						740
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
					"line": 31,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L31"
				}
			],
			"typeParameters": [
				{
					"id": 765,
					"name": "TActionFn",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 766,
						"name": "ActionFn",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 766,
			"name": "ActionFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
					"line": 27,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L27"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 767,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 27,
							"character": 23,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L27"
						}
					],
					"signatures": [
						{
							"id": 768,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 769,
									"name": "contract",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			}
		},
		{
			"id": 35,
			"name": "BloctoWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
					"line": 7,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L7"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 36,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 37,
							"name": "appId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "To get advanced features and support from Blocto, you can create an appId from [blocto dashboard](https://docs.blocto.app/blocto-sdk/register-app-id)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
									"line": 11,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
									"line": 16,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37,
								38
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
							"line": 7,
							"character": 40,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L7"
						}
					]
				}
			}
		},
		{
			"id": 1060,
			"name": "ClaimedToken",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
					"line": 14,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L14"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1061,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1063,
							"name": "collectionTitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the collection."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1062,
							"name": "contractAddress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address of the NFT contract."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1071,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L56"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1072,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1074,
											"name": "description",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The description of the NFT"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
													"line": 65,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L65"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										},
										{
											"id": 1075,
											"name": "image",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An image representing the NFT."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
													"line": 70,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L70"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										},
										{
											"id": 1073,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The title of the NFT in the collection."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
													"line": 60,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L60"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1076,
											"name": "properties",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Arbitrary properties (i.e. traits) describing the NFT."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
													"line": 75,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L75"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1074,
												1075,
												1073,
												1076
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
											"line": 56,
											"character": 12,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L56"
										}
									]
								}
							}
						},
						{
							"id": 1064,
							"name": "tokenId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the token in the collection that was claimed.\nFor ERC-721 collections, this ID is unique for each claim.\nFor ERC-1155 collections, this ID is identical for all buyers of this NFT token."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1065,
							"name": "transactions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L32"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1066,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1068,
											"name": "claimExplorerUrl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The blockchain explorer URL for the claim transaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
													"line": 41,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L41"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1067,
											"name": "claimHash",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The transaction hash for the claim transaction."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
													"line": 36,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L36"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1070,
											"name": "transferExplorerUrl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The blockchain explorer URL for the transfer transaction.\nThis hash is undefined if the claim directly sent the token to the buyer's wallet."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
													"line": 53,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L53"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										},
										{
											"id": 1069,
											"name": "transferHash",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The transaction hash for the transfer transaction.\nThis hash is undefined if the claim directly sent the token to the buyer's wallet."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
													"line": 47,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L47"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1068,
												1067,
												1070,
												1069
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
											"line": 32,
											"character": 16,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L32"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1063,
								1062,
								1071,
								1064,
								1065
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
							"line": 14,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L14"
						}
					]
				}
			}
		},
		{
			"id": 172,
			"name": "Coin98WalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
					"line": 19,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L19"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 173,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 174,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting Coin98 using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
									"line": 26,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L26"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 175,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
									"line": 31,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L31"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								174,
								175
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
							"line": 19,
							"character": 40,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L19"
						}
					]
				}
			}
		},
		{
			"id": 42,
			"name": "CoinbaseWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
					"line": 16,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L16"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 43,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 44,
							"name": "qrmodal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to use the Coinbase's default QR Code modal or show the custom UI in ConnectWallet Modal\n\nThe default is "
									},
									{
										"kind": "code",
										"text": "`\"custom\"`"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
									"line": 22,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L22"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "coinbase"
									},
									{
										"type": "literal",
										"value": "custom"
									}
								]
							}
						},
						{
							"id": 45,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
									"line": 27,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								44,
								45
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
							"line": 16,
							"character": 42,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L16"
						}
					]
				}
			}
		},
		{
			"id": 663,
			"name": "ConnectEmbedProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
					"line": 32,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L32"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 664,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 670,
							"name": "auth",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enforce that users must sign in with their wallet using [auth](https://portal.thirdweb.com/auth) after connecting their wallet.\n\nThis requires the "
									},
									{
										"kind": "code",
										"text": "`authConfig`"
									},
									{
										"kind": "text",
										"text": " prop to be set on the ["
									},
									{
										"kind": "code",
										"text": "`ThirdWebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider) component."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
									"line": 79,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L79"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 671,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 672,
											"name": "loginOptional",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "specify whether signing in is optional or not.\n\nBy default it is "
													},
													{
														"kind": "code",
														"text": "`false`"
													},
													{
														"kind": "text",
														"text": " ( sign in is required ) if "
													},
													{
														"kind": "code",
														"text": "`authConfig`"
													},
													{
														"kind": "text",
														"text": " is set on ["
													},
													{
														"kind": "code",
														"text": "`ThirdWebProvider`"
													},
													{
														"kind": "text",
														"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
													"line": 85,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L85"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 673,
											"name": "onLogin",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
													"line": 89,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L89"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 674,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
															"line": 89,
															"character": 14,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L89"
														}
													],
													"signatures": [
														{
															"id": 675,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Callback to be called after user signs in with their wallet"
																	}
																]
															},
															"parameters": [
																{
																	"id": 676,
																	"name": "token",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 677,
											"name": "onLogout",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
													"line": 93,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L93"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 678,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
															"line": 93,
															"character": 15,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L93"
														}
													],
													"signatures": [
														{
															"id": 679,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Callback to be called after user signs out"
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												672,
												673,
												677
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
											"line": 79,
											"character": 9,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L79"
										}
									]
								}
							}
						},
						{
							"id": 665,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Class name to be added to the root element of ConnectEmbed"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
									"line": 36,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L36"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 680,
							"name": "onConnect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
									"line": 120,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L120"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 681,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
											"line": 120,
											"character": 14,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L120"
										}
									],
									"signatures": [
										{
											"id": 682,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback to be called on successful connection of wallet\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\n<ConnectEmbed\n onConnect={() => {\n   console.log(\"wallet connected\")\n }}\n/>\n```"
													},
													{
														"kind": "text",
														"text": "\n\nNote that this does not include the sign in, If you want to call a callback after user connects AND signs in with their wallet, use "
													},
													{
														"kind": "code",
														"text": "`auth.onLogin`"
													},
													{
														"kind": "text",
														"text": " prop instead\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\n<ConnectEmbed\n auth={{\n  onLogin: () => {\n    console.log(\"wallet connected and signed in\")\n  }\n }}\n/>\n```"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 669,
							"name": "privacyPolicyUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If provided, Embed will show a Privacy Policy message at the bottom with below link"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
									"line": 72,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L72"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 667,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "CSS styles to be applied to the root element of ConnectEmbed"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
									"line": 62,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L62"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "React.CSSProperties",
								"package": "@types/react"
							}
						},
						{
							"id": 668,
							"name": "termsOfServiceUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If provided, Embed will show a Terms of Service message at the bottom with below link"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
									"line": 67,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L67"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 666,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "theme for the ConnectEmbed\n\nIf a theme is set on the ["
									},
									{
										"kind": "code",
										"text": "`ThirdWebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider) component, it will be used as the default theme for all thirdweb components, else the default will be \"dark\"\n\ntheme can be set to either \"dark\" or \"light\" or a custom theme object.\n\nYou can also import "
									},
									{
										"kind": "code",
										"text": "`lightTheme`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`darkTheme`"
									},
									{
										"kind": "text",
										"text": " functions from "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/react`"
									},
									{
										"kind": "text",
										"text": " to use the default themes as base and overrides parts of it."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { lightTheme } from \"@thirdweb-dev/react\";\nconst customTheme = lightTheme({\n colors: {\n   modalBg: 'red'\n }\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
									"line": 57,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L57"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "literal",
										"value": "light"
									},
									{
										"type": "reference",
										"target": 182,
										"name": "Theme",
										"package": "@thirdweb-dev/react"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								670,
								665,
								680,
								669,
								667,
								668,
								666
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
							"line": 32,
							"character": 32,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L32"
						}
					]
				}
			}
		},
		{
			"id": 595,
			"name": "ConnectWalletProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
					"line": 38,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L38"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 596,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 607,
							"name": "auth",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enforce that users must sign in with their wallet using [auth](https://portal.thirdweb.com/wallets/auth) after connecting their wallet.\n\nThis requires the "
									},
									{
										"kind": "code",
										"text": "`authConfig`"
									},
									{
										"kind": "text",
										"text": " prop to be set on the ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider) component."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 141,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L141"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 608,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 609,
											"name": "loginOptional",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "specify whether signing in is optional or not.\n\nBy default it is "
													},
													{
														"kind": "code",
														"text": "`false`"
													},
													{
														"kind": "text",
														"text": " ( sign in required )  if "
													},
													{
														"kind": "code",
														"text": "`authConfig`"
													},
													{
														"kind": "text",
														"text": " is set on ["
													},
													{
														"kind": "code",
														"text": "`ThirdwebProvider`"
													},
													{
														"kind": "text",
														"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
													"line": 147,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L147"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 610,
											"name": "onLogin",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
													"line": 151,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L151"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 611,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
															"line": 151,
															"character": 14,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L151"
														}
													],
													"signatures": [
														{
															"id": 612,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Callback to be called after user signs in with their wallet"
																	}
																]
															},
															"parameters": [
																{
																	"id": 613,
																	"name": "token",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 614,
											"name": "onLogout",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
													"line": 155,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L155"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 615,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
															"line": 155,
															"character": 15,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L155"
														}
													],
													"signatures": [
														{
															"id": 616,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Callback to be called after user signs out"
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												609,
												610,
												614
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
											"line": 141,
											"character": 9,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L141"
										}
									]
								}
							}
						},
						{
							"id": 599,
							"name": "btnTitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "set custom label for the button.\n\nThe default is "
									},
									{
										"kind": "code",
										"text": "`\"Connect\"`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet btnTitle=\"Sign in\" />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 80,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 597,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "CSS class to apply to the button element\n\nFor some CSS properties, you may need to use the !important to override the default styles\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet className=\"my-custom-class\" />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 48,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L48"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 603,
							"name": "detailsBtn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 118,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L118"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 604,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
											"line": 118,
											"character": 15,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L118"
										}
									],
									"signatures": [
										{
											"id": 605,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Render a custom button to display connected wallet details instead of the default one\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\nconst address = useAddress();\n\n<ConnectWallet\n detailsBtn={() => {\n   return (\n     <button>\n       connected to {address}\n     </button>\n   )\n }}\n/>\n```"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
													"qualifiedName": "__global.JSX.Element"
												},
												"name": "JSX.Element",
												"package": "@types/react",
												"qualifiedName": "__global.JSX.Element"
											}
										}
									]
								}
							}
						},
						{
							"id": 626,
							"name": "displayBalanceToken",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Display the balance of a token instead of the native token in ConnectWallet details button."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nimport { Base } from \"@thirdweb-dev/chains\";\n\n<ConnectWallet balanceToken={{\n   1: \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\" // show USDC balance when connected to Ethereum mainnet\n   [Base.chainId]: \"0x50c5725949A6F0c72E6C4a641F24049A917DB0Cb\", // show Dai stablecoin token balance when connected to Base mainnet\n }}\n/>\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 305,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L305"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 606,
							"name": "dropdownPosition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When user connects the wallet using ConnectWallet Modal, a \"Details Button\" is rendered. Clicking on this button opens a dropdown which opens in a certain direction relative to the Details button.\n\n"
									},
									{
										"kind": "code",
										"text": "`dropdownPosition`"
									},
									{
										"kind": "text",
										"text": " prop allows you to customize the direction the dropdown should open relative to the Details button.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet\n dropdownPosition={{\n   side: \"bottom\", // or use:  \"top\" | \"bottom\" | \"left\" | \"right\"\n   align: \"end\", // or use:  \"start\" | \"center\" | \"end\";\n }}\n />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 134,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L134"
								}
							],
							"type": {
								"type": "reference",
								"target": 715,
								"name": "DropDownPosition",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"id": 628,
							"name": "hideDisconnect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hide the \"Disconnect Wallet\" button in the ConnectWallet Dropdown.\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet hideDisconnect={true} />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 329,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L329"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 627,
							"name": "hideSwitchToPersonalWallet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hide the \"Switch to Personal wallet\" option in the wallet modal which is shown when wallet is connected to either Smart Wallet or Safe.\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet hideSwitchToPersonalWallet={true} />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 317,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L317"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 619,
							"name": "hideTestnetFaucet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hide the \"Request Testnet funds\" link in ConnectWallet dropdown which is shown when user is connected to a testnet.\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet hideTestnetFaucet={false} />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 181,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L181"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 621,
							"name": "modalSize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the size of the modal - "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`wide`"
									},
									{
										"kind": "text",
										"text": " on desktop\n\nModal size is always "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " on mobile\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`\"wide\"`"
									},
									{
										"kind": "text",
										"text": " for desktop."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 201,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L201"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "compact"
									},
									{
										"type": "literal",
										"value": "wide"
									}
								]
							}
						},
						{
							"id": 601,
							"name": "modalTitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Change the title of ConnectWallet Modal\n\nThe default is "
									},
									{
										"kind": "code",
										"text": "`\"Connect\"`"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 92,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L92"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 602,
							"name": "modalTitleIconUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replace the thirdweb icon next to modalTitle and set your own iconUrl\n\nSet to empty string to hide the icon"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 99,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L99"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 618,
							"name": "networkSelector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "customize the Network selector shown"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 166,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L166"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 686,
										"name": "NetworkSelectorProps",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "theme"
											},
											{
												"type": "literal",
												"value": "onClose"
											},
											{
												"type": "literal",
												"value": "chains"
											},
											{
												"type": "literal",
												"value": "open"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						},
						{
							"id": 629,
							"name": "onConnect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 355,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L355"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 630,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
											"line": 355,
											"character": 14,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L355"
										}
									],
									"signatures": [
										{
											"id": 631,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback to be called on successful connection of wallet\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\n<ConnectWallet\n onConnect={() => {\n   console.log(\"wallet connected\")\n }}\n/>\n```"
													},
													{
														"kind": "text",
														"text": "\n\nNote that this does not include the sign in, If you want to call a callback after user connects AND signs in with their wallet, use "
													},
													{
														"kind": "code",
														"text": "`auth.onLogin`"
													},
													{
														"kind": "text",
														"text": " prop instead\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\n<ConnectWallet\n auth={{\n  onLogin: () => {\n    console.log(\"wallet connected and signed in\")\n  }\n }}\n/>\n```"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 623,
							"name": "privacyPolicyUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "URL of the \"privacy policy\" page\n\nIf provided, Modal will show a Privacy Policy message at the bottom with below link"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet privacyPolicyUrl=\"https://your-privacy-policy-url.com\" />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 225,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L225"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 617,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "CSS styles to apply to the button element"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 161,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L161"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "React.CSSProperties",
								"package": "@types/react"
							}
						},
						{
							"id": 625,
							"name": "supportedTokens",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customize the tokens shown in the \"Send Funds\" screen for various networks.\n\nBy default, The \"Send Funds\" screen shows a few popular tokens for default chains and the native token. For other chains it only shows the native token."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "supportedTokens prop allows you to customize this list as shown below which shows  \"Dai Stablecoin\" when users wallet is connected to the \"Base\" mainnet.\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nimport { ConnectWallet } from '@thirdweb-dev/react';\nimport { Base } from '@thirdweb-dev/chains';\n\nfunction Example() {\n  return (\n\t\t<ConnectWallet\n\t\t\tsupportedTokens={{\n\t\t\t\t[Base.chainId]: [\n\t\t\t\t\t{\n\t\t\t\t\t\taddress: '0x50c5725949A6F0c72E6C4a641F24049A917DB0Cb', // token contract address\n\t\t\t\t\t\tname: 'Dai Stablecoin',\n\t\t\t\t\t\tsymbol: 'DAI',\n\t\t\t\t\t\ticon: 'https://assets.coingecko.com/coins/images/9956/small/Badge_Dai.png?1687143508',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t/>\n\t);\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 289,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L289"
								}
							],
							"type": {
								"type": "reference",
								"target": 915,
								"name": "SupportedTokens",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"id": 600,
							"name": "switchNetworkBtnTitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set a custom label for the \"Switch Network\" button"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 85,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L85"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 620,
							"name": "switchToActiveChain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to show \"Switch Network\" button if the wallet is connected,\nbut it is not connected to the "
									},
									{
										"kind": "code",
										"text": "`activeChain`"
									},
									{
										"kind": "text",
										"text": " provided in ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)\n\nPlease, note that if you support multiple networks in your app this prop should\nbe set to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " to allow users to switch between networks.\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 192,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L192"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 622,
							"name": "termsOfServiceUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "URL of the \"terms of service\" page\n\nIf provided, Modal will show a Terms of Service message at the bottom with below link"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet termsOfServiceUrl=\"https://your-terms-of-service-url.com\" />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 213,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L213"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 598,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the theme for the button and modal.\n\nBy default it is set to \"dark\" if "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " is not set on ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)\nIf a "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " is set on ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider) then that theme will be used by default which can be overridden by setting "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " prop on ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component\n\ntheme can be set to either \"dark\" or \"light\" or a custom theme object. You can also import "
									},
									{
										"kind": "code",
										"text": "`lightTheme`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`darkTheme`"
									},
									{
										"kind": "text",
										"text": " functions from "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/react`"
									},
									{
										"kind": "text",
										"text": " to use the default themes as base and overrides parts of it."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { lightTheme } from \"@thirdweb-dev/react\";\nconst customTheme = lightTheme({\n colors: {\n   modalBg: 'red'\n }\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 68,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L68"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "literal",
										"value": "light"
									},
									{
										"type": "reference",
										"target": 182,
										"name": "Theme",
										"package": "@thirdweb-dev/react"
									}
								]
							}
						},
						{
							"id": 624,
							"name": "welcomeScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customize the welcome screen. This prop is only applicable when modalSize prop is set to \"wide\". On \"wide\" Modal size, a welcome screen is shown on the right side of the modal.\n\nThis screen can be customized in two ways\n\n#### 1. Customize Metadata and Image\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet welcomeScreen={{\n title: \"your title\",\n subtitle: \"your subtitle\",\n img: {\n  src: \"https://your-image-url.png\",\n  width: 300,\n  height: 50,\n },\n}} />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n#### 2. Render Custom Component\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet\n welcomeScreen={() => {\n return <YourCustomComponent />\n}}\n/>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 256,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L256"
								}
							],
							"type": {
								"type": "reference",
								"target": 632,
								"name": "WelcomeScreen",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								607,
								599,
								597,
								603,
								626,
								606,
								628,
								627,
								619,
								621,
								601,
								602,
								618,
								629,
								623,
								617,
								625,
								600,
								620,
								622,
								598,
								624
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
							"line": 38,
							"character": 33,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L38"
						}
					]
				}
			}
		},
		{
			"id": 151,
			"name": "CoreWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
					"line": 23,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L23"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 152,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 153,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting Core using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
									"line": 30,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 154,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
									"line": 35,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								153,
								154
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
							"line": 23,
							"character": 38,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L23"
						}
					]
				}
			}
		},
		{
			"id": 158,
			"name": "CryptoDefiWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
					"line": 23,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L23"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 159,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 160,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting Defi wallet using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
									"line": 30,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 161,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
									"line": 35,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								160,
								161
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
							"line": 23,
							"character": 44,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L23"
						}
					]
				}
			}
		},
		{
			"id": 791,
			"name": "DefaultChains",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Array of default supported chains by the thirdweb SDK"
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
					"line": 163,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/thirdweb-provider.tsx#L163"
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../chains/src/index.ts",
						"qualifiedName": "defaultChains"
					},
					"name": "defaultChains",
					"package": "@thirdweb-dev/chains"
				}
			}
		},
		{
			"id": 715,
			"name": "DropDownPosition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/Details.tsx",
					"line": 78,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Details.tsx#L78"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 716,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 718,
							"name": "align",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/Details.tsx",
									"line": 80,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Details.tsx#L80"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "start"
									},
									{
										"type": "literal",
										"value": "center"
									},
									{
										"type": "literal",
										"value": "end"
									}
								]
							}
						},
						{
							"id": 717,
							"name": "side",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/Details.tsx",
									"line": 79,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Details.tsx#L79"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "top"
									},
									{
										"type": "literal",
										"value": "bottom"
									},
									{
										"type": "literal",
										"value": "left"
									},
									{
										"type": "literal",
										"value": "right"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								718,
								717
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/Details.tsx",
							"line": 78,
							"character": 31,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Details.tsx#L78"
						}
					]
				}
			}
		},
		{
			"id": 49,
			"name": "EmbeddedWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/embeddedWallet/types.ts",
					"line": 11,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/embeddedWallet/types.ts#L11"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/types.ts",
									"qualifiedName": "EmbeddedWalletAdditionalOptions"
								},
								"name": "EmbeddedWalletAdditionalOptions",
								"package": "@thirdweb-dev/wallets"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "chain"
									},
									{
										"type": "literal",
										"value": "clientId"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 50,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 52,
									"name": "auth",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Choose which auth providers to show in the wallet connection UI\n\nBy default, all auth methods are enabled, which is equivalent to setting the following:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{\n options: [\"email\", \"google\", \"apple\", \"facebook\"]\n}\n```"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/wallets/embeddedWallet/types.ts",
											"line": 31,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/embeddedWallet/types.ts#L31"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 53,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 54,
													"name": "options",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/wallets/embeddedWallet/types.ts",
															"line": 32,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/embeddedWallet/types.ts#L32"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
																"qualifiedName": "AuthOption"
															},
															"name": "AuthOption",
															"package": "@thirdweb-dev/react"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														54
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/wallet/wallets/embeddedWallet/types.ts",
													"line": 31,
													"character": 9,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/embeddedWallet/types.ts#L31"
												}
											]
										}
									}
								},
								{
									"id": 51,
									"name": "recommended",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/wallets/embeddedWallet/types.ts",
											"line": 18,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/embeddedWallet/types.ts#L18"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										52,
										51
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/embeddedWallet/types.ts",
									"line": 14,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/embeddedWallet/types.ts#L14"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 536,
			"name": "ExtensionAndQRScreensLocale",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@locale",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/types.ts",
					"line": 4,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L4"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 537,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 538,
							"name": "connectionScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 5,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L5"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 539,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 540,
											"name": "failed",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 6,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L6"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 541,
											"name": "inProgress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 7,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L7"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 542,
											"name": "instruction",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 8,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L8"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 543,
											"name": "retry",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 9,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L9"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												540,
												541,
												542,
												543
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 5,
											"character": 20,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L5"
										}
									]
								}
							}
						},
						{
							"id": 544,
							"name": "getStartedLink",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 545,
							"name": "getStartedScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L12"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 546,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 547,
											"name": "instruction",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 12,
													"character": 22,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L12"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												547
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 12,
											"character": 20,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L12"
										}
									]
								}
							}
						},
						{
							"id": 548,
							"name": "scanScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L13"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 549,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 550,
											"name": "instruction",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 13,
													"character": 16,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L13"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												550
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 13,
											"character": 14,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L13"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								538,
								544,
								545,
								548
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/types.ts",
							"line": 4,
							"character": 42,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L4"
						}
					]
				}
			}
		},
		{
			"id": 58,
			"name": "FrameWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
					"line": 8,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L8"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
									"line": 12,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
							"line": 8,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L8"
						}
					]
				}
			}
		},
		{
			"id": 64,
			"name": "LocalWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/localWallet/types.ts",
					"line": 7,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/localWallet/types.ts#L7"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 65,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 66,
							"name": "persist",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", the encrypted wallet JSON will be stored on localStorage with user's password.\nthe user will not need to enter their password again when they visit the site. Because of this, the wallet can not be auto connected.\n\nIf "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", wallet will not be stored, and no password will be required to connect.\nthe wallet will be lost when the user leaves or reloads the page.\n\nBy default, it is set to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/localWallet/types.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/localWallet/types.ts#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								66
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/localWallet/types.ts",
							"line": 7,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/localWallet/types.ts#L7"
						}
					]
				}
			}
		},
		{
			"id": 977,
			"name": "Locale",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/payments/dist/declarations/src/constants/style.d.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "en"
					},
					{
						"type": "literal",
						"value": "fr"
					},
					{
						"type": "literal",
						"value": "es"
					},
					{
						"type": "literal",
						"value": "it"
					},
					{
						"type": "literal",
						"value": "de"
					},
					{
						"type": "literal",
						"value": "ja"
					},
					{
						"type": "literal",
						"value": "ko"
					},
					{
						"type": "literal",
						"value": "zh"
					}
				]
			}
		},
		{
			"id": 70,
			"name": "MagicWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
					"line": 47,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/magic/magicLink.tsx#L47"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../wallets/src/evm/wallets/magic.ts",
							"qualifiedName": "MagicLinkAdditionalOptions"
						},
						"name": "MagicLinkAdditionalOptions",
						"package": "@thirdweb-dev/wallets"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 71,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 72,
									"name": "recommended",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
											"line": 51,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/magic/magicLink.tsx#L51"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										72
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
									"line": 47,
									"character": 68,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/magic/magicLink.tsx#L47"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 76,
			"name": "MetamaskWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
					"line": 13,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L13"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 77,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 80,
							"name": "connectionMethod",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify how the connection to metamask app should be established if the user is on a mobile device\n\nThere are two options: \"walletconnect\" and \"browser\"\n\n1. \"walletconnect\" - User will be redirected to MetaMask app and upon successful connection, user can return back to the web page.\n2. \"browser\" - User will be redirected to MetaMask app and the web page will be opened in MetaMask browser.\n\nDefault is "
									},
									{
										"kind": "code",
										"text": "`\"walletconnect\"`"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
									"line": 37,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L37"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "walletConnect"
									},
									{
										"type": "literal",
										"value": "metamaskBrowser"
									}
								]
							}
						},
						{
							"id": 78,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting MetaMask using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
									"line": 20,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 79,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
									"line": 25,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L25"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								80,
								78,
								79
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
							"line": 13,
							"character": 42,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L13"
						}
					]
				}
			}
		},
		{
			"id": 555,
			"name": "ModalConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
					"line": 143,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L143"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 556,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 564,
							"name": "auth",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The object contains the following properties to customize the authentication\n- "
									},
									{
										"kind": "code",
										"text": "`loginOptional`"
									},
									{
										"kind": "text",
										"text": " - specify whether signing in is optional or not. By default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " ( Sign in is required ) if "
									},
									{
										"kind": "code",
										"text": "`authConfig`"
									},
									{
										"kind": "text",
										"text": " is set on ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)\n- "
									},
									{
										"kind": "code",
										"text": "`onLogin`"
									},
									{
										"kind": "text",
										"text": " - Callback to be called after user signs in with their wallet\n- "
									},
									{
										"kind": "code",
										"text": "`onLogout`"
									},
									{
										"kind": "text",
										"text": " - Callback to be called after user signs out"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
									"line": 225,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L225"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 565,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 566,
											"name": "loginOptional",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
													"line": 226,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L226"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 567,
											"name": "onLogin",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
													"line": 227,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L227"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 568,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
															"line": 227,
															"character": 14,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L227"
														}
													],
													"signatures": [
														{
															"id": 569,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 570,
																	"name": "token",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 571,
											"name": "onLogout",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
													"line": 228,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L228"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 572,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
															"line": 228,
															"character": 15,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L228"
														}
													],
													"signatures": [
														{
															"id": 573,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												566,
												567,
												571
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
											"line": 225,
											"character": 9,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L225"
										}
									]
								}
							}
						},
						{
							"id": 559,
							"name": "modalSize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the size of the modal - "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`wide`"
									},
									{
										"kind": "text",
										"text": " on desktop\n\nModal size is always "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " on mobile\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`\"wide\"`"
									},
									{
										"kind": "text",
										"text": " for desktop."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
									"line": 173,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L173"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "wide"
									},
									{
										"type": "literal",
										"value": "compact"
									}
								]
							}
						},
						{
							"id": 574,
							"name": "onConnect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
									"line": 235,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L235"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 575,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
											"line": 235,
											"character": 14,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L235"
										}
									],
									"signatures": [
										{
											"id": 576,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback to be called on successful connection of wallet\n\nNote that this does not include the sign in, If you want to call a callback after user connects AND signs in with their wallet, use "
													},
													{
														"kind": "code",
														"text": "`auth.onLogin`"
													},
													{
														"kind": "text",
														"text": " instead"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 561,
							"name": "privacyPolicyUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "URL of the \"privacy policy\" page\n\nIf provided, Modal will show a Privacy Policy message at the bottom with below link"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
									"line": 185,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L185"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 560,
							"name": "termsOfServiceUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "URL of the \"terms of service\" page\n\nIf provided, Modal will show a Terms of Service message at the bottom with below link"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
									"line": 179,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L179"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 558,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the theme for the Modal\n\nBy default it is set to \"dark\" if "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " is not set on ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)\nIf a "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " is set on ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider) then that theme will be used by default\n\ntheme can be set to either "
									},
									{
										"kind": "code",
										"text": "`\"dark\"`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`\"light\"`"
									},
									{
										"kind": "text",
										"text": " or a custom theme object. You can also import "
									},
									{
										"kind": "code",
										"text": "`lightTheme`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`darkTheme`"
									},
									{
										"kind": "text",
										"text": " functions from "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/react`"
									},
									{
										"kind": "text",
										"text": " to use the default themes as base and overrides parts of it.\n\n"
									},
									{
										"kind": "code",
										"text": "```ts\nimport { lightTheme } from \"@thirdweb-dev/react\";\nconst customTheme = lightTheme({\n colors: {\n   modalBg: 'red'\n }\n})\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
									"line": 165,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L165"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "light"
									},
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "reference",
										"target": 182,
										"name": "Theme",
										"package": "@thirdweb-dev/react"
									}
								]
							}
						},
						{
							"id": 557,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Title of the Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
									"line": 147,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L147"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 563,
							"name": "titleIconUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replace the thirdweb icon next to modalTitle and set your own iconUrl"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
									"line": 218,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L218"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 562,
							"name": "welcomeScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customize the welcome screen. This is only applicable when "
									},
									{
										"kind": "code",
										"text": "`modalSize`"
									},
									{
										"kind": "text",
										"text": " is set to \"wide\".\nOn \"wide\" Modal size, a welcome screen is shown on the right side of the modal.\n\nThis screen can be customized in two ways\n\n#### 1. Customize Metadata and Image\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst welcomeScreen = {\n title: \"your title\",\n subtitle: \"your subtitle\",\n img: {\n  src: \"https://your-image-url.png\",\n  width: 300,\n  height: 50,\n },\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n#### 2. Render Custom Component\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst welcomeScreen = () => {\n return <YourCustomComponent />\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
									"line": 214,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L214"
								}
							],
							"type": {
								"type": "reference",
								"target": 632,
								"name": "WelcomeScreen",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								564,
								559,
								574,
								561,
								560,
								558,
								557,
								563,
								562
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
							"line": 143,
							"character": 33,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L143"
						}
					]
				}
			}
		},
		{
			"id": 704,
			"name": "NetworkSelectorChainProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
					"line": 37,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L37"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 705,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 706,
							"name": "chain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "`Chain`"
									},
									{
										"kind": "text",
										"text": " object for the chain to be displayed"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 41,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L41"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../chains/src/types.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "@thirdweb-dev/chains"
							}
						},
						{
							"id": 712,
							"name": "close",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 57,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L57"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 713,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 57,
											"character": 10,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L57"
										}
									],
									"signatures": [
										{
											"id": 714,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "function to close the modal"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 707,
							"name": "switchChain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 45,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L45"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 708,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 45,
											"character": 15,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L45"
										}
									],
									"signatures": [
										{
											"id": 709,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "function to be called for switching to the given chain"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 711,
							"name": "switchFailed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "flag indicating whether the SDK failed to switch to the given chain"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 53,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L53"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 710,
							"name": "switching",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "flag indicating whether the SDK is currently switching to the given chain"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 49,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								706,
								712,
								707,
								711,
								710
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
							"line": 37,
							"character": 40,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L37"
						}
					]
				}
			}
		},
		{
			"id": 686,
			"name": "NetworkSelectorProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
					"line": 60,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L60"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 687,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 693,
							"name": "chains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of chains to be displayed in the modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 94,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L94"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						},
						{
							"id": 689,
							"name": "onClose",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 86,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L86"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 690,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 86,
											"character": 12,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L86"
										}
									],
									"signatures": [
										{
											"id": 691,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback to be called when modal is closed by the user"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 701,
							"name": "onCustomClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 118,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L118"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 702,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 118,
											"character": 18,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L118"
										}
									],
									"signatures": [
										{
											"id": 703,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback to be called when the \"Add Custom Network\" button is clicked\n\nThe \"Add Custom Network\" button is displayed at the bottom of the modal - only if this prop is provided"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 697,
							"name": "onSwitch",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 112,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L112"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 698,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 112,
											"character": 13,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L112"
										}
									],
									"signatures": [
										{
											"id": 699,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback to be called when a chain is successfully switched"
													}
												]
											},
											"parameters": [
												{
													"id": 700,
													"name": "chain",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The new chain that is switched to"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../chains/src/types.ts",
															"qualifiedName": "Chain"
														},
														"name": "Chain",
														"package": "@thirdweb-dev/chains"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 692,
							"name": "open",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify whether the Modal should be open or closed"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 90,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L90"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 694,
							"name": "popularChains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of chains to be displayed under \"Popular\" section"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 98,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L98"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						},
						{
							"id": 695,
							"name": "recentChains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of chains to be displayed under \"Recent\" section"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 102,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L102"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						},
						{
							"id": 696,
							"name": "renderChain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Override how the chain button is rendered in the Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 106,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L106"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FC"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 704,
										"name": "NetworkSelectorChainProps",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "React.FC",
								"package": "@types/react"
							}
						},
						{
							"id": 688,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Theme to use in Modal\n\nEither specify string \"dark\" or \"light\" to use the default themes, or provide a custom theme object.\n\nYou can also use "
									},
									{
										"kind": "code",
										"text": "`darkTheme`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`lightTheme`"
									},
									{
										"kind": "text",
										"text": " functions to use the default themes as base and override it."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nimport { darkTheme } from \"@thirdweb-dev/react\";\n\n<NetworkSelector\n open={true}\n theme={darkTheme({\n   colors: {\n     modalBg: \"#000000\",\n   }\n })}\n/>\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 82,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L82"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "literal",
										"value": "light"
									},
									{
										"type": "reference",
										"target": 182,
										"name": "Theme",
										"package": "@thirdweb-dev/react"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								693,
								689,
								701,
								697,
								692,
								694,
								695,
								696,
								688
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
							"line": 60,
							"character": 35,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L60"
						}
					]
				}
			}
		},
		{
			"id": 144,
			"name": "OKXWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
					"line": 8,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L8"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 145,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 146,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting OKX using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
									"line": 15,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 147,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
									"line": 20,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								146,
								147
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
							"line": 8,
							"character": 37,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L8"
						}
					]
				}
			}
		},
		{
			"id": 919,
			"name": "OneKeyWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx",
					"line": 19,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx#L19"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 920,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 921,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting OneKey wallet using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx",
									"line": 26,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx#L26"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 922,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx",
									"line": 31,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx#L31"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								921,
								922
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx",
							"line": 19,
							"character": 40,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx#L19"
						}
					]
				}
			}
		},
		{
			"id": 1013,
			"name": "PaperCheckoutProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
					"line": 48,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L48"
				}
			],
			"typeParameters": [
				{
					"id": 1048,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/payments/interfaces/CustomContract.ts",
							"qualifiedName": "ContractType"
						},
						"name": "ContractType",
						"package": "@thirdweb-dev/react"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "src/payments/interfaces/CustomContract.ts",
					"qualifiedName": "CustomContractArgWrapper"
				},
				"typeArguments": [
					{
						"type": "reflection",
						"declaration": {
							"id": 1014,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1023,
									"name": "appName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 59,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L59"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1015,
									"name": "checkoutId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 51,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L51"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1047,
									"name": "children",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 73,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L73"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "React.ReactNode",
										"package": "@types/react"
									}
								},
								{
									"id": 1016,
									"name": "display",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 52,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L52"
										}
									],
									"type": {
										"type": "reference",
										"target": 1007,
										"name": "PaperCheckoutDisplay",
										"package": "@thirdweb-dev/react"
									}
								},
								{
									"id": 1021,
									"name": "eligibilityMethod",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 57,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L57"
										}
									],
									"type": {
										"type": "reference",
										"target": 978,
										"name": "ReadMethodCallType",
										"package": "@thirdweb-dev/react"
									}
								},
								{
									"id": 1018,
									"name": "emailAddress",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 54,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L54"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1022,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 58,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L58"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 1020,
									"name": "mintMethod",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 56,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L56"
										}
									],
									"type": {
										"type": "reference",
										"target": 982,
										"name": "WriteMethodCallType",
										"package": "@thirdweb-dev/react"
									}
								},
								{
									"id": 1027,
									"name": "onCloseCheckout",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 61,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L61"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1028,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
													"line": 61,
													"character": 24,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L61"
												}
											],
											"signatures": [
												{
													"id": 1029,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 1024,
									"name": "onOpenCheckout",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 60,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L60"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1025,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
													"line": 60,
													"character": 23,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L60"
												}
											],
											"signatures": [
												{
													"id": 1026,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 1030,
									"name": "onPaymentSuccess",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 62,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L62"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1031,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
													"line": 62,
													"character": 25,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L62"
												}
											],
											"signatures": [
												{
													"id": 1032,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1033,
															"name": "result",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1054,
																"name": "PaymentSuccessResult",
																"package": "@thirdweb-dev/react"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 1034,
									"name": "onTransferSuccess",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 63,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L63"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1035,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
													"line": 63,
													"character": 26,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L63"
												}
											],
											"signatures": [
												{
													"id": 1036,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1037,
															"name": "result",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1056,
																"name": "TransferSuccessResult",
																"package": "@thirdweb-dev/react"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 1038,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 64,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L64"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1039,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1045,
													"name": "borderRadius",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
															"line": 70,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L70"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1043,
													"name": "colorBackground",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
															"line": 68,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L68"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1042,
													"name": "colorPrimary",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
															"line": 67,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L67"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1044,
													"name": "colorText",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
															"line": 69,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L69"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1046,
													"name": "fontFamily",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
															"line": 71,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L71"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1041,
													"name": "height",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
															"line": 66,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L66"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1040,
													"name": "width",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
															"line": 65,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L65"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1045,
														1043,
														1042,
														1044,
														1046,
														1041,
														1040
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
													"line": 64,
													"character": 16,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L64"
												}
											]
										}
									}
								},
								{
									"id": 1019,
									"name": "quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 55,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L55"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1017,
									"name": "recipientWalletAddress",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
											"line": 53,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L53"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1023,
										1015,
										1047,
										1016,
										1021,
										1018,
										1022,
										1020,
										1027,
										1024,
										1030,
										1034,
										1038,
										1019,
										1017
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
									"line": 50,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L50"
								}
							]
						}
					},
					{
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					}
				],
				"name": "CustomContractArgWrapper",
				"package": "@thirdweb-dev/react"
			}
		},
		{
			"id": 972,
			"name": "PaperUser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/payments/dist/declarations/src/interfaces/PaperUser.d.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 973,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 976,
							"name": "accessCode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user's access code. Will only be set if [clientId] was provided. This can be used to query about the user details."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/payments/dist/declarations/src/interfaces/PaperUser.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 974,
							"name": "emailAddress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user's email address.\nThis address is case-insensitive (i.e. different capitalizations map to the same wallet)."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/payments/dist/declarations/src/interfaces/PaperUser.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 975,
							"name": "walletAddress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Paper Wallet address associated with this user's email address."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/payments/dist/declarations/src/interfaces/PaperUser.d.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								976,
								974,
								975
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaperUser.d.ts",
							"line": 1,
							"character": 24
						}
					]
				}
			}
		},
		{
			"id": 968,
			"name": "PaymentsSDKError",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 969,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 970,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An enum representing the error encountered.\nThe value is a human-readable, English message describing the error."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 951,
										"name": "PaymentsSDKErrorCode",
										"package": "@thirdweb-dev/payments"
									},
									{
										"type": "reference",
										"target": 960,
										"name": "PayWithCryptoErrorCode",
										"package": "@thirdweb-dev/payments"
									}
								]
							}
						},
						{
							"id": 971,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								970,
								971
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/payments/dist/declarations/src/interfaces/PaymentsSdkError.d.ts",
							"line": 1,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 93,
			"name": "PhantomWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
					"line": 11,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L11"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 94,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 95,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", the wallet will be tagged as \"recommended\" in ConnectWallet Modal. Default is "
									},
									{
										"kind": "code",
										"text": "`false`"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
									"line": 15,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								95
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
							"line": 11,
							"character": 41,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L11"
						}
					]
				}
			}
		},
		{
			"id": 165,
			"name": "RabbyWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
					"line": 8,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L8"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 166,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 167,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting Rabby using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
									"line": 15,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 168,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
									"line": 20,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								167,
								168
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
							"line": 8,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L8"
						}
					]
				}
			}
		},
		{
			"id": 99,
			"name": "RainbowWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
					"line": 23,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L23"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 100,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 101,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting Rainbow using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
									"line": 30,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 102,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
									"line": 35,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								101,
								102
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
							"line": 23,
							"character": 41,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L23"
						}
					]
				}
			}
		},
		{
			"id": 978,
			"name": "ReadMethodCallType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This specifies the way a method should be called.\n\nNote that the argument names should match the argument names in your contract.\n\nExample:\n"
					},
					{
						"kind": "code",
						"text": "```json\n {\n   name: \"claim\",\n   args: { _recipient: \"0x...\", _quantity: 2 }\n }\n```"
					},
					{
						"kind": "text",
						"text": "\n\nCorresponds to the following function stub in solidity:\n"
					},
					{
						"kind": "code",
						"text": "```solidity\nfunction claim(address _recipient, uint256 _quantity)\n```"
					},
					{
						"kind": "text",
						"text": "\n\nFor more on the types of arguments you can pass, see ArgumentMapType"
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/payments/interfaces/CustomContract.ts",
					"line": 114,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/CustomContract.ts#L114"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 979,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 981,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/payments/interfaces/CustomContract.ts",
									"line": 116,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/CustomContract.ts#L116"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/payments/interfaces/CustomContract.ts",
									"qualifiedName": "ArgumentMapType"
								},
								"name": "ArgumentMapType",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"id": 980,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/payments/interfaces/CustomContract.ts",
									"line": 115,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/CustomContract.ts#L115"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								981,
								980
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/payments/interfaces/CustomContract.ts",
							"line": 114,
							"character": 33,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/CustomContract.ts#L114"
						}
					]
				}
			}
		},
		{
			"id": 106,
			"name": "SafeWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
					"line": 20,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L20"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 107,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 108,
							"name": "personalWallets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of personalWallets to show in ConnectWallet Modal to use with SafeWallet"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
									"line": 24,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L24"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../react-core/src/core/types/wallet.ts",
										"qualifiedName": "WalletConfig"
									},
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "WalletConfig",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 109,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
									"line": 29,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L29"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								108,
								109
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
							"line": 20,
							"character": 38,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L20"
						}
					]
				}
			}
		},
		{
			"id": 114,
			"name": "SmartWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/smartWallet/types.ts",
					"line": 6,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/smartWallet/types.ts#L6"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Omit"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../wallets/src/evm/connectors/smart-wallet/types.ts",
							"qualifiedName": "SmartWalletConfig"
						},
						"name": "SmartWalletConfig",
						"package": "@thirdweb-dev/wallets"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "chain"
							},
							{
								"type": "literal",
								"value": "clientId"
							},
							{
								"type": "literal",
								"value": "secretKey"
							}
						]
					}
				],
				"name": "Omit",
				"package": "typescript"
			}
		},
		{
			"id": 915,
			"name": "SupportedTokens",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
					"line": 32,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L32"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 2,
							"name": "TokenInfo",
							"package": "@thirdweb-dev/react"
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 182,
			"name": "Theme",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@theme",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 51,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L51"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 183,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 185,
							"name": "colors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/design-system/index.ts",
									"line": 53,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L53"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 186,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 193,
											"name": "accentButtonBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 63,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L63"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 194,
											"name": "accentButtonText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 64,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L64"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189,
											"name": "accentText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 56,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L56"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 211,
											"name": "borderColor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 89,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L89"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215,
											"name": "connectedButtonBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 95,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L95"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216,
											"name": "connectedButtonBgHover",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 96,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L96"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190,
											"name": "danger",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 58,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L58"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 201,
											"name": "dropdownBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 74,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L74"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 204,
											"name": "inputAutofillBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 79,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L79"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 200,
											"name": "modalBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 73,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L73"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 192,
											"name": "modalOverlayBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 61,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L61"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 195,
											"name": "primaryButtonBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 66,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L66"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 196,
											"name": "primaryButtonText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 67,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L67"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 187,
											"name": "primaryText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 54,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L54"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 205,
											"name": "scrollbarBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 80,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L80"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 197,
											"name": "secondaryButtonBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 69,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L69"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 199,
											"name": "secondaryButtonHoverBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 71,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L71"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 198,
											"name": "secondaryButtonText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 70,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L70"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 208,
											"name": "secondaryIconColor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 85,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L85"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 209,
											"name": "secondaryIconHoverBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 86,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L86"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 210,
											"name": "secondaryIconHoverColor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 87,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L87"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188,
											"name": "secondaryText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 55,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L55"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 214,
											"name": "selectedTextBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 93,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L93"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 213,
											"name": "selectedTextColor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 92,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L92"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 207,
											"name": "separatorLine",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 83,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L83"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 212,
											"name": "skeletonBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 90,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L90"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 191,
											"name": "success",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 59,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L59"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 202,
											"name": "tooltipBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 76,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L76"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 203,
											"name": "tooltipText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 77,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L77"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 206,
											"name": "walletSelectorButtonHoverBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 81,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L81"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												193,
												194,
												189,
												211,
												215,
												216,
												190,
												201,
												204,
												200,
												192,
												195,
												196,
												187,
												205,
												197,
												199,
												198,
												208,
												209,
												210,
												188,
												214,
												213,
												207,
												212,
												191,
												202,
												203,
												206
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/design-system/index.ts",
											"line": 53,
											"character": 10,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L53"
										}
									]
								}
							}
						},
						{
							"id": 217,
							"name": "fontFamily",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/design-system/index.ts",
									"line": 98,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L98"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 184,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/design-system/index.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L52"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "light"
									},
									{
										"type": "literal",
										"value": "dark"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								185,
								217,
								184
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/design-system/index.ts",
							"line": 51,
							"character": 20,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L51"
						}
					]
				}
			}
		},
		{
			"id": 218,
			"name": "ThemeOverrides",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@theme",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 161,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L161"
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Exclude"
					},
					"typeArguments": [
						{
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 182,
								"name": "Theme",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"type": "literal",
							"value": "type"
						}
					],
					"name": "Exclude",
					"package": "typescript"
				},
				"templateType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Partial"
					},
					"typeArguments": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": -1,
								"name": "key",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 182,
								"name": "Theme",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"name": "Partial",
					"package": "typescript"
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 228,
			"name": "ThirdwebLocale",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@locale",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/types.ts",
					"line": 19,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L19"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 229,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 230,
							"name": "connectWallet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L20"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 231,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 232,
											"name": "agreement",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 21,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L21"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 233,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 234,
															"name": "and",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 22,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L22"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 235,
															"name": "prefix",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 23,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L23"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 236,
															"name": "privacyPolicy",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 24,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L24"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 237,
															"name": "termsOfService",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 25,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L25"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																234,
																235,
																236,
																237
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 21,
															"character": 15,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L21"
														}
													]
												}
											}
										},
										{
											"id": 239,
											"name": "backupWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 28,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L28"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 240,
											"name": "confirmInWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 29,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L29"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 241,
											"name": "connectAWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 30,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L30"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 242,
											"name": "connectedToSmartWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 31,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L31"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 243,
											"name": "connecting",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 32,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L32"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 244,
											"name": "continueAsGuest",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 33,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L33"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 245,
											"name": "copyAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 34,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L34"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 246,
											"name": "currentNetwork",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 35,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L35"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 247,
											"name": "defaultButtonTitle",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 36,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L36"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 248,
											"name": "defaultModalTitle",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 37,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L37"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 249,
											"name": "disconnectWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 38,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L38"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 250,
											"name": "download",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 39,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L39"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 251,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 252,
															"name": "android",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 39,
																	"character": 16,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L39"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 253,
															"name": "chrome",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 39,
																	"character": 33,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L39"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 254,
															"name": "iOS",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 39,
																	"character": 49,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L39"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																252,
																253,
																254
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 39,
															"character": 14,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L39"
														}
													]
												}
											}
										},
										{
											"id": 255,
											"name": "getStarted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 40,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L40"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 238,
											"name": "goBackButton",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 27,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L27"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 256,
											"name": "guest",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 41,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L41"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 257,
											"name": "guestWalletWarning",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 42,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L42"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258,
											"name": "installed",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 43,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L43"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259,
											"name": "networkSelector",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 44,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L44"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 260,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 261,
															"name": "addCustomNetwork",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 45,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L45"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 262,
															"name": "allNetworks",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 46,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L46"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 263,
															"name": "categoryLabel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 47,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L47"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 264,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 265,
																			"name": "others",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 48,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L48"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 266,
																			"name": "popular",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 49,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L49"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 267,
																			"name": "recentlyUsed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 50,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L50"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				265,
																				266,
																				267
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 47,
																			"character": 21,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L47"
																		}
																	]
																}
															}
														},
														{
															"id": 268,
															"name": "failedToSwitch",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 52,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L52"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 269,
															"name": "inputPlaceholder",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 53,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L53"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 270,
															"name": "loading",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 54,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L54"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 271,
															"name": "mainnets",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 55,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L55"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 272,
															"name": "testnets",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 56,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L56"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 273,
															"name": "title",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 57,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L57"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																261,
																262,
																263,
																268,
																269,
																270,
																271,
																272,
																273
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 44,
															"character": 21,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L44"
														}
													]
												}
											}
										},
										{
											"id": 274,
											"name": "newToWallets",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 59,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L59"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 275,
											"name": "or",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 60,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L60"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 276,
											"name": "personalWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 61,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L61"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 277,
											"name": "receive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 62,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L62"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 278,
											"name": "receiveFundsScreen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 63,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L63"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 279,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 280,
															"name": "instruction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 63,
																	"character": 26,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L63"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 281,
															"name": "title",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 63,
																	"character": 47,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L63"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																280,
																281
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 63,
															"character": 24,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L63"
														}
													]
												}
											}
										},
										{
											"id": 282,
											"name": "recommended",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 64,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L64"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 283,
											"name": "requestTestnetFunds",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 65,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L65"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 284,
											"name": "send",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 66,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L66"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 285,
											"name": "sendFundsScreen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 67,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L67"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 286,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 287,
															"name": "amount",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 68,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L68"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 288,
															"name": "insufficientFunds",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 69,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L69"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 289,
															"name": "invalidAddress",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 70,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L70"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 290,
															"name": "noTokensFound",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 71,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L71"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 291,
															"name": "searchToken",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 72,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L72"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 292,
															"name": "selectTokenTitle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 73,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L73"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 293,
															"name": "sendTo",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 74,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L74"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 294,
															"name": "sending",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 75,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L75"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 295,
															"name": "submitButton",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 76,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L76"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 296,
															"name": "successMessage",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 77,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L77"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 297,
															"name": "title",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 78,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L78"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 298,
															"name": "token",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 79,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L79"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 299,
															"name": "transactionFailed",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 80,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L80"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 300,
															"name": "transactionRejected",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 81,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L81"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																287,
																288,
																289,
																290,
																291,
																292,
																293,
																294,
																295,
																296,
																297,
																298,
																299,
																300
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 67,
															"character": 21,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L67"
														}
													]
												}
											}
										},
										{
											"id": 301,
											"name": "signIn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 83,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L83"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 302,
											"name": "signatureScreen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 84,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L84"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 303,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 304,
															"name": "instructionScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 85,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L85"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 305,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 309,
																			"name": "disconnectWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 89,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L89"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 306,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 86,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L86"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 307,
																			"name": "signInButton",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 87,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L87"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 308,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 88,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L88"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				309,
																				306,
																				307,
																				308
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 85,
																			"character": 25,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L85"
																		}
																	]
																}
															}
														},
														{
															"id": 310,
															"name": "signingScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 91,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L91"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 311,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 312,
																			"name": "approveTransactionInSafe",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 92,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L92"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 313,
																			"name": "failedToSignIn",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 93,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L93"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 314,
																			"name": "inProgress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 94,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L94"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 315,
																			"name": "prompt",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 95,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L95"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 316,
																			"name": "promptForSafe",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 96,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L96"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 317,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 97,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L97"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 318,
																			"name": "tryAgain",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 98,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L98"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				312,
																				313,
																				314,
																				315,
																				316,
																				317,
																				318
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 91,
																			"character": 21,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L91"
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																304,
																310
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 84,
															"character": 21,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L84"
														}
													]
												}
											}
										},
										{
											"id": 319,
											"name": "smartWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 101,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L101"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 320,
											"name": "switchAccount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 102,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L102"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 321,
											"name": "switchNetwork",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 103,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L103"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 322,
											"name": "switchTo",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 104,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L104"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 323,
											"name": "switchingNetwork",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 105,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L105"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 324,
											"name": "transactionHistory",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 106,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L106"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 325,
											"name": "welcomeScreen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 107,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L107"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 326,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 327,
															"name": "defaultSubtitle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 107,
																	"character": 21,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L107"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 328,
															"name": "defaultTitle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 107,
																	"character": 46,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L107"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																327,
																328
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 107,
															"character": 19,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L107"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												232,
												239,
												240,
												241,
												242,
												243,
												244,
												245,
												246,
												247,
												248,
												249,
												250,
												255,
												238,
												256,
												257,
												258,
												259,
												274,
												275,
												276,
												277,
												278,
												282,
												283,
												284,
												285,
												301,
												302,
												319,
												320,
												321,
												322,
												323,
												324,
												325
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 20,
											"character": 17,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L20"
										}
									]
								}
							}
						},
						{
							"id": 329,
							"name": "wallets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 109,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L109"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 330,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 331,
											"name": "coin98Wallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 110,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L110"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 332,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 333,
															"name": "connectionScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 111,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L111"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 334,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 335,
																			"name": "failed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 112,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L112"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 336,
																			"name": "inProgress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 113,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L113"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 337,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 114,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L114"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 338,
																			"name": "retry",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 115,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L115"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				335,
																				336,
																				337,
																				338
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 111,
																			"character": 24,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L111"
																		}
																	]
																}
															}
														},
														{
															"id": 339,
															"name": "getStartedLink",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 117,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L117"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 340,
															"name": "getStartedScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 118,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L118"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 341,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 342,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 118,
																					"character": 26,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L118"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				342
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 118,
																			"character": 24,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L118"
																		}
																	]
																}
															}
														},
														{
															"id": 343,
															"name": "scanScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 119,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L119"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 344,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 345,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 119,
																					"character": 20,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L119"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				345
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 119,
																			"character": 18,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L119"
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																333,
																339,
																340,
																343
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 110,
															"character": 18,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L110"
														}
													]
												}
											}
										},
										{
											"id": 346,
											"name": "coinbaseWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 121,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L121"
												}
											],
											"type": {
												"type": "reference",
												"target": 536,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 347,
											"name": "coreWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 122,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L122"
												}
											],
											"type": {
												"type": "reference",
												"target": 536,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 348,
											"name": "cryptoDefiWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 123,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L123"
												}
											],
											"type": {
												"type": "reference",
												"target": 536,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 349,
											"name": "embeddedWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 124,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L124"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 350,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 351,
															"name": "createPassword",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 125,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L125"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 352,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 353,
																			"name": "confirmation",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 126,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L126"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 354,
																			"name": "failedToSetPassword",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 127,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L127"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 355,
																			"name": "inputPlaceholder",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 128,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L128"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 356,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 129,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L129"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 357,
																			"name": "saveInstruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 130,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L130"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 358,
																			"name": "submitButton",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 131,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L131"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 359,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 132,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L132"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				353,
																				354,
																				355,
																				356,
																				357,
																				358,
																				359
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 125,
																			"character": 22,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L125"
																		}
																	]
																}
															}
														},
														{
															"id": 360,
															"name": "emailLoginScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 134,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L134"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 361,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 362,
																			"name": "enterCodeSendTo",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 135,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L135"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 363,
																			"name": "enterRecoveryCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 136,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L136"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 364,
																			"name": "failedToSendCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 137,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L137"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 365,
																			"name": "invalidCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 138,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L138"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 366,
																			"name": "invalidCodeOrRecoveryCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 139,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L139"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 367,
																			"name": "newDeviceDetected",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 140,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L140"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 368,
																			"name": "resendCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 141,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L141"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 369,
																			"name": "sendingCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 142,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L142"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 370,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 143,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L143"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 371,
																			"name": "verify",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 144,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L144"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				362,
																				363,
																				364,
																				365,
																				366,
																				367,
																				368,
																				369,
																				370,
																				371
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 134,
																			"character": 24,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L134"
																		}
																	]
																}
															}
														},
														{
															"id": 372,
															"name": "emailPlaceholder",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 146,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L146"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 373,
															"name": "emailRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 147,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L147"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 374,
															"name": "enterPassword",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 148,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L148"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 375,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 376,
																			"name": "inputPlaceholder",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 149,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L149"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 377,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 150,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L150"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 378,
																			"name": "submitButton",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 151,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L151"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 379,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 152,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L152"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 380,
																			"name": "wrongPassword",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 153,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L153"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				376,
																				377,
																				378,
																				379,
																				380
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 148,
																			"character": 21,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L148"
																		}
																	]
																}
															}
														},
														{
															"id": 381,
															"name": "invalidEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 155,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L155"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 382,
															"name": "signIn",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 156,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L156"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 383,
															"name": "signInWithApple",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 157,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L157"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 384,
															"name": "signInWithFacebook",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 158,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L158"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 385,
															"name": "signInWithGoogle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 159,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L159"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 386,
															"name": "socialLoginScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 160,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L160"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 387,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 388,
																			"name": "failed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 161,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L161"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 389,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 162,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L162"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 390,
																			"name": "retry",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 163,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L163"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 391,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 164,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L164"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				388,
																				389,
																				390,
																				391
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 160,
																			"character": 25,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L160"
																		}
																	]
																}
															}
														},
														{
															"id": 392,
															"name": "submitEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 166,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L166"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																351,
																360,
																372,
																373,
																374,
																381,
																382,
																383,
																384,
																385,
																386,
																392
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 124,
															"character": 20,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L124"
														}
													]
												}
											}
										},
										{
											"id": 393,
											"name": "frameWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 168,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L168"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 394,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 395,
															"name": "connectionFailedScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 169,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L169"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 396,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 397,
																			"name": "description",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 170,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L170"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 398,
																			"name": "downloadFrame",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 171,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L171"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 399,
																			"name": "supportLink",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 172,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L172"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 400,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 173,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L173"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				397,
																				398,
																				399,
																				400
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 169,
																			"character": 30,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L169"
																		}
																	]
																}
															}
														},
														{
															"id": 401,
															"name": "connectionScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 175,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L175"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 402,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 403,
																			"name": "failed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 176,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L176"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 404,
																			"name": "inProgress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 177,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L177"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 405,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 178,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L178"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 406,
																			"name": "retry",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 179,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L179"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				403,
																				404,
																				405,
																				406
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 175,
																			"character": 24,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L175"
																		}
																	]
																}
															}
														},
														{
															"id": 407,
															"name": "getStartedLink",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 181,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L181"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 408,
															"name": "getStartedScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 182,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L182"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 409,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 410,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 182,
																					"character": 26,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L182"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				410
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 182,
																			"character": 24,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L182"
																		}
																	]
																}
															}
														},
														{
															"id": 411,
															"name": "scanScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 183,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L183"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 412,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 413,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 183,
																					"character": 20,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L183"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				413
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 183,
																			"character": 18,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L183"
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																395,
																401,
																407,
																408,
																411
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 168,
															"character": 17,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L168"
														}
													]
												}
											}
										},
										{
											"id": 414,
											"name": "localWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 185,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L185"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 415,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 416,
															"name": "confirmPasswordLabel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 186,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L186"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 417,
															"name": "createScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 187,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L187"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 418,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 419,
																			"name": "connecting",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 188,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L188"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 420,
																			"name": "createNewWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 189,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L189"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 421,
																			"name": "importWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 190,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L190"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 422,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 191,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L191"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				419,
																				420,
																				421,
																				422
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 187,
																			"character": 20,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L187"
																		}
																	]
																}
															}
														},
														{
															"id": 423,
															"name": "enterYourPassword",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 193,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L193"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 424,
															"name": "exportScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 194,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L194"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 425,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 426,
																			"name": "description1",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 195,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L195"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 427,
																			"name": "description2",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 196,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L196"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 428,
																			"name": "download",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 197,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L197"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 429,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 198,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L198"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 430,
																			"name": "walletAddress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 199,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L199"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				426,
																				427,
																				428,
																				429,
																				430
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 194,
																			"character": 20,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L194"
																		}
																	]
																}
															}
														},
														{
															"id": 431,
															"name": "importScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 201,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L201"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 432,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 433,
																			"name": "description1",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 202,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L202"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 434,
																			"name": "description2",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 203,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L203"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 435,
																			"name": "import",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 204,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L204"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 436,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 205,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L205"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 437,
																			"name": "uploadJSON",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 206,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L206"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 438,
																			"name": "uploadedSuccessfully",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 207,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L207"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				433,
																				434,
																				435,
																				436,
																				437,
																				438
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 201,
																			"character": 20,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L201"
																		}
																	]
																}
															}
														},
														{
															"id": 439,
															"name": "passwordLabel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 209,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L209"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 440,
															"name": "reconnectScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 210,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L210"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 441,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 442,
																			"name": "continue",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 211,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L211"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 443,
																			"name": "createNewWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 212,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L212"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 444,
																			"name": "savedWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 213,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L213"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 445,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 214,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L214"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				442,
																				443,
																				444,
																				445
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 210,
																			"character": 23,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L210"
																		}
																	]
																}
															}
														},
														{
															"id": 446,
															"name": "warningScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 216,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L216"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 447,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 448,
																			"name": "backupWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 217,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L217"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 449,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 218,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L218"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 450,
																			"name": "warning",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 219,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L219"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				448,
																				449,
																				450
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 216,
																			"character": 21,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L216"
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																416,
																417,
																423,
																424,
																431,
																439,
																440,
																446
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 185,
															"character": 17,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L185"
														}
													]
												}
											}
										},
										{
											"id": 451,
											"name": "magicLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 222,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L222"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 452,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 453,
															"name": "countryCodeMissing",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 223,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L223"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 454,
															"name": "emailOrPhoneRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 224,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L224"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 455,
															"name": "emailPlaceholder",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 225,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L225"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 456,
															"name": "emailRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 226,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L226"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 457,
															"name": "invalidEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 227,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L227"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 458,
															"name": "invalidEmailOrPhone",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 228,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L228"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 459,
															"name": "invalidPhone",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 229,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L229"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 460,
															"name": "loginWith",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 230,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L230"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 461,
															"name": "loginWithEmailOrPhone",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 231,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L231"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 462,
															"name": "loginWithPhone",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 232,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L232"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 463,
															"name": "phoneRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 233,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L233"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 464,
															"name": "signIn",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 234,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L234"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 465,
															"name": "submitEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 235,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L235"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																453,
																454,
																455,
																456,
																457,
																458,
																459,
																460,
																461,
																462,
																463,
																464,
																465
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 222,
															"character": 15,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L222"
														}
													]
												}
											}
										},
										{
											"id": 466,
											"name": "metamaskWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 237,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L237"
												}
											],
											"type": {
												"type": "reference",
												"target": 536,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 467,
											"name": "okxWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 238,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L238"
												}
											],
											"type": {
												"type": "reference",
												"target": 536,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 468,
											"name": "oneKeyWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 239,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L239"
												}
											],
											"type": {
												"type": "reference",
												"target": 536,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 469,
											"name": "paperWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 240,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L240"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 470,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 471,
															"name": "emailLoginScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 241,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L241"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 472,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 473,
																			"name": "enterCodeSendTo",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 242,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L242"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 474,
																			"name": "enterRecoveryCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 243,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L243"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 475,
																			"name": "failedToSendCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 244,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L244"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 476,
																			"name": "invalidCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 245,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L245"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 477,
																			"name": "invalidCodeOrRecoveryCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 246,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L246"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 478,
																			"name": "newDeviceDetected",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 247,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L247"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 479,
																			"name": "resendCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 248,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L248"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 480,
																			"name": "sendingCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 249,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L249"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 481,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 250,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L250"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 482,
																			"name": "verify",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 251,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L251"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				473,
																				474,
																				475,
																				476,
																				477,
																				478,
																				479,
																				480,
																				481,
																				482
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 241,
																			"character": 24,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L241"
																		}
																	]
																}
															}
														},
														{
															"id": 483,
															"name": "emailPlaceholder",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 253,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L253"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 484,
															"name": "emailRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 254,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L254"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 485,
															"name": "googleLoginScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 255,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L255"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 486,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 487,
																			"name": "failed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 256,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L256"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 488,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 257,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L257"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 489,
																			"name": "retry",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 258,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L258"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 490,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 259,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L259"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				487,
																				488,
																				489,
																				490
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 255,
																			"character": 25,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L255"
																		}
																	]
																}
															}
														},
														{
															"id": 491,
															"name": "invalidEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 261,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L261"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 492,
															"name": "signIn",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 262,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L262"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 493,
															"name": "signInWithGoogle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 263,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L263"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 494,
															"name": "submitEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 264,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L264"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																471,
																483,
																484,
																485,
																491,
																492,
																493,
																494
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 240,
															"character": 17,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L240"
														}
													]
												}
											}
										},
										{
											"id": 495,
											"name": "phantomWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 266,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L266"
												}
											],
											"type": {
												"type": "reference",
												"target": 536,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 496,
											"name": "rabbyWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 267,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L267"
												}
											],
											"type": {
												"type": "reference",
												"target": 536,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 497,
											"name": "rainbowWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 268,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L268"
												}
											],
											"type": {
												"type": "reference",
												"target": 536,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 498,
											"name": "safeWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 269,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L269"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 499,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 500,
															"name": "accountDetailsScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 270,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L270"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 501,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 502,
																			"name": "connectToSafe",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 271,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L271"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 503,
																			"name": "connecting",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 272,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L272"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 504,
																			"name": "dashboardLink",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 273,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L273"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 505,
																			"name": "failedToConnect",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 274,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L274"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 506,
																			"name": "failedToSwitch",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 275,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L275"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 507,
																			"name": "findSafeAddressIn",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 276,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L276"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 508,
																			"name": "invalidChainConfig",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 277,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L277"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 509,
																			"name": "mainnets",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 278,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L278"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 510,
																			"name": "network",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 279,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L279"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 511,
																			"name": "safeAddress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 280,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L280"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 512,
																			"name": "selectNetworkPlaceholder",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 281,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L281"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 513,
																			"name": "switchNetwork",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 282,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L282"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 514,
																			"name": "switchingNetwork",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 283,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L283"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 515,
																			"name": "testnets",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 284,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L284"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 516,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 285,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L285"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				502,
																				503,
																				504,
																				505,
																				506,
																				507,
																				508,
																				509,
																				510,
																				511,
																				512,
																				513,
																				514,
																				515,
																				516
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 270,
																			"character": 28,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L270"
																		}
																	]
																}
															}
														},
														{
															"id": 517,
															"name": "connectWalletScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 287,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L287"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 518,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 519,
																			"name": "learnMoreLink",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 288,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L288"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 520,
																			"name": "subtitle",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 289,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L289"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 521,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 290,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L290"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				519,
																				520,
																				521
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 287,
																			"character": 27,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L287"
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																500,
																517
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 269,
															"character": 16,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L269"
														}
													]
												}
											}
										},
										{
											"id": 522,
											"name": "smartWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 293,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L293"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 523,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 524,
															"name": "connecting",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 294,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L294"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 525,
															"name": "failedToConnect",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 295,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L295"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 526,
															"name": "wrongNetworkScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 296,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L296"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 527,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 528,
																			"name": "failedToSwitch",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 297,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L297"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 529,
																			"name": "subtitle",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 298,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L298"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 530,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 299,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L299"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				528,
																				529,
																				530
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 296,
																			"character": 26,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L296"
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																524,
																525,
																526
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 293,
															"character": 17,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L293"
														}
													]
												}
											}
										},
										{
											"id": 531,
											"name": "trustWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 302,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L302"
												}
											],
											"type": {
												"type": "reference",
												"target": 536,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 532,
											"name": "walletConnect",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 303,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L303"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 533,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 534,
															"name": "scanInstruction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 303,
																	"character": 21,
																	"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L303"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																534
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 303,
															"character": 19,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L303"
														}
													]
												}
											}
										},
										{
											"id": 535,
											"name": "zerionWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 304,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L304"
												}
											],
											"type": {
												"type": "reference",
												"target": 536,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												331,
												346,
												347,
												348,
												349,
												393,
												414,
												451,
												466,
												467,
												468,
												469,
												495,
												496,
												497,
												498,
												522,
												531,
												532,
												535
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 109,
											"character": 11,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L109"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								230,
								329
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/types.ts",
							"line": 19,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/types.ts#L19"
						}
					]
				}
			}
		},
		{
			"id": 2,
			"name": "TokenInfo",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L1"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
									"line": 4,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L4"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 7,
							"name": "icon",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
									"line": 5,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L5"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
									"line": 2,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L2"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5,
							"name": "symbol",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
									"line": 3,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L3"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6,
								7,
								4,
								5
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
							"line": 1,
							"character": 24,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L1"
						}
					]
				}
			}
		},
		{
			"id": 1056,
			"name": "TransferSuccessResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
					"line": 2,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L2"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1057,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1059,
							"name": "claimedTokens",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A list of tokens claimed."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L11"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1060,
									"name": "ClaimedToken",
									"package": "@thirdweb-dev/react"
								}
							}
						},
						{
							"id": 1058,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique ID for this purchase."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L6"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1059,
								1058
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/payments/interfaces/TransferSuccessResult.ts",
							"line": 2,
							"character": 36,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/TransferSuccessResult.ts#L2"
						}
					]
				}
			}
		},
		{
			"id": 118,
			"name": "TrustWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
					"line": 20,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L20"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 119,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 120,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting Trust using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
									"line": 27,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 121,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
									"line": 32,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L32"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								120,
								121
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
							"line": 20,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L20"
						}
					]
				}
			}
		},
		{
			"id": 632,
			"name": "WelcomeScreen",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Render custom Welcome Screen in \"wide\" ConnectWallet Modal either by passing a custom React component or by passing an object with custom title, subtitle and image"
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "### Custom React component\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<ConnectWallet\n welcomeScreen={() => <div style={{\n   height: '100%',\n }}>\n   ...\n </div>}\n/>\n```"
							},
							{
								"kind": "text",
								"text": "\n\n### Custom title, subtitle and image\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<ConnectWallet\n welcomeScreen={{\n   title: 'Custom Title',\n   subtitle: 'Custom Subtitle',\n   img: {\n     src: 'https://example.com/image.png',\n     width: 100,\n     height: 100,\n   }\n })\n/>\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
					"line": 32,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/screens/types.ts#L32"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 633,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 636,
									"name": "img",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom image"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
											"line": 45,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/screens/types.ts#L45"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 637,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 640,
													"name": "height",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Image height"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
															"line": 57,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/screens/types.ts#L57"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 638,
													"name": "src",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Image source"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
															"line": 49,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/screens/types.ts#L49"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 639,
													"name": "width",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Image width"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
															"line": 53,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/screens/types.ts#L53"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														640,
														638,
														639
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
													"line": 45,
													"character": 12,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/screens/types.ts#L45"
												}
											]
										}
									}
								},
								{
									"id": 635,
									"name": "subtitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom subtitle"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
											"line": 41,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/screens/types.ts#L41"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 634,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom title"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
											"line": 37,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/screens/types.ts#L37"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										636,
										635,
										634
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
									"line": 33,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/screens/types.ts#L33"
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 641,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
									"line": 60,
									"character": 5,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/screens/types.ts#L60"
								}
							],
							"signatures": [
								{
									"id": 642,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "React.ReactNode",
										"package": "@types/react"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 982,
			"name": "WriteMethodCallType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This is similar to ReadMethodCallType with two added properties\n\n## payment\n * We will automatically call the "
					},
					{
						"kind": "code",
						"text": "`approve`"
					},
					{
						"kind": "text",
						"text": " function for non native coins.\n * The "
					},
					{
						"kind": "code",
						"text": "`value`"
					},
					{
						"kind": "text",
						"text": " should be human readable. So \"1.2\" represents \"1.2\" ETH or \"1.2\" USDC depending on the "
					},
					{
						"kind": "code",
						"text": "`currency`"
					},
					{
						"kind": "text",
						"text": " field\n\n## callOptions\n* As of now, we only support specifying the relative amount of gas to use.\n* They correspond to the values of the [gas trackers](https://etherscan.io/gastracker) at the time of calling the function"
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/payments/interfaces/CustomContract.ts",
					"line": 130,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/CustomContract.ts#L130"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 978,
						"name": "ReadMethodCallType",
						"package": "@thirdweb-dev/react"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 983,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 988,
									"name": "callOptions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/payments/interfaces/CustomContract.ts",
											"line": 135,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/CustomContract.ts#L135"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 989,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 990,
													"name": "gasOptions",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react/src/payments/interfaces/CustomContract.ts",
															"line": 135,
															"character": 18,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/CustomContract.ts#L135"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "low"
															},
															{
																"type": "literal",
																"value": "medium"
															},
															{
																"type": "literal",
																"value": "high"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														990
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/payments/interfaces/CustomContract.ts",
													"line": 135,
													"character": 16,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/CustomContract.ts#L135"
												}
											]
										}
									}
								},
								{
									"id": 984,
									"name": "payment",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/payments/interfaces/CustomContract.ts",
											"line": 131,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/CustomContract.ts#L131"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 985,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 986,
													"name": "currency",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/payments/interfaces/CustomContract.ts",
															"line": 132,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/CustomContract.ts#L132"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "MATIC"
															},
															{
																"type": "literal",
																"value": "ETH"
															},
															{
																"type": "literal",
																"value": "USDC"
															},
															{
																"type": "literal",
																"value": "SOL"
															},
															{
																"type": "literal",
																"value": "AVAX"
															},
															{
																"type": "literal",
																"value": "USDC.e"
															}
														]
													}
												},
												{
													"id": 987,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/payments/interfaces/CustomContract.ts",
															"line": 133,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/CustomContract.ts#L133"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														986,
														987
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/payments/interfaces/CustomContract.ts",
													"line": 131,
													"character": 11,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/CustomContract.ts#L131"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										988,
										984
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/payments/interfaces/CustomContract.ts",
									"line": 130,
									"character": 55,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/interfaces/CustomContract.ts#L130"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 137,
			"name": "ZerionkWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
					"line": 20,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L20"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 138,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 139,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting MetaMask using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
									"line": 27,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 140,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
									"line": 32,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L32"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								139,
								140
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
							"line": 20,
							"character": 41,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L20"
						}
					]
				}
			}
		},
		{
			"id": 125,
			"name": "walletConnectConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@wallet",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
					"line": 12,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L12"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 126,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 127,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Your project’s unique identifier that can be obtained at https://cloud.walletconnect.com/\n\nEnables following functionalities within Web3Modal: wallet and chain logos, optional WalletConnect RPC, support for all wallets from our Explorer and WalletConnect v2 support. Defaults to undefined.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
									"line": 20,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 130,
							"name": "qrModal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify wheher a custom QR Modal or the Official WalletConnect Modal should be used on desktop. The custom screen has an option to open the official WalletConnect Modal too.\n\nNote that the official WalletConnect Modal is always used on mobile devices.\n\nThe default is "
									},
									{
										"kind": "code",
										"text": "`\"custom\"`"
									},
									{
										"kind": "text",
										"text": " ( for desktop )"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
									"line": 41,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L41"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "custom"
									},
									{
										"type": "literal",
										"value": "walletConnect"
									}
								]
							}
						},
						{
							"id": 128,
							"name": "qrModalOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "options to customize QR Modal.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
									"line": 27,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L27"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
									"qualifiedName": "WC2_QRModalOptions"
								},
								"name": "WC2_QRModalOptions",
								"package": "@thirdweb-dev/wallets"
							}
						},
						{
							"id": 129,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
									"line": 32,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L32"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								127,
								130,
								128,
								129
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
							"line": 12,
							"character": 41,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L12"
						}
					]
				}
			}
		},
		{
			"id": 1,
			"name": "defaultTokens",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Default tokens shown in ["
					},
					{
						"kind": "code",
						"text": "`ConnectWallet`"
					},
					{
						"kind": "text",
						"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet)'s SendFunds screen for each network.\n\nYou can use the default tokens as a starting point for your own list of tokens and override tokens for specific networks."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "Below example shows adding a custom token for the Ethereum mainnet at start of the list of default tokens for the Ethereum mainnet. Here the "
							},
							{
								"kind": "code",
								"text": "`1`"
							},
							{
								"kind": "text",
								"text": " represents the chainId of Ethereum mainnet.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\nconst ethereumChainId = 1;\n\n<ConnectWallet supportedTokens={{\n ...defaultTokens,\n [ethereumChainId]: [\n   {\n     address: 'YOUR_TOKEN_ADDRESS',\n     name: 'YOUR_TOKEN_NAME',\n     symbol: 'YOUR_TOKEN_SYMBOL',\n     icon: 'YOUR_TOKEN_ICON_URL'\n   },\n   ...defaultTokens[ethereumChainId],\n ]\n}} />\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
					"line": 59,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L59"
				}
			],
			"type": {
				"type": "reference",
				"target": 915,
				"name": "SupportedTokens",
				"package": "@thirdweb-dev/react"
			},
			"defaultValue": "..."
		},
		{
			"id": 8,
			"name": "defaultWallets",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The default wallets that are used by the ["
					},
					{
						"kind": "code",
						"text": "`ThirdwebProvider`"
					},
					{
						"kind": "text",
						"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider) if no "
					},
					{
						"kind": "code",
						"text": "`supportedWallets`"
					},
					{
						"kind": "text",
						"text": " prop is provided.\n\nThe defaults wallets are:\n- Metamask\n- Coinbase\n- WalletConnect\n- TrustWallet\n- RainbowWallet\n- ZerionWallet\n- PhantomWallet"
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/defaultWallets.ts",
					"line": 22,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/defaultWallets.ts#L22"
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../react-core/src/core/types/wallet.ts",
						"qualifiedName": "WalletConfig"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "any"
						}
					],
					"name": "WalletConfig",
					"package": "@thirdweb-dev/react-core"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1000,
			"name": "CheckoutWithCard",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/payments/components/CheckoutWithCard.tsx",
					"line": 47,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/CheckoutWithCard.tsx#L47"
				}
			],
			"signatures": [
				{
					"id": 1001,
					"name": "CheckoutWithCard",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/payments/components/CheckoutWithCard.tsx",
							"line": 47,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/CheckoutWithCard.tsx#L47"
						}
					],
					"parameters": [
						{
							"id": 1002,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/payments/components/CheckoutWithCard.tsx",
									"qualifiedName": "CheckoutWithCardProps"
								},
								"name": "CheckoutWithCardProps",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 660,
			"name": "ConnectEmbed",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
					"line": 280,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L280"
				}
			],
			"signatures": [
				{
					"id": 661,
					"name": "ConnectEmbed",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A component that allows the user to connect their wallet.\n\nit renders the same UI as the ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component's modal - but directly on the page instead of being in a modal.\n\nIt only renders UI if either one of the following conditions are met:\n- wallet is not connected\n- wallet is connected but the user is not signed in and "
							},
							{
								"kind": "code",
								"text": "`auth`"
							},
							{
								"kind": "text",
								"text": " is required ( loginOptional is not set to false )\n\n"
							},
							{
								"kind": "code",
								"text": "`ConnectEmbed`"
							},
							{
								"kind": "text",
								"text": " uses the ["
							},
							{
								"kind": "code",
								"text": "`useShowConnectEmbed`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/useShowConnectEmbed) hook internally to determine if it should be rendered or not. You can also use this hook to determine if you should render something else instead of "
							},
							{
								"kind": "code",
								"text": "`ConnectEmbed`"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\nfunction Example() {\n  const loginOptional = false;\n  const showConnectEmbed = useShowConnectEmbed(loginOptional);\n\n  if (!showConnectEmbed) {\n    return <div> Wallet is connected </div>\n  }\n\n  return (\n    <div>\n      <ConnectEmbed\n        auth={{\n          loginOptional,\n        }}\n      />\n    </div>\n  );\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
							"line": 280,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L280"
						}
					],
					"parameters": [
						{
							"id": 662,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The props for the component.\n\n### className\nClass name to be added to the root element of ConnectEmbed\n\n### theme\ntheme for the ConnectEmbed\n\nIf a theme is set on the ["
									},
									{
										"kind": "code",
										"text": "`ThirdWebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider) component, it will be used as the default theme for all thirdweb components, else the default will be \"dark\"\n\ntheme can be set to either \"dark\" or \"light\" or a custom theme object.\n\nYou can also import "
									},
									{
										"kind": "code",
										"text": "`lightTheme`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`darkTheme`"
									},
									{
										"kind": "text",
										"text": " functions from "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/react`"
									},
									{
										"kind": "text",
										"text": " to use the default themes as base and overrides parts of it.\n\n"
									},
									{
										"kind": "code",
										"text": "```ts\nimport { lightTheme } from \"@thirdweb-dev/react\";\nconst customTheme = lightTheme({\n colors: {\n   modalBg: 'red'\n }\n})\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### style\nCSS styles to be applied to the root element of ConnectEmbed\n\n### termsOfServiceUrl\nIf provided, Embed will show a Terms of Service message at the bottom with below link\n\n### privacyPolicyUrl\nIf provided, Embed will show a Privacy Policy message at the bottom with below link\n\n### auth\nEnforce that users must sign in with their wallet using [auth](https://portal.thirdweb.com/auth) after connecting their wallet.\n\nThis requires the "
									},
									{
										"kind": "code",
										"text": "`authConfig`"
									},
									{
										"kind": "text",
										"text": " prop to be set on the ["
									},
									{
										"kind": "code",
										"text": "`ThirdWebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider) component.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`auth`"
									},
									{
										"kind": "text",
										"text": " prop accepts an object with the following properties:\n- "
									},
									{
										"kind": "code",
										"text": "`loginOptional`"
									},
									{
										"kind": "text",
										"text": " - specify whether signing in is optional or not. By default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " ( sign in is required ) if "
									},
									{
										"kind": "code",
										"text": "`authConfig`"
									},
									{
										"kind": "text",
										"text": " is set on ["
									},
									{
										"kind": "code",
										"text": "`ThirdWebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)\n- "
									},
									{
										"kind": "code",
										"text": "`onLogin`"
									},
									{
										"kind": "text",
										"text": " - Callback to be called after user signs in with their wallet\n- "
									},
									{
										"kind": "code",
										"text": "`onLogout`"
									},
									{
										"kind": "text",
										"text": " - Callback to be called after user signs out\n\n### onConnect\nCallback to be called on successful connection of wallet\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectEmbed\n onConnect={() => {\n   console.log(\"wallet connected\")\n }}\n/>\n```"
									},
									{
										"kind": "text",
										"text": "\n\nNote that this does not include the sign in, If you want to call a callback after user connects AND signs in with their wallet, use "
									},
									{
										"kind": "code",
										"text": "`auth.onLogin`"
									},
									{
										"kind": "text",
										"text": " prop instead\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectEmbed\n auth={{\n  onLogin: () => {\n    console.log(\"wallet connected and signed in\")\n  }\n }}\n/>\n```"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 663,
								"name": "ConnectEmbedProps",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 592,
			"name": "ConnectWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
					"line": 592,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L592"
				}
			],
			"signatures": [
				{
					"id": 593,
					"name": "ConnectWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A component that allows the user to connect their wallet.\n\nit renders a button which when clicked opens a modal to allow users to connect to wallets specified in the ["
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)'s supportedWallets prop.\n\nThis component must be descendant of ["
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet />\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
							"line": 592,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L592"
						}
					],
					"parameters": [
						{
							"id": 594,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Props for the ConnectWallet component\n\n### btnTitle (optional)\nset custom label for the button.\n\nThe default is "
									},
									{
										"kind": "code",
										"text": "`\"Connect\"`"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet btnTitle=\"Sign in\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### modalSize (optional)\nSet the size of the modal - "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`wide`"
									},
									{
										"kind": "text",
										"text": " on desktop\n\nModal size is always "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " on mobile\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`\"wide\"`"
									},
									{
										"kind": "text",
										"text": " for desktop.\n\n### modalTitle (optional)\nChange the title of ConnectWallet Modal\n\nThe default is "
									},
									{
										"kind": "code",
										"text": "`\"Connect\"`"
									},
									{
										"kind": "text",
										"text": "\n\n### modalTitleIconUrl (optional)\nReplace the thirdweb icon next to modalTitle and set your own iconUrl\n\nSet to empty string to hide the icon\n\n### auth (optional)\nThe object contains the following properties to customize the authentication\n- "
									},
									{
										"kind": "code",
										"text": "`loginOptional`"
									},
									{
										"kind": "text",
										"text": " - specify whether signing in is optional or not. By default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " ( Sign in is required ) if "
									},
									{
										"kind": "code",
										"text": "`authConfig`"
									},
									{
										"kind": "text",
										"text": " is set on ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)\n- "
									},
									{
										"kind": "code",
										"text": "`onLogin`"
									},
									{
										"kind": "text",
										"text": " - Callback to be called after user signs in with their wallet\n- "
									},
									{
										"kind": "code",
										"text": "`onLogout`"
									},
									{
										"kind": "text",
										"text": " - Callback to be called after user signs out\n\n### theme (optional)\nSet the theme for the button and modal.\n\nBy default it is set to \"dark\" if "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " is not set on ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)\nIf a "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " is set on ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider) then that theme will be used by default which can be overridden by setting "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " prop on ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component\n\ntheme can be set to either \"dark\" or \"light\" or a custom theme object. You can also import "
									},
									{
										"kind": "code",
										"text": "`lightTheme`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`darkTheme`"
									},
									{
										"kind": "text",
										"text": " functions from "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/react`"
									},
									{
										"kind": "text",
										"text": " to use the default themes as base and overrides parts of it.\n\n"
									},
									{
										"kind": "code",
										"text": "```ts\nimport { lightTheme } from \"@thirdweb-dev/react\";\nconst customTheme = lightTheme({\n colors: {\n   modalBg: 'red'\n }\n})\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### className (optional)\nCSS class to apply to the button element\n\n### detailsBtn\nRender a custom button to display connected wallet details instead of the default one\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst address = useAddress();\n\n<ConnectWallet\n detailsBtn={() => {\n   return (\n     <button>\n       connected to {address}\n     </button>\n   )\n }}\n/>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### dropdownPosition (optional)\nWhen user connects the wallet using ConnectWallet Modal, a \"Details Button\" is rendered. Clicking on this button opens a dropdown which opens in a certain direction relative to the Details button.\n\n"
									},
									{
										"kind": "code",
										"text": "`dropdownPosition`"
									},
									{
										"kind": "text",
										"text": " prop allows you to customize the direction the dropdown should open relative to the Details button.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet\n dropdownPosition={{\n   side: \"bottom\", // or use:  \"top\" | \"bottom\" | \"left\" | \"right\"\n   align: \"end\", // or use:  \"start\" | \"center\" | \"end\";\n }}\n />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### style (optional)\nCSS styles to apply to the button element\n\n### networkSelector (optional)\nCustomize the Network selector shown\n\n### hideTestnetFaucet (optional)\nHide the \"Request Testnet funds\" link in ConnectWallet dropdown which is shown when user is connected to a testnet.\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet hideTestnetFaucet={false} />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### switchToActiveChain (optional)\nWhether to show \"Switch Network\" button if the wallet is connected,\nbut it is not connected to the "
									},
									{
										"kind": "code",
										"text": "`activeChain`"
									},
									{
										"kind": "text",
										"text": " provided in ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)\n\nPlease, note that if you support multiple networks in your app this prop should\nbe set to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " to allow users to switch between networks.\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "\n\nFor some CSS properties, you may need to use the !important to override the default styles\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet className=\"my-custom-class\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### termsOfServiceUrl\nIf provided, Modal will show a Terms of Service message at the bottom with below link\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet termsOfServiceUrl=\"https://your-terms-of-service-url.com\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### privacyPolicyUrl\nIf provided, Modal will show a Privacy Policy message at the bottom with below link\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet privacyPolicyUrl=\"https://your-privacy-policy-url.com\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### welcomeScreen\nCustomize the welcome screen. This prop is only applicable when modalSize prop is set to \"wide\". On \"wide\" Modal size, a welcome screen is shown on the right side of the modal.\n\nThis screen can be customized in two ways\n\n#### 1. Customize Metadata and Image\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet welcomeScreen={{\n title: \"your title\",\n subtitle: \"your subtitle\",\n img: {\n  src: \"https://your-image-url.png\",\n  width: 300,\n  height: 50,\n },\n}} />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n#### 2. Render Custom Component\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet\n welcomeScreen={() => {\n return <YourCustomComponent />\n}}\n/>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n\n### supportedTokens\nCustomize the tokens shown in the \"Send Funds\" screen for various networks.\n\nBy default, The \"Send Funds\" screen shows a few popular tokens for default chains and the native token. For other chains it only shows the native token.\n\nsupportedTokens prop allows you to customize this list as shown below which shows  \"Dai Stablecoin\" when users wallet is connected to the \"Base\" mainnet.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ConnectWallet } from '@thirdweb-dev/react';\nimport { Base } from '@thirdweb-dev/chains';\n\nfunction Example() {\n  return (\n\t\t<ConnectWallet\n\t\t\tsupportedTokens={{\n\t\t\t\t[Base.chainId]: [\n\t\t\t\t\t{\n\t\t\t\t\t\taddress: '0x50c5725949A6F0c72E6C4a641F24049A917DB0Cb', // token contract address\n\t\t\t\t\t\tname: 'Dai Stablecoin',\n\t\t\t\t\t\tsymbol: 'DAI',\n\t\t\t\t\t\ticon: 'https://assets.coingecko.com/coins/images/9956/small/Badge_Dai.png?1687143508',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t/>\n\t);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### displayBalanceToken\nDisplay the balance of a token instead of the native token in ConnectWallet details button.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Base } from \"@thirdweb-dev/chains\";\n\n<ConnectWallet balanceToken={{\n   1: \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\" // show USDC balance when connected to Ethereum mainnet\n   [Base.chainId]: \"0x50c5725949A6F0c72E6C4a641F24049A917DB0Cb\", // show Dai stablecoin token balance when connected to Base mainnet\n }}\n/>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### hideSwitchToPersonalWallet\nHide the \"Switch to Personal wallet\" option in the wallet modal which is shown when wallet is connected to either Smart Wallet or Safe.\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet hideSwitchToPersonalWallet={true} />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### hideDisconnect\nHide the \"Disconnect Wallet\" button in the ConnectWallet dropdown\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet hideDisconnect={true} />\n```"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 595,
								"name": "ConnectWalletProps",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 1003,
			"name": "LoginWithPaper",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/payments/components/VerifyOwnershipWithPaper.tsx",
					"line": 36,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/VerifyOwnershipWithPaper.tsx#L36"
				}
			],
			"signatures": [
				{
					"id": 1004,
					"name": "LoginWithPaper",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 562,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 1005,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/payments/components/VerifyOwnershipWithPaper.tsx",
									"qualifiedName": "VerifyOwnershipWithPaperProps"
								},
								"name": "VerifyOwnershipWithPaperProps",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"id": 1006,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 931,
			"name": "MediaRenderer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
					"line": 599,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/MediaRenderer.tsx#L599"
				}
			],
			"signatures": [
				{
					"id": 932,
					"name": "MediaRenderer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Component that renders any asset stored on IPFS (or anywhere else), given the IPFS URI / URL.\n\nUnder the hood, the asset is fetched from IPFS through the thirdweb IPFS gateway (or just\na regular fetch if the "
							},
							{
								"kind": "code",
								"text": "`src`"
							},
							{
								"kind": "text",
								"text": " is not an IPFS URI).\nThe [mime type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the\nasset is determined and the appropriate component is rendered on the UI.\n\nFor example, if the URI points to an image, the "
							},
							{
								"kind": "code",
								"text": "`img`"
							},
							{
								"kind": "text",
								"text": " tag will be used. If it is a video, the "
							},
							{
								"kind": "code",
								"text": "`video`"
							},
							{
								"kind": "text",
								"text": " tag will be used, etc.\nThe component currently supports:\n\n- Images\n- Videos\n- Audio files\n- 3D Models\n- SVGs (for [on-chain NFTs](https://blog.thirdweb.com/guides/how-to-create-on-chain-nfts-with-thirdweb/))\n- "
							},
							{
								"kind": "code",
								"text": "`iframes`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`HTML`"
							},
							{
								"kind": "text",
								"text": "\n- If none of these are appropriate, the fallback is a link to the asset"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Provide the IPFS URI (or any URL that points to media) to the "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": " prop to render the asset.\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { MediaRenderer } from \"@thirdweb-dev/react\";\n\nfunction Home() {\n\treturn (\n\t\t// Any URL that points to media (IPFS URI, HTTP URL, etc.)\n\t\t<MediaRenderer src=\"ipfs://QmV4HC9fNrPJQeYpbW55NLLuSBMyzE11zS1L4HmL6Lbk7X\" />\n\t);\n}\n```"
									}
								]
							},
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "The default size of rendered media is 300px x 300px, but this can be changed using the "
									},
									{
										"kind": "code",
										"text": "`width`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`height`"
									},
									{
										"kind": "text",
										"text": " props.\n\nYou can use "
									},
									{
										"kind": "code",
										"text": "`npx thirdweb upload <path/to/file>`"
									},
									{
										"kind": "text",
										"text": " to upload any file to IPFS and get the IPFS URI."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 392,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 933,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The props for the component\n\n### src (required)\n\nThe [src](https://www.w3schools.com/tags/att_img_src.asp) attribute specifies the URL of the media.\n\nThis can be an IPFS URI, or any URL that points to media (e.g. HTTP URL, etc.).\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { MediaRenderer } from \"@thirdweb-dev/react\";\n\nfunction Home() {\n\treturn (\n\t\t<MediaRenderer\n\t\t\t// highlight-next-line\n\t\t\tsrc=\"ipfs://QmV4HC9fNrPJQeYpbW55NLLuSBMyzE11zS1L4HmL6Lbk7X\"\n\t\t/>\n\t);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n\n### alt (recommended)\n\nThe [alt](https://www.w3schools.com/tags/att_img_alt.asp) attributes provides alternative\ninformation for the media, if a user for some reason cannot view it\n(due to slow connection, an error in the "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": " attribute, or if the user is visually impaired).\n\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`\"\"`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { MediaRenderer } from \"@thirdweb-dev/react\";\n\nfunction Home() {\n\treturn (\n\t\t// Any URL that points to media (IPFS URI, HTTP URL, etc.)\n\t\t<MediaRenderer\n\t\t\tsrc=\"ipfs://QmV4HC9fNrPJQeYpbW55NLLuSBMyzE11zS1L4HmL6Lbk7X\"\n\t\t\t// highlight-next-line\n\t\t\talt=\"A red circle\"\n\t\t/>\n\t);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n\n### poster (optional)\n\nThe [poster](https://www.w3schools.com/tags/att_video_poster.asp) is the image\nthat is shown before the video is played.\n\nThe default value is the first frame of the video.\n\nIf the "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": " is not a video, this prop is ignored.\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { MediaRenderer } from \"@thirdweb-dev/react\";\n\nfunction Home() {\n\treturn (\n\t\t// Any URL that points to media (IPFS URI, HTTP URL, etc.)\n\t\t<MediaRenderer\n\t\t\tsrc=\"ipfs://Qmb9ZV5yznE4C4YvyJe8DVFv1LSVkebdekY6HjLVaKmHZi\"\n\t\t\t// highlight-next-line\n\t\t\tposter=\"ipfs://QmV4HC9fNrPJQeYpbW55NLLuSBMyzE11zS1L4HmL6Lbk7X\"\n\t\t/>\n\t);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n\n### controls (optional)\n\nShow the media controls (play, pause, etc.) for the media, where applicable.\n\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { ThirdwebNftMedia } from \"@thirdweb-dev/react\";\n\nfunction Home() {\n\t// ... Get the NFT metadata\n\n\treturn (\n\t\t<ThirdwebNftMedia\n\t\t\tmetadata={metadata}\n\t\t\t// highlight-next-line\n\t\t\tcontrols={true}\n\t\t/>\n\t);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n\n### height (optional)\n\nThe height of the rendered media.\n\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`auto`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { ThirdwebNftMedia } from \"@thirdweb-dev/react\";\n\nfunction Home() {\n\t// ... Get the NFT metadata\n\n\treturn (\n\t\t<ThirdwebNftMedia\n\t\t\tmetadata={metadata}\n\t\t\t// highlight-next-line\n\t\t\theight={500}\n\t\t/>\n\t);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### width (optional)\n\nThe width of the rendered media.\n\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`auto`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { ThirdwebNftMedia } from \"@thirdweb-dev/react\";\n\nfunction Home() {\n\t// ... Get the NFT metadata\n\n\treturn (\n\t\t<ThirdwebNftMedia\n\t\t\tmetadata={metadata}\n\t\t\t// highlight-next-line\n\t\t\twidth={500}\n\t\t/>\n\t);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n\n### requireInteraction (optional)\n\nRequire user interaction to play the media (i.e. disable autoplay).\n\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { ThirdwebNftMedia } from \"@thirdweb-dev/react\";\n\nfunction Home() {\n\t// ... Get the NFT metadata\n\n\treturn (\n\t\t<ThirdwebNftMedia\n\t\t\tmetadata={metadata}\n\t\t\t// highlight-next-line\n\t\t\trequireInteraction={true}\n\t\t/>\n\t);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n\n### className (optional)\n\nApply custom CSS styles to the button using a class name.\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { ThirdwebNftMedia } from \"@thirdweb-dev/react\";\n\nfunction Home() {\n\t// ... Get the NFT metadata\n\n\treturn (\n\t\t<ThirdwebNftMedia\n\t\t\tmetadata={metadata}\n\t\t\t// highlight-next-line\n\t\t\tclassName=\"my-custom-class\"\n\t\t/>\n\t);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### style (optional)\n\nApply custom CSS styles to the button using an inline style.\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { ThirdwebNftMedia } from \"@thirdweb-dev/react\";\n\nfunction Home() {\n\t// ... Get the NFT metadata\n\n\treturn (\n\t\t<ThirdwebNftMedia\n\t\t\tmetadata={metadata}\n\t\t\t// highlight-next-line\n\t\t\tstyle={{ backgroundColor: \"red\" }}\n\t\t/>\n\t);\n}\n```"
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 798,
										"name": "MediaRendererProps",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.RefAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLMediaElement"
												},
												"name": "HTMLMediaElement",
												"package": "typescript"
											}
										],
										"name": "RefAttributes",
										"package": "@types/react",
										"qualifiedName": "React.RefAttributes"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 1049,
			"name": "PaperCheckout",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
					"line": 78,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L78"
				}
			],
			"signatures": [
				{
					"id": 1050,
					"name": "PaperCheckout",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/payments/components/PaperCheckout.tsx",
							"line": 78,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/components/PaperCheckout.tsx#L78"
						}
					],
					"typeParameter": [
						{
							"id": 1051,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/payments/interfaces/CustomContract.ts",
									"qualifiedName": "ContractType"
								},
								"name": "ContractType",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"parameters": [
						{
							"id": 1052,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1013,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "PaperCheckoutProps",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 995,
			"name": "PaymentsSDKProvider",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/payments/Provider.tsx",
					"line": 28,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/Provider.tsx#L28"
				}
			],
			"signatures": [
				{
					"id": 996,
					"name": "PaymentsSDKProvider",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/payments/Provider.tsx",
							"line": 28,
							"character": 35,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/Provider.tsx#L28"
						}
					],
					"parameters": [
						{
							"id": 997,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 991,
										"name": "PaymentsProviderProps",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 948,
			"name": "ThirdwebNftMedia",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/NftMedia.tsx",
					"line": 96,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/NftMedia.tsx#L96"
				}
			],
			"signatures": [
				{
					"id": 949,
					"name": "ThirdwebNftMedia",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Component that renders an NFT from given a "
							},
							{
								"kind": "code",
								"text": "`metadata`"
							},
							{
								"kind": "text",
								"text": " object.\n\nUnder the hood, if the "
							},
							{
								"kind": "code",
								"text": "`image`"
							},
							{
								"kind": "text",
								"text": " property of the metadata is an URL/IPFS URI, it is fetched from the source.\nThe [mime type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the\nasset is determined and the appropriate component is rendered on the UI.\n\nFor example, if your NFT is an image, the "
							},
							{
								"kind": "code",
								"text": "`img`"
							},
							{
								"kind": "text",
								"text": " tag will be used. If it is a video, the "
							},
							{
								"kind": "code",
								"text": "`video`"
							},
							{
								"kind": "text",
								"text": " tag will be used, etc.\n\nThe component currently supports:\n\n- Images\n- Videos\n- Audio files\n- 3D Models\n- SVGs (for [on-chain NFTs](https://blog.thirdweb.com/guides/how-to-create-on-chain-nfts-with-thirdweb/))\n- "
							},
							{
								"kind": "code",
								"text": "`iframes`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`HTML`"
							},
							{
								"kind": "text",
								"text": "\n- If none of these are appropriate, the fallback is a link to the asset"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Provide the "
									},
									{
										"kind": "code",
										"text": "`metadata`"
									},
									{
										"kind": "text",
										"text": " object to the component to render the NFT.\n\nThe NFT's "
									},
									{
										"kind": "code",
										"text": "`image`"
									},
									{
										"kind": "text",
										"text": " is used as the media, and the "
									},
									{
										"kind": "code",
										"text": "`name`"
									},
									{
										"kind": "text",
										"text": " is used as the alt text for the media.\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { ThirdwebNftMedia, useContract, useNFT } from \"@thirdweb-dev/react\";\n\nfunction Home() {\n\t// Connect to your NFT contract\n\tconst { contract } = useContract(\"{{contract_address}}\");\n\t// Load the NFT metadata from the contract using a hook\n\tconst { data: nft, isLoading, error } = useNFT(contract, \"0\");\n\n\t// Render the NFT onto the UI\n\tif (isLoading) return <div>Loading...</div>;\n\tif (error || !nft) return <div>NFT not found</div>;\n\n\treturn <ThirdwebNftMedia metadata={nft.metadata} />;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 392,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 950,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The props for the component.\n\n### controls (optional)\nShow the media controls (play, pause, etc.) for the media, where applicable.\n\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\n\n\n### height (optional)\nThe height of the rendered media.\n\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`auto`"
									},
									{
										"kind": "text",
										"text": ".\n\n\n### width (optional)\nThe width of the rendered media.\n\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`auto`"
									},
									{
										"kind": "text",
										"text": ".\n\n### requireInteraction (optional)\nRequire user interaction to play the media (i.e. disable autoplay).\n\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\n\n\n### className (optional)\nApply custom CSS styles to the button using a class name\n\n\n### style (optional)\nApply custom CSS styles to the button using an inline style."
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 937,
										"name": "ThirdwebNftMediaProps",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.RefAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLMediaElement"
												},
												"name": "HTMLMediaElement",
												"package": "typescript"
											}
										],
										"name": "RefAttributes",
										"package": "@types/react",
										"qualifiedName": "React.RefAttributes"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 770,
			"name": "ThirdwebProvider",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
					"line": 471,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/thirdweb-provider.tsx#L471"
				}
			],
			"signatures": [
				{
					"id": 771,
					"name": "ThirdwebProvider",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`<ThirdwebProvider />`"
							},
							{
								"kind": "text",
								"text": " component lets you control what networks you want users to connect to,\nwhat types of wallets can connect to your app, and the settings for the [Thirdweb SDK](https://docs.thirdweb.com/typescript)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "You can wrap your application with the provider as follows:\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx title=\"App.jsx\"\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n  return (\n    <ThirdwebProvider clientId=\"YOUR_CLIENT_ID\" activeChain=\"ethereum\">\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 471,
							"character": 32,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/thirdweb-provider.tsx#L471"
						}
					],
					"typeParameter": [
						{
							"id": 772,
							"name": "TChains",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							},
							"default": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reflection",
											"declaration": {
												"id": 773,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2599,
														"character": 37
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 774,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2656,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 775,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2700,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 776,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2750,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 777,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2800,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 778,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2840,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 779,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2871,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 780,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2921,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 781,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2959,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 782,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 3008,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 783,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 3044,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 784,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 3084,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 785,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 3114,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 786,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 3159,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 787,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 3195,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 788,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 3227,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 789,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 3257,
														"character": 4
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"parameters": [
						{
							"id": 790,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The props for the component.\n\n### activeChain (optional)\nThe activeChain prop determines which chain you want your app to be operating on.\n\nThere are 1000+ chains available in the "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/chains`"
									},
									{
										"kind": "text",
										"text": " package. Import the chain you want and pass it to the "
									},
									{
										"kind": "code",
										"text": "`activeChain`"
									},
									{
										"kind": "text",
										"text": " prop.\n\nYou can override the imported object or pass a custom chain object with required properties.\n\n### supportedChains (optional)\nAn array of chains supported by your app.\nThere are 1000+ chains available in the "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/chains`"
									},
									{
										"kind": "text",
										"text": " package. You can import the chain you want and pass it to the "
									},
									{
										"kind": "code",
										"text": "`supportedChains`"
									},
									{
										"kind": "text",
										"text": " prop in an array.\n\nIf not provided, it will default to the default supported chains supported by the thirdweb SDK.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Ethereum, Polygon } from \"@thirdweb-dev/chains\";\n\nfunction Example() {\n return (\n   <ThirdwebSDKProvider supportedChains={[ Ethereum, Polygon ]} activeChain={Ethereum}>\n      <App />\n   </ThirdwebSDKProvider>\n )\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### clientId (optional)\nThe clientId prop is required to use the thirdweb infrastructure services with the SDK.\n\nYou can get a client ID by creating an API key on [thirdweb dashboard](https://thirdweb.com/dashboard/settings/api-keys)\n\n### supportedWallets (optional)\nWallets supported by the dApp\n\nIf no wallets are provided, the default wallets will be used which is equivalent to the following:\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n[\n metamaskWallet(),\n coinbaseWallet(),\n walletConnect(),\n trustWallet(),\n rainbowWallet(),\n zerionWallet(),\n phantomWallet(),\n]\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { metamaskWallet, coinbaseWallet, walletConnect } from \"@thirdweb-dev/react\";\n\n<ThirdwebProvider\n supportedWallets={[\n   metamaskWallet(),\n   coinbaseWallet(),\n   walletConnect()\n ]}\n/>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### theme (optional)\nSet the theme for all thirdweb components\n\nBy default it is set to \"dark\".\n\ntheme can be set to either \"dark\" or \"light\" or a custom theme object.\n\nYou can also import "
									},
									{
										"kind": "code",
										"text": "`lightTheme`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`darkTheme`"
									},
									{
										"kind": "text",
										"text": " functions from "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/react`"
									},
									{
										"kind": "text",
										"text": " to use the default themes as base and overrides parts of it.\n\n"
									},
									{
										"kind": "code",
										"text": "```ts\nimport { lightTheme } from \"@thirdweb-dev/react\";\nconst customTheme = lightTheme({\n colors: {\n   modalBg: 'red'\n }\n})\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### locale (optional)\nlocale object contains text used for all thirdweb components\n\nit allows you to change the language used in UI components or override the texts used in the UI\n\nReact SDK comes out of the box with Spanish and Japanese locale functions, but you can add support for any language you want just by passing an object with the required strings\n\n#### Using Built-in Locales\n\n##### Using the Spanish locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, es } from \"@thirdweb-dev/react\";\n\nconst spanish = es();\n\n<ThirdwebProvider locale={spanish}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n##### Using the Japanese locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, jp } from \"@thirdweb-dev/react\";\n\nconst japanese = jp();\n\n<ThirdwebProvider locale={japanese}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n##### Using English locale ( default )\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, en } from \"@thirdweb-dev/react\";\n\nconst english = en();\n\n<ThirdwebProvider locale={english}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n##### Overriding the locale\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, en } from \"@thirdweb-dev/react\";\n\n// override some texts\nconst english = en({\n  connectWallet: {\n    confirmInWallet: \"Confirm in your wallet\",\n  },\n  wallets: {\n    metamaskWallet: {\n      connectionScreen: {\n        inProgress: \"Awaiting Confirmation\",\n        instruction: \"Accept connection request in your MetaMask wallet\",\n      },\n    },\n  },\n});\n\n<ThirdwebProvider locale={english}>\n  <App />\n</ThirdwebProvider>;\n\n```"
									},
									{
										"kind": "text",
										"text": "\n\n#### Custom locale object\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\n\n<ThirdwebProvider locale={{ .... }}>\n  <App />\n</ThirdwebProvider>;\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### dAppMeta (optional)\nMetadata to pass to wallet connect and walletlink wallet connect. (Used to show *which* dApp is being connected to in mobile wallets that support it)\nDefaults to just the name being passed as "
									},
									{
										"kind": "code",
										"text": "`thirdweb powered dApp`"
									},
									{
										"kind": "text",
										"text": ".\n\n### autoConnect (optional)\nWhen the user has connected their wallet to your site, this flag determines whether or not you want to automatically connect to the last connected wallet when user visits your site again in the future.\nDefaults to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ".\n\n### sdkOptions (optional)\nOverride any of the default values for the SDK. Gas settings, gasless transactions, RPC configuration, and more.\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst sdkOptions = {\n  readonlySettings: {\n    rpcUrl: \"<rpc-url>\", // force read calls to go through your own RPC url\n    chainId: 1, // reduce RPC calls by specifying your chain ID\n  },\n  gasSettings: {\n    maxPriceInGwei: 123, // Maximum gas price for transactions (default 300 gwei)\n    speed: \"fastest\", // the tx speed setting: 'standard'|'fast|'fastest' (default: 'fastest')\n  },\n  gasless: {\n    // By specifying a gasless configuration - all transactions will get forwarded to enable gasless transactions\n    openzeppelin: {\n      relayerUrl: \"<open-zeppelin-relayer-url>\", // your OZ Defender relayer URL\n      relayerForwarderAddress: \"<open-zeppelin-forwarder-address>\", // the OZ defender relayer address (defaults to the standard one)\n    },\n    biconomy: {\n      apiId: \"biconomy-api-id\", // your Biconomy API Id\n      apiKey: \"biconomy-api-key\", // your Biconomy API Key\n      deadlineSeconds: 123, // your Biconomy timeout preference\n    },\n  },\n  infuraApiKey: \"<infura-api-key>\", // your Infura API key\n  alchemyApiKey: \"<alchemy-api-key>\", // your Alchemy API key\n};\n\nfunction Example() {\n  return (\n    <ThirdwebProvider sdkOptions={sdkOptions}>\n      <App />\n    </ThirdwebProvider>\n  );\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### authConfig (optional)\nThe configuration object for setting up [Auth](https://portal.thirdweb.com/wallets/auth); allowing users to sign in with their wallet.\nIt takes an object with the following properties:\n- "
									},
									{
										"kind": "code",
										"text": "`authUrl`"
									},
									{
										"kind": "text",
										"text": " - The backend URL of the authentication endpoints. For example, if your endpoints are at "
									},
									{
										"kind": "code",
										"text": "`/api/auth/login`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`/api/auth/logout`"
									},
									{
										"kind": "text",
										"text": ", etc. then this should be set to "
									},
									{
										"kind": "code",
										"text": "`/api/auth`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`domain`"
									},
									{
										"kind": "text",
										"text": " - The frontend domain used to generate the login payload. This domain should match the domain used on your auth backend.\n- "
									},
									{
										"kind": "code",
										"text": "`secureStorage`"
									},
									{
										"kind": "text",
										"text": " - Secure storage to use when working with JWT tokens. By default auth uses cookies so no need to set this unless you want to specifically use JWT tokens\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nfunction MyApp() {\n  return (\n    <ThirdwebProvider\n      authConfig={{\n        authUrl: \"/api/auth\",\n        domain: \"https://example.com\",\n      }}\n    >\n      <YourApp />\n    </ThirdwebProvider>\n  );\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### signer (optional)\nUse a signer instead of "
									},
									{
										"kind": "code",
										"text": "`supportedWallets`"
									},
									{
										"kind": "text",
										"text": " if you want to provide your own wallet connection logic.\n\n### storageInterface\nOverride the default [Storage](/storage) interface used by the SDK.\n\nAllows you to create an instance of "
									},
									{
										"kind": "code",
										"text": "`ThirdwebStorage`"
									},
									{
										"kind": "text",
										"text": " with your own customized config, and pass it to the SDK. This requires the "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/storage`"
									},
									{
										"kind": "text",
										"text": " package to be installed.\n\n[Learn more about storage](https://portal.thirdweb.com/infrastructure/storage/overview)\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\nimport {\n\tThirdwebStorage,\n\tStorageDownloader,\n\tIpfsUploader,\n} from \"@thirdweb-dev/storage\";\n\n// Configure a custom ThirdwebStorage instance\nconst storage = new ThirdwebStorage({\n\tuploader: new IpfsUploader(),\n\tdownloader: new StorageDownloader(),\n\tgatewayUrls: {\n\t\t\"ipfs://\": [\n\t\t\t\"https://gateway.ipfscdn.io/ipfs/\",\n\t\t\t\"https://cloudflare-ipfs.com/ipfs/\",\n\t\t\t\"https://ipfs.io/ipfs/\",\n\t\t],\n\t},\n});\n\n// Provide the custom storage instance to the SDK\nfunction MyApp() {\n\treturn (\n\t\t<ThirdwebProvider storageInterface={storage}>\n\t\t\t<YourApp />\n\t\t</ThirdwebProvider>\n\t);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### queryClient (optional)\nIf you are using [React Query](https://react-query.tanstack.com/) and have your own "
									},
									{
										"kind": "code",
										"text": "`QueryClient`"
									},
									{
										"kind": "text",
										"text": ",\nyou can pass it as the "
									},
									{
										"kind": "code",
										"text": "`queryClient`"
									},
									{
										"kind": "text",
										"text": " prop to use this client instead of the SDK's default client.\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\n\nfunction MyApp() {\n\t// Your React Query client (or client from other library such as wagmi)\n\tconst queryClient = new QueryClient();\n\n\treturn (\n\t\t<QueryClientProvider client={queryClient}>\n\t\t\t<ThirdwebProvider queryClient={queryClient}>\n\t\t\t\t<YourApp />\n\t\t\t</ThirdwebProvider>\n\t\t</QueryClientProvider>\n\t);\n}\n```"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 792,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TChains",
												"refersToTypeParameter": true
											}
										],
										"name": "ThirdwebProviderProps",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 719,
			"name": "Web3Button",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
					"line": 231,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L231"
				}
			],
			"signatures": [
				{
					"id": 720,
					"name": "Web3Button",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Button that executes a function on a smart contract from the connected wallet when clicked.\n\nIt ensures the following criteria before attempting to call the contract function:\n\n1. There is a connected wallet (if there is not, it renders a ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component instead.\n\n2. The connected wallet is on the correct network as specified in the ["
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)'s "
							},
							{
								"kind": "code",
								"text": "`activeChain`"
							},
							{
								"kind": "text",
								"text": " prop. if it is not, it renders a \"switch network\" button instead.\n\nIf the action you are performing is async, make sure to return a "
							},
							{
								"kind": "code",
								"text": "`Promise`"
							},
							{
								"kind": "text",
								"text": " from the action function so that the SDK knows when the action is complete. This can be done by either using async/await or by returning a "
							},
							{
								"kind": "code",
								"text": "`Promise`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { Web3Button } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n return (\n  <div>\n    <Web3Button\n      contractAddress=\"0x...\"\n      action={(contract) => contract.erc721.transfer(\"0x...\", 1)}\n    >\n      Claim NFT\n    </Web3Button>\n  </div>\n )\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 231,
							"character": 26,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/Web3Button/index.tsx#L231"
						}
					],
					"typeParameter": [
						{
							"id": 721,
							"name": "TAction",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 766,
								"name": "ActionFn",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"parameters": [
						{
							"id": 722,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The props for the component.\n\nRefer to [Web3ButtonProps](https://portal.thirdweb.com/references/react/v4/Web3ButtonProps) for more details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 723,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TAction",
												"refersToTypeParameter": true
											}
										],
										"name": "Web3ButtonProps",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 32,
			"name": "bloctoWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
					"line": 43,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L43"
				}
			],
			"signatures": [
				{
					"id": 33,
					"name": "bloctoWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Blocto Wallet](https://blocto.io/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nbloctoWallet({\n appId: \"my-app-id\",\n recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
							"line": 43,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L43"
						}
					],
					"parameters": [
						{
							"id": 34,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional object containing the following properties to configure the wallet\n\n#### appId (optional)\nTo get advanced features and support from Blocto, you need to create an appId from [blocto dashboard](https://docs.blocto.app/blocto-sdk/register-app-id)\n\n#### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 35,
								"name": "BloctoWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/blocto.ts",
									"qualifiedName": "BloctoWallet"
								},
								"name": "BloctoWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 169,
			"name": "coin98Wallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
					"line": 59,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L59"
				}
			],
			"signatures": [
				{
					"id": 170,
					"name": "coin98Wallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Coin98 Wallet](https://coin98.com/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ncoin98Wallet({\n projectId: \"my-project-id\",\n recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
							"line": 59,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L59"
						}
					],
					"parameters": [
						{
							"id": 171,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional object containing the following properties to configure the wallet\n\n### projectId (optional)\nWhen connecting Coin98 using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 172,
								"name": "Coin98WalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/coin98.ts",
									"qualifiedName": "Coin98Wallet"
								},
								"name": "Coin98Wallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 39,
			"name": "coinbaseWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
					"line": 56,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L56"
				}
			],
			"signatures": [
				{
					"id": 40,
					"name": "coinbaseWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Coinbase Wallet](https://www.coinbase.com/wallet) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ncoinbaseWallet({\n qrmodal: \"custom\",\n recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
							"line": 56,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L56"
						}
					],
					"parameters": [
						{
							"id": 41,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional object containing the following properties to configure the wallet\n\n### qrmodal (optional)\nWhether to use the Coinbase's default QR Code modal or show the custom UI in ConnectWallet Modal.\n\nThe default is "
									},
									{
										"kind": "code",
										"text": "`\"custom\"`"
									},
									{
										"kind": "text",
										"text": "\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 42,
								"name": "CoinbaseWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/coinbase-wallet.ts",
									"qualifiedName": "CoinbaseWallet"
								},
								"name": "CoinbaseWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 148,
			"name": "coreWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
					"line": 63,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L63"
				}
			],
			"signatures": [
				{
					"id": 149,
					"name": "coreWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Core Wallet](https://core.app/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ncoreWallet({\n projectId: \"my-project-id\",\n recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
							"line": 63,
							"character": 26,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L63"
						}
					],
					"parameters": [
						{
							"id": 150,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional object containing the following properties to configure the wallet\n\n### projectId (optional)\nWhen connecting Core using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 151,
								"name": "CoreWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/core-wallet.ts",
									"qualifiedName": "CoreWallet"
								},
								"name": "CoreWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 155,
			"name": "cryptoDefiWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
					"line": 63,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L63"
				}
			],
			"signatures": [
				{
					"id": 156,
					"name": "cryptoDefiWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Crypto.com Defi Wallet](https://crypto.com/defi-wallet) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ncryptoDefiWallet({\n projectId: \"my-project-id\",\n recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
							"line": 63,
							"character": 32,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L63"
						}
					],
					"parameters": [
						{
							"id": 157,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional object containing the following properties to configure the wallet\n\n### projectId (optional)\nWhen connecting Defi wallet using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 158,
								"name": "CryptoDefiWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/crypto-defi-wallet.ts",
									"qualifiedName": "CryptoDefiWallet"
								},
								"name": "CryptoDefiWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 176,
			"name": "darkTheme",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 263,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L263"
				}
			],
			"signatures": [
				{
					"id": 177,
					"name": "darkTheme",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a custom dark theme object by using the default dark theme as a base and applying overrides."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Get the default dark theme\n"
									},
									{
										"kind": "code",
										"text": "```ts\nconst defaultDarkTheme = darkTheme()\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Create a custom dark theme\n"
									},
									{
										"kind": "code",
										"text": "```ts\nconst customTheme = darkTheme({\n  colors: {\n    modalBg: \"red\",\n  },\n});\n```"
									}
								]
							},
							{
								"tag": "@theme",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/design-system/index.ts",
							"line": 263,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L263"
						}
					],
					"parameters": [
						{
							"id": 178,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The overrides to apply to the default dark theme."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 218,
								"name": "ThemeOverrides",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 182,
						"name": "Theme",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 46,
			"name": "embeddedWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
					"line": 70,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx#L70"
				}
			],
			"signatures": [
				{
					"id": 47,
					"name": "embeddedWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Embedded Wallet](https://portal.thirdweb.com/wallet/embedded-wallet) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide\n\nYou can also connect this wallet using the ["
							},
							{
								"kind": "code",
								"text": "`useEmbeddedWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useEmbeddedWallet) hook"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nembeddedWallet({\n  auth: {\n    options: [\"email\", \"google\", \"facebook\", \"apple\"],\n  },\n  recommended: true,\n});\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
							"line": 70,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx#L70"
						}
					],
					"parameters": [
						{
							"id": 48,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional object containing the following properties to configure the wallet\n\n### auth (optional)\nChoose which auth providers to show in the wallet connection UI\n\nBy default, all auth methods are enabled, which is equivalent to setting the following:\n"
									},
									{
										"kind": "code",
										"text": "```ts\n{\n options: [\"email\", \"google\", \"apple\", \"facebook\"]\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI\n\n### onAuthSuccess (optional)\nA callback function that will be called when the user successfully authenticates with the wallet. The callback is called with the "
									},
									{
										"kind": "code",
										"text": "`authResult`"
									},
									{
										"kind": "text",
										"text": " object"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 49,
								"name": "EmbeddedWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/embedded-wallet.ts",
									"qualifiedName": "EmbeddedWallet"
								},
								"name": "EmbeddedWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 219,
			"name": "en",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/en.ts",
					"line": 358,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/en.ts#L358"
				}
			],
			"signatures": [
				{
					"id": 220,
					"name": "en",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calling this function will return the default English locale object to be set on ["
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider) to localize the thirdweb components.\n\nYou can also overrides parts of the default locale object by passing an object with the same structure as the default locale object and only those parts will be overridden."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Use default Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst english = en();\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Override Locale\n"
									},
									{
										"kind": "code",
										"text": "```ts\nconst english = en({\n connectWallet: {\n   signIn: \"Sign in!\"\n }\n})\n```"
									},
									{
										"kind": "text",
										"text": "\n\nPass it to ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)'s "
									},
									{
										"kind": "code",
										"text": "`locale`"
									},
									{
										"kind": "text",
										"text": " prop to localize the thirdweb components.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction Example() {\n  return (\n     <ThirdwebProvider locale={english}>\n       <App />\n     </ThirdwebProvider>\n   )\n}\n```"
									}
								]
							},
							{
								"tag": "@locale",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/en.ts",
							"line": 358,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/en.ts#L358"
						}
					],
					"parameters": [
						{
							"id": 221,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/utils/applyOverrides.ts",
									"qualifiedName": "DeepPartial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 228,
										"name": "ThirdwebLocale",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "DeepPartial",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 228,
						"name": "ThirdwebLocale",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 225,
			"name": "es",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/es.ts",
					"line": 366,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/es.ts#L366"
				}
			],
			"signatures": [
				{
					"id": 226,
					"name": "es",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calling this function will return the default Spanish locale object to be set on ["
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider) to localize the thirdweb components.\n\nYou can also overrides parts of the default locale object by passing an object with the same structure as the default locale object and only those parts will be overridden."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Use default Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst spanish = es();\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Override Locale\n"
									},
									{
										"kind": "code",
										"text": "```ts\nconst spanish = es({\n connectWallet: {\n   signIn: \"Iniciar sesión\"\n }\n})\n```"
									},
									{
										"kind": "text",
										"text": "\n\nPass it to ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)'s "
									},
									{
										"kind": "code",
										"text": "`locale`"
									},
									{
										"kind": "text",
										"text": " prop to localize the thirdweb components.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction Example() {\n  return (\n     <ThirdwebProvider locale={spanish}>\n       <App />\n     </ThirdwebProvider>\n   )\n}\n```"
									}
								]
							},
							{
								"tag": "@locale",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/es.ts",
							"line": 366,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/es.ts#L366"
						}
					],
					"parameters": [
						{
							"id": 227,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/utils/applyOverrides.ts",
									"qualifiedName": "DeepPartial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 228,
										"name": "ThirdwebLocale",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "DeepPartial",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 228,
						"name": "ThirdwebLocale",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 55,
			"name": "frameWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
					"line": 35,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L35"
				}
			],
			"signatures": [
				{
					"id": 56,
					"name": "frameWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Frame Wallet](https://frame.sh/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nframeWallet({\n recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
							"line": 35,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L35"
						}
					],
					"parameters": [
						{
							"id": 57,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional object containing the following properties to configure the wallet\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 58,
								"name": "FrameWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/frame.ts",
									"qualifiedName": "FrameWallet"
								},
								"name": "FrameWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 222,
			"name": "ja",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/ja.ts",
					"line": 360,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/ja.ts#L360"
				}
			],
			"signatures": [
				{
					"id": 223,
					"name": "ja",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calling this function will return the default Japanese locale object to be set on ["
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider) to localize the thirdweb components.\n\nYou can also overrides parts of the default locale object by passing an object with the same structure as the default locale object and only those parts will be overridden."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Use default Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst japanese = ja();\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Override Locale\n"
									},
									{
										"kind": "code",
										"text": "```ts\nconst japanese = ja({\n connectWallet: {\n   signIn: \"サインイン\"\n }\n})\n```"
									},
									{
										"kind": "text",
										"text": "\n\nPass it to ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)'s "
									},
									{
										"kind": "code",
										"text": "`locale`"
									},
									{
										"kind": "text",
										"text": " prop to localize the thirdweb components.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction Example() {\n  return (\n     <ThirdwebProvider locale={japanese}>\n       <App />\n     </ThirdwebProvider>\n   )\n}\n```"
									}
								]
							},
							{
								"tag": "@locale",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/ja.ts",
							"line": 360,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/locales/ja.ts#L360"
						}
					],
					"parameters": [
						{
							"id": 224,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/utils/applyOverrides.ts",
									"qualifiedName": "DeepPartial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 228,
										"name": "ThirdwebLocale",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "DeepPartial",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 228,
						"name": "ThirdwebLocale",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 179,
			"name": "lightTheme",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 235,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L235"
				}
			],
			"signatures": [
				{
					"id": 180,
					"name": "lightTheme",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a custom light theme object by using the default dark theme as a base and applying overrides."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Get the default light theme\n"
									},
									{
										"kind": "code",
										"text": "```ts\nconst defaultLightTheme = lightTheme()\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Create a custom light theme\n"
									},
									{
										"kind": "code",
										"text": "```ts\nconst customTheme = lightTheme({\n  colors: {\n    modalBg: \"red\",\n  },\n});\n```"
									}
								]
							},
							{
								"tag": "@theme",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/design-system/index.ts",
							"line": 235,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/design-system/index.ts#L235"
						}
					],
					"parameters": [
						{
							"id": 181,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The overrides to apply to the default light theme."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 218,
								"name": "ThemeOverrides",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 182,
						"name": "Theme",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 61,
			"name": "localWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/localWallet/localWallet.tsx",
					"line": 38,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/localWallet/localWallet.tsx#L38"
				}
			],
			"signatures": [
				{
					"id": 62,
					"name": "localWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for Local wallet which allows integrating a \"Guest Login\" experience to app.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nlocalWallet({\n persist: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/localWallet/localWallet.tsx",
							"line": 38,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/localWallet/localWallet.tsx#L38"
						}
					],
					"parameters": [
						{
							"id": 63,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional object containing the following properties to configure the wallet\n\n### persist (optional)\n\nIf "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", the encrypted wallet JSON will be stored on localStorage with user's password.\nthe user will not need to enter their password again when they visit the site. Because of this, the wallet can not be auto connected.\n\nIf "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", wallet will not be stored, and no password will be required to connect.\nthe wallet will be lost when the user leaves or reloads the page.\n\nBy default, it is set to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 64,
								"name": "LocalWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/localWallet/types.ts",
							"qualifiedName": "LocalWalletConfig"
						},
						"name": "LocalWalletConfig",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 67,
			"name": "magicLink",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
					"line": 153,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/magic/magicLink.tsx#L153"
				}
			],
			"signatures": [
				{
					"id": 68,
					"name": "magicLink",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Magic Link](https://magic.link/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nmagicLink({\n  apiKey: \"pk_test_123\",\n  emailLogin: true,\n  smsLogin: true,\n  oauthOptions: {\n    providers: [\"google\", \"facebook\"],\n    redirectURI: \"https://example.com/foo/bar\",\n  },\n  type: \"auth\", // or 'connect'\n});\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
							"line": 153,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/magic/magicLink.tsx#L153"
						}
					],
					"parameters": [
						{
							"id": 69,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Object containing the following properties to configure the wallet\n\n### apiKey\nYour Magic Link apiKey\n\nYou can get an API key by signing up for an account on [Magic Link's website](https://magic.link/).\n\nMust be a "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": "\n\n### magicSdkConfiguration (optional)\nConfiguration for [Magic Auth](https://magic.link/docs/auth/overview) SDK\n\nThis is only relevant if you are using "
									},
									{
										"kind": "code",
										"text": "`type: 'auth'`"
									},
									{
										"kind": "text",
										"text": " in your config\n\n"
									},
									{
										"kind": "code",
										"text": "```ts\n{\n  locale?: string;\n  endpoint?: string;\n  testMode?: boolean;\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n* "
									},
									{
										"kind": "code",
										"text": "`locale`"
									},
									{
										"kind": "text",
										"text": " - Customize the language of Magic's modal, email and confirmation screen. See [Localization](https://magic.link/docs/auth/more/customization/localization) for more.\n\n* "
									},
									{
										"kind": "code",
										"text": "`endpoint`"
									},
									{
										"kind": "text",
										"text": " - A URL pointing to the Magic iframe application\n\n* "
									},
									{
										"kind": "code",
										"text": "`testMode`"
									},
									{
										"kind": "text",
										"text": " - Enable [testMode](https://magic.link/docs/auth/introduction/test-mode) to assert the desired behavior through the email address you provide to "
									},
									{
										"kind": "code",
										"text": "`loginWithMagicLink`"
									},
									{
										"kind": "text",
										"text": " without having to go through the auth flow.\n\n### smsLogin (optional)\nSpecify whether you want to allow users to login with their phone number or not. It is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " by default\n\nThis is only relevant if you are using "
									},
									{
										"kind": "code",
										"text": "`type: 'auth'`"
									},
									{
										"kind": "text",
										"text": "\n\nMust be a "
									},
									{
										"kind": "code",
										"text": "`boolean`"
									},
									{
										"kind": "text",
										"text": "\n\n### emailLogin (optional)\nSpecify whether you want to allow users to login with their email or not. It is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " by default\n\nThis is only relevant if you are using "
									},
									{
										"kind": "code",
										"text": "`type: 'auth'`"
									},
									{
										"kind": "text",
										"text": "\n\nMust be a "
									},
									{
										"kind": "code",
										"text": "`boolean`"
									},
									{
										"kind": "text",
										"text": "\n\n### oauthOptions (optional)\nSpecify which oauth providers you support in "
									},
									{
										"kind": "code",
										"text": "`providers`"
									},
									{
										"kind": "text",
										"text": " array.\n\nSpecify which URI to redirect to after the oauth flow is complete in "
									},
									{
										"kind": "code",
										"text": "`redirectURI`"
									},
									{
										"kind": "text",
										"text": " option. If no "
									},
									{
										"kind": "code",
										"text": "`redirectURI`"
									},
									{
										"kind": "text",
										"text": " is specified, the user will be redirected to the current page.\n\nYou must pass full URL and not just a relative path. For example, "
									},
									{
										"kind": "code",
										"text": "`\"https://example.com/foo\"`"
									},
									{
										"kind": "text",
										"text": " is valid but "
									},
									{
										"kind": "code",
										"text": "`\"/foo\"`"
									},
									{
										"kind": "text",
										"text": " is not.\nYou can use "
									},
									{
										"kind": "code",
										"text": "`new URL(\"/foo\", window.location.origin).href`"
									},
									{
										"kind": "text",
										"text": " to get the full URL from a relative path based on the current origin.\n\nThis is only relevant if you are using "
									},
									{
										"kind": "code",
										"text": "`type: 'auth'`"
									},
									{
										"kind": "text",
										"text": "\n\nYou also need to enable the oauth providers for your apiKey from [Magic dashboard](https://dashboard.magic.link/).\n\n"
									},
									{
										"kind": "code",
										"text": "```ts\ntype OauthOptions = {\n  redirectURI?: string;\n  providers: OauthProvider[];\n};\n\ntype OauthProvider =\n  | \"google\"\n  | \"facebook\"\n  | \"apple\"\n  | \"github\"\n  | \"bitbucket\"\n  | \"gitlab\"\n  | \"linkedin\"\n  | \"twitter\"\n  | \"discord\"\n  | \"twitch\"\n  | \"microsoft\";\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### recommended (optional)\nShow this wallet as \"recommended\" in the ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 70,
								"name": "MagicWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/magic/types.ts",
							"qualifiedName": "ConfiguredMagicLinkWallet"
						},
						"name": "ConfiguredMagicLinkWallet",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 73,
			"name": "metamaskWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
					"line": 75,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L75"
				}
			],
			"signatures": [
				{
					"id": 74,
					"name": "metamaskWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [MetaMask Wallet](https://metamask.io/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nmetamaskWallet({\n  projectId: 'YOUR_PROJECT_ID',\n  connectionMethod: 'walletConnect', // or 'metamaskBrowser',\n  recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
							"line": 75,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L75"
						}
					],
					"parameters": [
						{
							"id": 75,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional configuration options for the wallet\n\n### projectId (optional)\nWhen connecting Core using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI\n\n### connectionMethod (optional)\nSpecify how the connection to metamask app should be established if the user is on a mobile device.\n\nThere are two options: "
									},
									{
										"kind": "code",
										"text": "`\"walletconnect\"`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`\"browser\"`"
									},
									{
										"kind": "text",
										"text": "\n1. "
									},
									{
										"kind": "code",
										"text": "`\"walletconnect\"`"
									},
									{
										"kind": "text",
										"text": " - User will be redirected to MetaMask app and upon successful connection, user can return back to the web page.\n2. "
									},
									{
										"kind": "code",
										"text": "`\"browser\"`"
									},
									{
										"kind": "text",
										"text": " - User will be redirected to MetaMask app and the web page will be opened in MetaMask browser.\n\nDefault is "
									},
									{
										"kind": "code",
										"text": "`\"walletconnect\"`"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 76,
								"name": "MetamaskWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/metamask.ts",
									"qualifiedName": "MetaMaskWallet"
								},
								"name": "MetaMaskWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 141,
			"name": "okxWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
					"line": 48,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L48"
				}
			],
			"signatures": [
				{
					"id": 142,
					"name": "okxWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [OKX Wallet](https://www.okx.com/web3) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nokxWallet({\n projectId: 'YOUR_PROJECT_ID',\n recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
							"line": 48,
							"character": 25,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L48"
						}
					],
					"parameters": [
						{
							"id": 143,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional configuration options for the wallet\n\n### projectId (optional)\nWhen connecting Core using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 144,
								"name": "OKXWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/okx.ts",
									"qualifiedName": "OKXWallet"
								},
								"name": "OKXWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 916,
			"name": "oneKeyWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx",
					"line": 59,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx#L59"
				}
			],
			"signatures": [
				{
					"id": 917,
					"name": "oneKeyWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Onekey Wallet](https://onekey.so/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\noneKeyWallet({\n projectId: 'YOUR_PROJECT_ID',\n recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx",
							"line": 59,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx#L59"
						}
					],
					"parameters": [
						{
							"id": 918,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional configuration options for the wallet\n\n### projectId (optional)\nWhen connecting Core using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 919,
								"name": "OneKeyWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/onekey.ts",
									"qualifiedName": "OneKeyWallet"
								},
								"name": "OneKeyWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 90,
			"name": "phantomWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
					"line": 38,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L38"
				}
			],
			"signatures": [
				{
					"id": 91,
					"name": "phantomWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Phantom Wallet](https://phantom.app/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nphantomWallet({\n recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
							"line": 38,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L38"
						}
					],
					"parameters": [
						{
							"id": 92,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional configuration options for the wallet\n\n### recommended (optional)\nIf "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI. Default is "
									},
									{
										"kind": "code",
										"text": "`false`"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 93,
								"name": "PhantomWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/phantom.ts",
									"qualifiedName": "PhantomWallet"
								},
								"name": "PhantomWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 162,
			"name": "rabbyWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
					"line": 48,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L48"
				}
			],
			"signatures": [
				{
					"id": 163,
					"name": "rabbyWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Rabby Wallet](https://rabby.io/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nrabbyWallet({\n projectId: 'YOUR_PROJECT_ID',\n recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
							"line": 48,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L48"
						}
					],
					"parameters": [
						{
							"id": 164,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional configuration options for the wallet\n\n### projectId (optional)\nWhen connecting Core using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 165,
								"name": "RabbyWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/rabby.ts",
									"qualifiedName": "RabbyWallet"
								},
								"name": "RabbyWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 96,
			"name": "rainbowWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
					"line": 63,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L63"
				}
			],
			"signatures": [
				{
					"id": 97,
					"name": "rainbowWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Rainbow Wallet](https://rainbow.me/en/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nrainbowWallet({\n projectId: 'YOUR_PROJECT_ID',\n recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
							"line": 63,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L63"
						}
					],
					"parameters": [
						{
							"id": 98,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional configuration options for the wallet\n\n### projectId (optional)\nWhen connecting Core using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 99,
								"name": "RainbowWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/rainbow-wallet.ts",
									"qualifiedName": "RainbowWallet"
								},
								"name": "RainbowWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 103,
			"name": "safeWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
					"line": 59,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L59"
				}
			],
			"signatures": [
				{
					"id": 104,
					"name": "safeWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Safe](https://safe.global/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nsafeWallet({\n personalWallets: [\n   metamaskWallet(),\n   coinbaseWallet(),\n   walletConnect()\n ],\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
							"line": 59,
							"character": 26,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L59"
						}
					],
					"parameters": [
						{
							"id": 105,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional configuration options for the wallet\n\n### personalWallets (optional)\nAn array of personal wallets to show in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal for personal wallet selection\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 106,
								"name": "SafeWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/safe/types.ts",
							"qualifiedName": "SafeWalletConfig"
						},
						"name": "SafeWalletConfig",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 110,
			"name": "smartWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx",
					"line": 50,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx#L50"
				}
			],
			"signatures": [
				{
					"id": 111,
					"name": "smartWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Smart Wallet](https://portal.thirdweb.com/references/wallets/v2/SmartWallet) which allows integrating the wallet with React\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nsmartWallet(\n metamaskWallet(),\n {\n   factoryAddress: '0x...',\n   gasless: true,\n }\n)\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx",
							"line": 50,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx#L50"
						}
					],
					"parameters": [
						{
							"id": 112,
							"name": "walletConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/core/types/wallet.ts",
									"qualifiedName": "WalletConfig"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 113,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configuration options for the Smart Wallet\n\n### factoryAddress\nThe address of the Smart Wallet Factory contract. Must be of type "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": "\n\n### gasless\nWhether to turn on or off gasless transactions. Must be a "
									},
									{
										"kind": "code",
										"text": "`boolean`"
									},
									{
										"kind": "text",
										"text": ".\n\n- If set to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", all gas fees will be paid by a paymaster.\n- If set to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", all gas fees will be paid by the Smart Wallet itself (needs to be funded)."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 114,
								"name": "SmartWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/smart-wallet.ts",
									"qualifiedName": "SmartWallet"
								},
								"name": "SmartWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 115,
			"name": "trustWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
					"line": 60,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L60"
				}
			],
			"signatures": [
				{
					"id": 116,
					"name": "trustWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Trust Wallet](https://trustwallet.com/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrustWallet({\n projectId: 'your_project_id',\n recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
							"line": 60,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L60"
						}
					],
					"parameters": [
						{
							"id": 117,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 118,
								"name": "TrustWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/trust.ts",
									"qualifiedName": "TrustWallet"
								},
								"name": "TrustWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 869,
			"name": "useEmbeddedWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
					"line": 115,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L115"
				}
			],
			"signatures": [
				{
					"id": 870,
					"name": "useEmbeddedWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to connect "
							},
							{
								"kind": "code",
								"text": "`EmbeddedWallet`"
							},
							{
								"kind": "text",
								"text": " which allows users to login via Email or social logins\n\nThe "
							},
							{
								"kind": "code",
								"text": "`embeddedWallet()`"
							},
							{
								"kind": "text",
								"text": " should be added to ["
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)'s "
							},
							{
								"kind": "code",
								"text": "`supportedWallets`"
							},
							{
								"kind": "text",
								"text": " prop to enable auto-connection on page load"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Social Login\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { useEmbeddedWallet } from \"@thirdweb-dev/react\";\n\nfunction App() {\n  const { connect } = useEmbeddedWallet();\n\n  const handleLogin = async () => {\n    await connect({\n      strategy: \"google\",\n    });\n  };\n\n  return <button onClick={handleLogin}> Sign in with Google </button>;\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n\n### Login with Email verification\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useEmbeddedWallet } from \"@thirdweb-dev/react\";\n\nfunction App() {\n  const { connect, sendVerificationEmail } = useEmbeddedWallet();\n\n  const sendVerificationCode = async (email: string) => {\n    // send email verification code\n    await sendVerificationEmail({ email });\n  };\n\n  const handleLogin = async (email: string, verificationCode: string) => {\n    // verify email and connect\n    await connect({\n      strategy: \"email_verification\",\n      email,\n      verificationCode,\n    });\n  };\n\n  return <div> ... </div>;\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n\n### Available connection strategies\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n// email verification\ntype EmailVerificationAuthParams = {\n  strategy: \"email_verification\";\n  email: string;\n  verificationCode: string;\n  recoveryCode?: string;\n};\n\nexport type EmbeddedWalletOauthStrategy = \"google\" | \"apple\" | \"facebook\";\n\ntype OauthAuthParams = {\n  strategy: EmbeddedWalletOauthStrategy;\n  openedWindow?: Window;\n  closeOpenedWindow?: (window: Window) => void;\n};\n\n// bring your own authentication\ntype JwtAuthParams = {\n  strategy: \"jwt\";\n  jwt: string;\n  encryptionKey?: string;\n};\n\n// open iframe to send and input the verification code only\ntype IframeOtpAuthParams = {\n  strategy: \"iframe_email_verification\";\n  email: string;\n};\n\n// open iframe to enter email and verification code\ntype IframeAuthParams = {\n  strategy: \"iframe\";\n};\n```"
									}
								]
							},
							{
								"tag": "@walletConnection",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
							"line": 115,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L115"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 871,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 872,
									"name": "connect",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
											"line": 167,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L167"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 873,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
													"line": 123,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L123"
												}
											],
											"signatures": [
												{
													"id": 874,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
															"line": 123,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L123"
														}
													],
													"parameters": [
														{
															"id": 875,
															"name": "authParams",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/types.ts",
																	"qualifiedName": "AuthParams"
																},
																"name": "AuthParams",
																"package": "@thirdweb-dev/wallets"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/wallets/embedded-wallet.ts",
																	"qualifiedName": "EmbeddedWallet"
																},
																"name": "EmbeddedWallet",
																"package": "@thirdweb-dev/wallets"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 876,
									"name": "sendVerificationEmail",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
											"line": 168,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L168"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 877,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
													"line": 151,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L151"
												}
											],
											"signatures": [
												{
													"id": 878,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
															"line": 151,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L151"
														}
													],
													"parameters": [
														{
															"id": 879,
															"name": "__namedParameters",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 880,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 881,
																			"name": "email",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
																					"line": 151,
																					"character": 24,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L151"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				881
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
																			"line": 151,
																			"character": 22,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L151"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts",
																	"qualifiedName": "SendEmailOtpReturnType"
																},
																"name": "SendEmailOtpReturnType",
																"package": "@thirdweb-dev/wallets"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										872,
										876
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
									"line": 166,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L166"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 884,
			"name": "useEmbeddedWalletSendVerificationEmail",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
					"line": 9,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L9"
				}
			],
			"signatures": [
				{
					"id": 885,
					"name": "useEmbeddedWalletSendVerificationEmail",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@walletConnection",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
							"line": 9,
							"character": 54,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L9"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 886,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
									"line": 13,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L13"
								}
							],
							"signatures": [
								{
									"id": 887,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
											"line": 13,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L13"
										}
									],
									"parameters": [
										{
											"id": 888,
											"name": "email",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts",
													"qualifiedName": "SendEmailOtpReturnType"
												},
												"name": "SendEmailOtpReturnType",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 882,
			"name": "useEmbeddedWalletUserEmail",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
					"line": 193,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L193"
				}
			],
			"signatures": [
				{
					"id": 883,
					"name": "useEmbeddedWalletUserEmail",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to get the user's email from connected "
							},
							{
								"kind": "code",
								"text": "`EmbeddedWallet`"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst emailQuery = useEmbeddedWalletUserEmail();\n\nif (emailQuery.isFetching) {\n return <div> Loading... </div>;\n}\n\nif (emailQuery.data) {\n return <div> Connected with {emailQuery.data} </div>;\n}\n\nreturn <div> Not connected </div>;\n```"
									}
								]
							},
							{
								"tag": "@walletConnection",
								"content": []
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Hook's "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " property contains the "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": " email if "
									},
									{
										"kind": "code",
										"text": "`EmbeddedWallet`"
									},
									{
										"kind": "text",
										"text": " is connected, otherwise "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
							"line": 193,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L193"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 551,
			"name": "useIsWalletModalOpen",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
					"line": 103,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L103"
				}
			],
			"signatures": [
				{
					"id": 552,
					"name": "useIsWalletModalOpen",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if the ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal is open or not"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\nconst isOpen = useIsWalletModalOpen();\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) modal is open, "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " otherwise"
									}
								]
							},
							{
								"tag": "@connectWallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
							"line": 103,
							"character": 36,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L103"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 998,
			"name": "usePaymentsSDKContext",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/payments/Provider.tsx",
					"line": 52,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/Provider.tsx#L52"
				}
			],
			"signatures": [
				{
					"id": 999,
					"name": "usePaymentsSDKContext",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/payments/Provider.tsx",
							"line": 52,
							"character": 37,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/payments/Provider.tsx#L52"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/payments/Provider.tsx",
							"qualifiedName": "SDKContext"
						},
						"name": "SDKContext",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 923,
			"name": "useResolvedMediaType",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
					"line": 762,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/MediaRenderer.tsx#L762"
				}
			],
			"signatures": [
				{
					"id": 924,
					"name": "useResolvedMediaType",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for resolving the media type and URL of a given URI (including IPFS URIs).\n\nThe "
							},
							{
								"kind": "code",
								"text": "`<MediaRenderer />`"
							},
							{
								"kind": "text",
								"text": " component renders the relevant.\nHTML element for a given URL, including IPFS URIs. e.g. "
							},
							{
								"kind": "code",
								"text": "`<img>`"
							},
							{
								"kind": "text",
								"text": " for images, "
							},
							{
								"kind": "code",
								"text": "`<video>`"
							},
							{
								"kind": "text",
								"text": " for videos, etc."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with fully formed url\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const resolved = useResolvedMediaType(\"https://example.com/video.mp4\");\n  console.log(\"mime type\", resolved.data.mimeType);\n  console.log(\"url\", resolved.data.url);\n  return null;\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with IPFS cid\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const resolved = useResolvedMediaType(\"ipfs://QmWATWQ7fVPP2EFGu71UkfnqhYXDYH566qy47CnJDgvsd\");\n  console.log(\"mime type\", resolved.data.mimeType);\n  console.log(\"url\", resolved.data.url);\n  return null;\n}\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The hook returns an object containing two properties:\n- "
									},
									{
										"kind": "code",
										"text": "`url`"
									},
									{
										"kind": "text",
										"text": ": The fully resolved URL, or "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": " if the URI is invalid.\n- "
									},
									{
										"kind": "code",
										"text": "`mimeType`"
									},
									{
										"kind": "text",
										"text": ": The mime type of the media, or "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": " if the URI is invalid."
									}
								]
							},
							{
								"tag": "@metadata",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
							"line": 762,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/MediaRenderer.tsx#L762"
						}
					],
					"parameters": [
						{
							"id": 925,
							"name": "uri",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The uri to resolve (can be a url or a "
									},
									{
										"kind": "code",
										"text": "`ipfs://\\<cid\\>`"
									},
									{
										"kind": "text",
										"text": ")"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 926,
							"name": "mimeType",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mime type of the media"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 927,
							"name": "gatewayUrl",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The url of the IPFS gateway to use (defaults to "
									},
									{
										"kind": "code",
										"text": "`https://ipfs.io/ipfs/`"
									},
									{
										"kind": "text",
										"text": ")"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 928,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 930,
									"name": "mimeType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
											"line": 793,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/MediaRenderer.tsx#L793"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"defaultValue": "resolvedMimType.data"
								},
								{
									"id": 929,
									"name": "url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
											"line": 792,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/MediaRenderer.tsx#L792"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "resolvedUrl"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										930,
										929
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
									"line": 791,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/components/MediaRenderer.tsx#L791"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 553,
			"name": "useSetIsWalletModalOpen",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
					"line": 133,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L133"
				}
			],
			"signatures": [
				{
					"id": 554,
					"name": "useSetIsWalletModalOpen",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Open or close the ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\nconst setIsWalletModalOpen = useSetIsWalletModalOpen();\n\nfunction openModal() {\n setIsWalletModalOpen(true);\n}\n\nfunction closeModal() {\n setIsWalletModalOpen(false);\n}\n\nreturn (\n  <div>\n   <button onClick={openModal}>Open Modal</button>\n   <button onClick={closeModal}>Close Modal</button>\n  </div>\n)\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Function to open or close the modal"
									}
								]
							},
							{
								"tag": "@connectWallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
							"line": 133,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L133"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
							"qualifiedName": "BoolSetter"
						},
						"name": "BoolSetter",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 577,
			"name": "useSetWalletModalConfig",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
					"line": 406,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L406"
				}
			],
			"signatures": [
				{
					"id": 578,
					"name": "useSetWalletModalConfig",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set Modal config for the ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal.\nThis is useful if you want to open the Modal using the "
							},
							{
								"kind": "code",
								"text": "`useSetIsWalletModalOpen`"
							},
							{
								"kind": "text",
								"text": " hook and want to configure the Modal before opening it."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\nfunction Example() {\n const setModalConfig = useSetWalletModalConfig();\n const setIsWalletModalOpen = useSetIsWalletModalOpen();\n\n function openModal() {\n   setIsWalletModalOpen(true);\n   setModalConfig({\n     modalSize: \"compact\",\n     theme: \"light\"\n   })\n }\n\n return <button onClick={openModal}> Open Modal </button>\n}\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Function to set the Modal config\n\nThe function takes an object with the following properties\n\n### title\nTitle of the Modal\n\n### theme\ntheme to use in Modal\n\nBy default it is set to \"dark\" if "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " is not set on ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)\nIf a "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " is set on ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider) then that theme will be used by default\n\ntheme can be set to either "
									},
									{
										"kind": "code",
										"text": "`\"dark\"`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`\"light\"`"
									},
									{
										"kind": "text",
										"text": " or a custom theme object. You can also import "
									},
									{
										"kind": "code",
										"text": "`lightTheme`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`darkTheme`"
									},
									{
										"kind": "text",
										"text": " functions from "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/react`"
									},
									{
										"kind": "text",
										"text": " to use the default themes as base and overrides parts of it.\n\n"
									},
									{
										"kind": "code",
										"text": "```ts\nimport { lightTheme } from \"@thirdweb-dev/react\";\nconst customTheme = lightTheme({\n colors: {\n   modalBg: 'red'\n }\n})\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### modalSize\nSet the size of the modal - "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`wide`"
									},
									{
										"kind": "text",
										"text": " on desktop\n\nModal size is always "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " on mobile\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`\"wide\"`"
									},
									{
										"kind": "text",
										"text": " for desktop.\n\n### termsOfServiceUrl\nURL of the \"terms of service\" page\n\nIf provided, Modal will show a Terms of Service message at the bottom with below link\n\n### privacyPolicyUrl\nURL of the \"privacy policy\" page\n\nIf provided, Modal will show a Privacy Policy message at the bottom with below link\n\n### welcomeScreen\nCustomize the welcome screen. This is only applicable when "
									},
									{
										"kind": "code",
										"text": "`modalSize`"
									},
									{
										"kind": "text",
										"text": " is set to \"wide\".\nOn \"wide\" Modal size, a welcome screen is shown on the right side of the modal.\n\nThis screen can be customized in two ways\n\n#### 1. Customize Metadata and Image\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction Example() {\n const setModalConfig = useSetWalletModalConfig();\n const setIsWalletModalOpen = useSetIsWalletModalOpen();\n\n function openModal() {\n   setIsWalletModalOpen(true);\n   setModalConfig({\n     welcomeScreen: {\n       title: \"your title\",\n       subtitle: \"your subtitle\",\n       img: {\n         src: \"https://your-image-url.png\",\n         width: 300,\n         height: 50,\n       }\n     }\n   })\n }\n\n return <button onClick={openModal}> Open Modal </button>\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n#### 2. Render Custom Component\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction Example() {\n const setModalConfig = useSetWalletModalConfig();\n const setIsWalletModalOpen = useSetIsWalletModalOpen();\n\n function openModal() {\n   setIsWalletModalOpen(true);\n   setModalConfig({\n     welcomeScreen() {\n      return <YourCustomComponent />\n     }\n   })\n }\n\n return <button onClick={openModal}> Open Modal </button>\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### titleIconUrl\nReplace the thirdweb icon next to modalTitle and set your own iconUrl\n\n### auth\nThe object contains the following properties to customize the authentication\n- "
									},
									{
										"kind": "code",
										"text": "`loginOptional`"
									},
									{
										"kind": "text",
										"text": " - specify whether signing in is optional or not. By default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " ( Sign in is required ) if "
									},
									{
										"kind": "code",
										"text": "`authConfig`"
									},
									{
										"kind": "text",
										"text": " is set on ["
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)\n- "
									},
									{
										"kind": "code",
										"text": "`onLogin`"
									},
									{
										"kind": "text",
										"text": " - Callback to be called after user signs in with their wallet\n- "
									},
									{
										"kind": "code",
										"text": "`onLogout`"
									},
									{
										"kind": "text",
										"text": " - Callback to be called after user signs out\n\n### onConnect\nCallback to be called on successful connection of wallet\n\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction Example() {\n const setModalConfig = useSetWalletModalConfig();\n const setIsWalletModalOpen = useSetIsWalletModalOpen();\n\n function openModal() {\n   setIsWalletModalOpen(true);\n   setModalConfig({\n     onConnect() {\n       console.log(\"wallet connected\")\n     }\n   })\n }\n\n return <button onClick={openModal}> Open Modal </button>\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nNote that this does not include the sign in, If you want to call a callback after user connects AND signs in with their wallet, use "
									},
									{
										"kind": "code",
										"text": "`auth.onLogin`"
									},
									{
										"kind": "text",
										"text": " prop instead\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction Example() {\n const setModalConfig = useSetWalletModalConfig();\n const setIsWalletModalOpen = useSetIsWalletModalOpen();\n\n function openModal() {\n   setIsWalletModalOpen(true);\n   setModalConfig({\n     auth: {\n       onLogin() {\n          console.log(\"wallet connected and signed in\")\n       }\n     }\n   })\n }\n\n return <button onClick={openModal}> Open Modal </button>\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
							"line": 406,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L406"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 579,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
									"line": 416,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L416"
								}
							],
							"signatures": [
								{
									"id": 580,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
											"line": 416,
											"character": 9,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L416"
										}
									],
									"parameters": [
										{
											"id": 581,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 555,
												"name": "ModalConfigOptions",
												"package": "@thirdweb-dev/react"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 657,
			"name": "useShowConnectEmbed",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
					"line": 173,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L173"
				}
			],
			"signatures": [
				{
					"id": 658,
					"name": "useShowConnectEmbed",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " if the "
							},
							{
								"kind": "code",
								"text": "`<ConnectEmbed />`"
							},
							{
								"kind": "text",
								"text": " should be rendered.\nIt returns true if either one of the following conditions are met:\n- the wallet is not connected\n- the wallet is connected but the user is not signed in and "
							},
							{
								"kind": "code",
								"text": "`auth`"
							},
							{
								"kind": "text",
								"text": " is required ( loginOptional is not set to false )"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\nfunction Example() {\n  const loginOptional = false;\n  const showConnectEmbed = useShowConnectEmbed(loginOptional);\n\n  if (!showConnectEmbed) {\n    return <div> Wallet is connected </div>\n  }\n\n  return (\n    <div>\n      <ConnectEmbed\n        auth={{\n          loginOptional,\n        }}\n      />\n    </div>\n  );\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
							"line": 173,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx#L173"
						}
					],
					"parameters": [
						{
							"id": 659,
							"name": "loginOptional",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify whether the "
									},
									{
										"kind": "code",
										"text": "`<ConnectEmbed />`"
									},
									{
										"kind": "text",
										"text": " you want to render has auth enabled or not.\nIf not specified, it is assumed to be "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " ( login is required )"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 9,
			"name": "useSmartWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
					"line": 210,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L210"
				}
			],
			"signatures": [
				{
					"id": 10,
					"name": "useSmartWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to connect [Smart wallet](https://portal.thirdweb.com/references/wallets/v2/SmartWallet)\n\n"
							},
							{
								"kind": "code",
								"text": "`useSmartWallet()`"
							},
							{
								"kind": "text",
								"text": " handles connecting both the personal wallet and the Smart Wallet.\n\nThe "
							},
							{
								"kind": "code",
								"text": "`smartWallet()`"
							},
							{
								"kind": "text",
								"text": " also need to be added in ["
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/ThirdwebProvider)'s "
							},
							{
								"kind": "code",
								"text": "`supportedWallets`"
							},
							{
								"kind": "text",
								"text": " prop to enable auto-connection on page load\n\n### Example\n\nSet up ThirdwebProvider with supportedWallets\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<ThirdwebProvider\n supportedWallets={[\n   smartWallet(\n     metamaskWallet(),\n   ),\n   smartWallet(\n     coinbaseWallet(),\n   )\n   // ...etc\n ]}\n/>\n```"
							},
							{
								"kind": "text",
								"text": "\n\nAnd then use the hook in your app to connect smart wallet\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\nimport { useSmartWallet } from \"@thirdweb-dev/react\";\n\nfunction Example() {\n  // Here we use metamask as the personal wallet\n  const { connect } = useSmartWallet(metamaskWallet(), {\n    factoryAddress: \"0x...\",\n    gasless: true,\n  });\n\n  return (\n    <button\n      onClick={async () => {\n        await connect();\n      }}\n    >\n      Connect Smart Wallet\n    </button>\n  );\n}\n```"
							},
							{
								"kind": "text",
								"text": "\n\n## Using "
							},
							{
								"kind": "code",
								"text": "`EmbeddedWallet`"
							},
							{
								"kind": "text",
								"text": " as the personal signer\n\nYou can have your users sign in with email or social and then connect their associated Smart Wallet.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\nconst { connect } = useSmartWallet(embeddedWallet(), {\n  factoryAddress: factoryAddress,\n  gasless: true,\n});\n\nconst onClick = async () => {\n  await connect({\n    connectPersonalWallet: async (embeddedWallet) => {\n      // login with google and connect the embedded wallet\n      const authResult = await embeddedWallet.authenticate({\n        strategy: \"google\",\n      });\n      await embeddedWallet.connect({ authResult });\n    },\n  });\n};\n```"
							},
							{
								"kind": "text",
								"text": "\n\n## Using "
							},
							{
								"kind": "code",
								"text": "`LocalWallet`"
							},
							{
								"kind": "text",
								"text": " as the personal signer\n\nYou can generate wallets on device for your users and connect to the associated Smart Wallet.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\nconst { connect } = useSmartWallet(localWallet(), {\n  factoryAddress: \"0x...\",\n  gasless: true,\n});\n\nconst onClick = async () => {\n  await connect({\n    connectPersonalWallet: async (localWallet) => {\n      // Generate and connect s local wallet before using it as the personal signer\n      await localWallet.generate();\n      await localWallet.connect();\n    },\n  });\n};\n```"
							},
							{
								"kind": "text",
								"text": "\n\n## Predicting the Smart Wallet address\n\nTHe "
							},
							{
								"kind": "code",
								"text": "`useSmartWallet()`"
							},
							{
								"kind": "text",
								"text": " also returns a function to predict a smart wallet address given a personal wallet address before connecting to it.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\nconst { predictAddress } = useSmartWallet(localWallet(), {\n  factoryAddress: \"0x...\",\n  gasless: true,\n});\n\nconst onClick = async () => {\n  const address = await predictAddress({\n    personalWalletAddress: \"0x...\",\n  });\n  console.log(\"Predicted Smart Wallet address\", address);\n};\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@walletConnection",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
							"line": 210,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L210"
						}
					],
					"typeParameter": [
						{
							"id": 11,
							"name": "W",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/core/types/wallet.ts",
									"qualifiedName": "WalletInstance"
								},
								"name": "WalletInstance",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 12,
							"name": "personalWallet",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A wallet configuration object from [@thirdweb-dev/react](https://www.npmjs.com/package/@thirdweb-dev/react) package.\n\nEx: "
									},
									{
										"kind": "code",
										"text": "`metamaksWallet()`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`coinbaseWallet()`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`walletConnectWallet()`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`embeddedWallet()`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`localWallet()`"
									},
									{
										"kind": "text",
										"text": ", etc."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/core/types/wallet.ts",
									"qualifiedName": "WalletConfig"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "W",
										"refersToTypeParameter": true
									}
								],
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 13,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Smart Wallet configuration options\n\n#### factoryAddress (required)\nThe address of the Smart Wallet Factory contract. Must be of type "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": ".\n\n#### gasless (required)\nWhether to turn on or off gasless transactions.\n\n- If set to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", all gas fees will be paid by a paymaster.\n- If set to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", all gas fees will be paid by the Smart Wallet itself (needs to be funded).\n\nMust be a "
									},
									{
										"kind": "code",
										"text": "`boolean`"
									},
									{
										"kind": "text",
										"text": ".\n\n#### factoryInfo (optional)\nCustomize how the Smart Wallet Factory contract is interacted with. If not provided, the default functions will be used.\n\nMust be a "
									},
									{
										"kind": "code",
										"text": "`object`"
									},
									{
										"kind": "text",
										"text": ". The object can contain the following properties:\n\n- "
									},
									{
										"kind": "code",
										"text": "`createAccount`"
									},
									{
										"kind": "text",
										"text": " - a function that returns the transaction object to create a new Smart Wallet.\n- "
									},
									{
										"kind": "code",
										"text": "`getAccountAddress`"
									},
									{
										"kind": "text",
										"text": " - a function that returns the address of the Smart Wallet contract given the owner address.\n- "
									},
									{
										"kind": "code",
										"text": "`abi`"
									},
									{
										"kind": "text",
										"text": " - optional ABI. If not provided, the ABI will be auto-resolved.\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\n {\n  createAccount: (factory, owner) => {\n    return factory.prepare(\"customCreateAccount\", [\n      owner,\n      getExtraData(),\n    ]);\n  },\n  getAccountAddress(factory, owner) {\n    return factory.call(\"getAccountAddress\", [owner]);\n  },\n  abi: [...]\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n#### accountInfo (optional)\nCustomize how the Smart Wallet Account contract is interacted with. If not provided, the default functions will be used.\n\nMust be a "
									},
									{
										"kind": "code",
										"text": "`object`"
									},
									{
										"kind": "text",
										"text": ". The object can contain the following properties:\n\n- "
									},
									{
										"kind": "code",
										"text": "`execute`"
									},
									{
										"kind": "text",
										"text": " - a function that returns the transaction object to execute an arbitrary transaction.\n- "
									},
									{
										"kind": "code",
										"text": "`getNonce`"
									},
									{
										"kind": "text",
										"text": " - a function that returns the current nonce of the account.\n- "
									},
									{
										"kind": "code",
										"text": "`abi`"
									},
									{
										"kind": "text",
										"text": " - optional ABI. If not provided, the ABI will be auto-resolved.\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\n{\n  execute(account, target, value, data) {\n    return account.prepare(\"customExecute\", [\n      target, value, data\n    ]);\n  },\n  getNonce(account) {\n    return account.call(\"getNonce\");\n  },\n  abi: [...]\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n#### bundlerUrl (optional)\nYour own bundler URL to send user operations to. Uses thirdweb's bundler by default.\n\nMust be a "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": ".\n\n#### paymasterUrl (optional)\nYour own paymaster URL to send user operations to for gasless transactions. Uses thirdweb's paymaster by default.\n\nMust be a "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": ".\n\n#### entryPointAddress\nThe entrypoint contract address. Uses v0.6 by default.\n\nMust be a "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 114,
								"name": "SmartWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15,
									"name": "connect",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
											"line": 283,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L283"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
													"line": 233,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L233"
												}
											],
											"signatures": [
												{
													"id": 17,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
															"line": 233,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L233"
														}
													],
													"parameters": [
														{
															"id": 18,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 19,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 20,
																			"name": "connectPersonalWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 234,
																					"character": 6,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L234"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 21,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																							"line": 234,
																							"character": 30,
																							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L234"
																						}
																					],
																					"signatures": [
																						{
																							"id": 22,
																							"name": "__type",
																							"variant": "signature",
																							"kind": 4096,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																									"line": 234,
																									"character": 30,
																									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L234"
																								}
																							],
																							"parameters": [
																								{
																									"id": 23,
																									"name": "wallet",
																									"variant": "param",
																									"kind": 32768,
																									"flags": {},
																									"type": {
																										"type": "reference",
																										"target": -1,
																										"name": "W",
																										"refersToTypeParameter": true
																									}
																								}
																							],
																							"type": {
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Promise"
																								},
																								"typeArguments": [
																									{
																										"type": "intrinsic",
																										"name": "void"
																									}
																								],
																								"name": "Promise",
																								"package": "typescript"
																							}
																						}
																					]
																				}
																			}
																		},
																		{
																			"id": 24,
																			"name": "connectionArgs",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 235,
																					"character": 6,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L235"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Omit"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../wallets/src/evm/connectors/smart-wallet/types.ts",
																							"qualifiedName": "SmartWalletConnectionArgs"
																						},
																						"name": "SmartWalletConnectionArgs",
																						"package": "@thirdweb-dev/wallets"
																					},
																					{
																						"type": "literal",
																						"value": "personalWallet"
																					}
																				],
																				"name": "Omit",
																				"package": "typescript"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				20,
																				24
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																			"line": 233,
																			"character": 18,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L233"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/wallets/smart-wallet.ts",
																	"qualifiedName": "SmartWallet"
																},
																"name": "SmartWallet",
																"package": "@thirdweb-dev/wallets"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 25,
									"name": "predictAddress",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
											"line": 284,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L284"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 26,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
													"line": 221,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L221"
												}
											],
											"signatures": [
												{
													"id": 27,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
															"line": 221,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L221"
														}
													],
													"parameters": [
														{
															"id": 28,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 29,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 31,
																			"name": "data",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 221,
																					"character": 50,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L221"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/src.ts/index.ts",
																					"qualifiedName": "BytesLike"
																				},
																				"name": "BytesLike",
																				"package": "@ethersproject/bytes"
																			}
																		},
																		{
																			"id": 30,
																			"name": "personalWalletAddress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 221,
																					"character": 19,
																					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L221"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				31,
																				30
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																			"line": 221,
																			"character": 17,
																			"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L221"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										15,
										25
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
									"line": 282,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L282"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 122,
			"name": "walletConnect",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
					"line": 83,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L83"
				}
			],
			"signatures": [
				{
					"id": 123,
					"name": "walletConnect",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [WalletConnect](https://walletconnect.com/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nwalletConnect({\n  projectId: \"your_project_id\",\n  qrModal: \"custom\", // or \"walletConnect\"\n  qrModalOptions: {\n    themeMode: \"dark\",\n  },\n  recommended: true,\n});\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
							"line": 83,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L83"
						}
					],
					"parameters": [
						{
							"id": 124,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional configuration options for the wallet\n\n### projectId (optional)\nWhen connecting Trust using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\n### qrModal (optional)\nSpecify wheher a custom QR Modal or the Official WalletConnect Modal should be used on desktop. The custom screen has an option to open the official WalletConnect Modal too.\n\nNote that the official WalletConnect Modal is always used on mobile devices.\n\nThe default is "
									},
									{
										"kind": "code",
										"text": "`\"custom\"`"
									},
									{
										"kind": "text",
										"text": " ( for desktop )\n\n### qrModalOptions (optional)\nThe [WalletConnect Modal options](https://docs.walletconnect.com/advanced/walletconnectmodal/options) to customize the official WalletConnect Modal.\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ["
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal UI"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 125,
								"name": "walletConnectConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
									"qualifiedName": "WalletConnect"
								},
								"name": "WalletConnect",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 134,
			"name": "zerionWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
					"line": 60,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L60"
				}
			],
			"signatures": [
				{
					"id": 135,
					"name": "zerionWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Zerion Wallet](https://zerion.io/) which allows integrating the wallet with React.\n\nIt returns a ["
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/WalletConfig) object which can be used to connect the wallet to via ["
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/react/v4/components/ConnectWallet) component or ["
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": "](https://portal.thirdweb.com/references/react/v4/useConnect) hook as mentioned in [Connecting Wallets](https://portal.thirdweb.com/react/v4/connecting-wallets) guide"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nzerionWallet({\n projectId: \"your_project_id\",\n recommended: true,\n})\n```"
									}
								]
							},
							{
								"tag": "@wallet",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
							"line": 60,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/d5d8d2c/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L60"
						}
					],
					"parameters": [
						{
							"id": 136,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional configuration options for the wallet\n\n### projectId (optional)\nWhen connecting MetaMask using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\n### recommended (optional)\nIf true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 137,
								"name": "ZerionkWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/zerion.ts",
									"qualifiedName": "ZerionWallet"
								},
								"name": "ZerionWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "References",
			"children": [
				1053
			]
		},
		{
			"title": "Enumerations",
			"children": [
				1007,
				960,
				951
			]
		},
		{
			"title": "Interfaces",
			"children": [
				798,
				934,
				1054,
				991,
				811,
				937,
				792,
				723
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				766,
				35,
				1060,
				172,
				42,
				663,
				595,
				151,
				158,
				791,
				715,
				49,
				536,
				58,
				64,
				977,
				70,
				76,
				555,
				704,
				686,
				144,
				919,
				1013,
				972,
				968,
				93,
				165,
				99,
				978,
				106,
				114,
				915,
				182,
				218,
				228,
				2,
				1056,
				118,
				632,
				982,
				137,
				125
			]
		},
		{
			"title": "Variables",
			"children": [
				1,
				8
			]
		},
		{
			"title": "Functions",
			"children": [
				1000,
				660,
				592,
				1003,
				931,
				1049,
				995,
				948,
				770,
				719,
				32,
				169,
				39,
				148,
				155,
				176,
				46,
				219,
				225,
				55,
				222,
				179,
				61,
				67,
				73,
				141,
				916,
				90,
				162,
				96,
				103,
				110,
				115,
				869,
				884,
				882,
				551,
				998,
				923,
				553,
				577,
				657,
				9,
				122,
				134
			]
		}
	],
	"packageName": "@thirdweb-dev/react",
	"readme": [
		{
			"kind": "text",
			"text": "<p align=\"center\">\n<br />\n<a href=\"https://thirdweb.com\"><img src=\"https://github.com/thirdweb-dev/js/blob/main/packages/sdk/logo.svg?raw=true\" width=\"200\" alt=\"\"/></a>\n<br />\n</p>\n<h1 align=\"center\">thirdweb React SDK</h1>\n<p align=\"center\">\n<a href=\"https://www.npmjs.com/package/@thirdweb-dev/react\"><img src=\"https://img.shields.io/npm/v/@thirdweb-dev/react?color=red&label=npm&logo=npm\" alt=\"npm version\"/></a>\n<a href=\"https://github.com/thirdweb-dev/js/actions/workflows/build-test-lint.yml\"><img alt=\"Build Status\" src=\"https://github.com/thirdweb-dev/js/actions/workflows/build-test-lint.yml/badge.svg\"/></a>\n<a href=\"https://discord.gg/thirdweb\"><img alt=\"Join our Discord!\" src=\"https://img.shields.io/discord/834227967404146718.svg?color=7289da&label=discord&logo=discord&style=flat\"/></a>\n\n</p>\n<p align=\"center\"><strong>Ultimate collection of React hooks for your web3 apps</strong></p>\n<br />\n\n<br />\n\n## Installation\n\nThe easiest way to get started with the React SDK is to use the CLI:\n\n"
		},
		{
			"kind": "code",
			"text": "```sh\nnpx thirdweb create --app\n```"
		},
		{
			"kind": "text",
			"text": "\n\nAlternatively, you can install the SDK into your existing project using npm or yarn:\n\n"
		},
		{
			"kind": "code",
			"text": "```sh\nnpm install @thirdweb-dev/react @thirdweb-dev/sdk ethers@5\n```"
		},
		{
			"kind": "text",
			"text": "\n\n"
		},
		{
			"kind": "code",
			"text": "```sh\nyarn add @thirdweb-dev/react @thirdweb-dev/sdk ethers@5\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n## Getting Started\n\nOur SDK uses a [Provider Pattern](https://flexiple.com/react/provider-pattern-with-react-context-api/); meaning any component within the "
		},
		{
			"kind": "code",
			"text": "`ThirdwebProvider`"
		},
		{
			"kind": "text",
			"text": " will have access to the SDK. If you use the CLI to initialize your project, this is already set up for you.\n\nLet's take a look at a typical setup:\n\n<br />\n\n### Configure the "
		},
		{
			"kind": "code",
			"text": "`ThirdwebProvider`"
		},
		{
			"kind": "text",
			"text": "\n\nSpecify the network your smart contracts are deployed to in the "
		},
		{
			"kind": "code",
			"text": "`desiredChainId`"
		},
		{
			"kind": "text",
			"text": " prop and wrap your application like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"App.jsx\"\nimport { ChainId, ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n  return (\n    <ThirdwebProvider desiredChainId={ChainId.Mainnet}>\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\nBelow are examples of where to set this up in your application:\n\n<p>\n  <a href=\"https://github.com/thirdweb-example/cra-javascript-starter/blob/main/src/index.js\">Create React App</a> •\n  <a href=\"https://github.com/thirdweb-example/next-javascript-starter/blob/main/pages/_app.js\">Next.js</a> •\n  <a href=\"https://github.com/thirdweb-example/vite-javascript-starter/blob/main/src/main.jsx\">Vite</a>\n</p>\n\n<br />\n\n### Connect to a User's Wallet\n\nNow the provider is set up, we can use all of the hooks and UI components available in the SDK, such as the [ConnectWallet](https://portal.thirdweb.com/ui-components/connectwalletbutton) component.\n\nOnce the user has connected their wallet, all the calls we make to interact with contracts using the SDK will be on behalf of the user.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"ConnectMetamaskButton.jsx\"\nimport { ConnectWallet, useAddress } from \"@thirdweb-dev/react\";\n\nexport const YourApp = () => {\n  const address = useAddress();\n  return (\n    <div>\n      <ConnectWallet />\n    </div>\n  );\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThe "
		},
		{
			"kind": "code",
			"text": "`ConnectWallet`"
		},
		{
			"kind": "text",
			"text": " component handles everything for us, including switching networks, accounts, displaying balances and more.\n\nWe can then get the connected address using the "
		},
		{
			"kind": "code",
			"text": "`useAddress`"
		},
		{
			"kind": "text",
			"text": " hook anywhere in the app.\n\n<br/>\n\n### Interact With Contracts\n\nConnect to your smart contract using the ["
		},
		{
			"kind": "code",
			"text": "`useContract`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/custom-contracts/getting-a-contract#connect-to-a-contract)\nhook like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport { useContract } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n\n  // Now you can use the contract in the rest of the component!\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nYou can then use ["
		},
		{
			"kind": "code",
			"text": "`useContractRead`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/custom-contracts/using-contracts) and ["
		},
		{
			"kind": "code",
			"text": "`useContractWrite`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/custom-contracts/using-contracts) to read data and write transactions to the contract.\n\nYou pass the "
		},
		{
			"kind": "code",
			"text": "`contract`"
		},
		{
			"kind": "text",
			"text": " object returned from "
		},
		{
			"kind": "code",
			"text": "`useContract`"
		},
		{
			"kind": "text",
			"text": " to these hooks as the first parameter and the name of the function (or view/mapping, etc.) on your smart contract as the second parameter. If your function requires parameters, you can pass them as additional arguments.\n\nFor example, we can read the "
		},
		{
			"kind": "code",
			"text": "`name`"
		},
		{
			"kind": "text",
			"text": " of our contract like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport {\n  useContract,\n  useContractRead,\n  useContractWrite,\n} from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: name, isLoading: loadingName } = useContractRead(\n    contract,\n    \"name\", // The name of the view/mapping/variable on your contract\n  );\n  const { mutate: setName, isLoading: settingName } = useContractWrite(\n    contract,\n    \"setName\", // The name of the function on your contract\n  );\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n### Using Extensions\n\nEach [extension](https://portal.thirdweb.com/extensions) you implement in your smart contract unlocks new functionality in the SDK.\n\nThese hooks make it easy to interact with your smart contracts by implementing the complex logic for you under the hood.\n\nFor example, if your smart contract implements [ERC721Supply](https://portal.thirdweb.com/solidity/extensions/erc721supply), you unlock the ability to [view all NFTs](https://portal.thirdweb.com/sdk/interacting-with-contracts/erc721supply#get-all-minted-nfts) on that contract using the SDK; which fetches all of your NFT metadata and the current owner of each NFT in parallel. In the React SDK, that is available using "
		},
		{
			"kind": "code",
			"text": "`useNFTs`"
		},
		{
			"kind": "text",
			"text": ":\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nimport { useContract, useNFTs } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nIf we want to mint an NFT and our contract implements [ERC721Mintable](https://portal.thirdweb.com/solidity/extensions/erc721mintable), we can use the ["
		},
		{
			"kind": "code",
			"text": "`useMintNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/erc721mintable) hook to mint an NFT from the connected wallet; handling all of the logic of uploading and pinning the metadata to IPFS for us behind the scenes.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nimport { useContract, useNFTs, useMintNFT } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n  const { mutate: mintNFT, isLoading: isMintingNFT } = useMintNFT(contract);\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n### UI Components\n\nThe SDK provides many UI components to help you build your application.\n\nFor example, we can render each of the NFTs using the ["
		},
		{
			"kind": "code",
			"text": "`NFT Media Renderer`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/ui-components/nft-renderer)\ncomponent, making use of the loading state from "
		},
		{
			"kind": "code",
			"text": "`useNFTs`"
		},
		{
			"kind": "text",
			"text": ":\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport { useContract, useNFTs, ThirdwebNftMedia } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n\n  return (\n    <div>\n      <h2>My NFTs</h2>\n      {isReadingNfts ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          {nfts.map((nft) => (\n            <ThirdwebNftMedia\n              key={nft.metadata.id}\n              metadata={nft.metadata}\n              height={200}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThe ["
		},
		{
			"kind": "code",
			"text": "`Web3Button`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/ui-components/web3button) component ensures the user has connected their wallet and is currently configured to the same network as your smart contract before calling the function. It also has access to the "
		},
		{
			"kind": "code",
			"text": "`contract`"
		},
		{
			"kind": "text",
			"text": " directly, allowing you to perform any action on your smart contract when the button is clicked.\n\nFor example, we can mint an NFT like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport {\n  useContract,\n  useNFTs,\n  ThirdwebNftMedia,\n  Web3Button,\n} from \"@thirdweb-dev/react\";\n\nconst contractAddress = \"<CONTRACT_ADDRESS>\";\nexport default function Home() {\n  const { contract } = useContract(contractAddress);\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n\n  return (\n    <div>\n      {/* ... Existing Display Logic here ... */}\n\n      <Web3Button\n        contractAddress={contractAddress}\n        action={(contract) =>\n          contract.erc721.mint({\n            name: \"Hello world!\",\n            image:\n              // You can use a file or URL here!\n              \"ipfs://QmZbovNXznTHpYn2oqgCFQYP4ZCpKDquenv5rFCX8irseo/0.png\",\n          })\n        }\n      >\n        Mint NFT\n      </Web3Button>\n    </div>\n  );\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n## Advanced Configuration\n\nThe "
		},
		{
			"kind": "code",
			"text": "`ThirdwebProvider`"
		},
		{
			"kind": "text",
			"text": " offers a number of configuration options to control the behavior of the React and Typescript SDK.\n\nThese are all the configuration options of the "
		},
		{
			"kind": "code",
			"text": "`<ThirdwebProvider />`"
		},
		{
			"kind": "text",
			"text": ".\nWe provide defaults for all of these, but you customize them to suit your needs.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"App.jsx\"\nimport { ChainId, IpfsStorage, ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst KitchenSinkExample = () => {\n  return (\n    <ThirdwebProvider\n      desiredChainId={ChainId.Mainnet}\n      chainRpc={{ [ChainId.Mainnet]: \"https://mainnet.infura.io/v3\" }}\n      dAppMeta={{\n        name: \"Example App\",\n        description: \"This is an example app\",\n        isDarkMode: false,\n        logoUrl: \"https://example.com/logo.png\",\n        url: \"https://example.com\",\n      }}\n      storageInterface={new IpfsStorage(\"https://your.ipfs.host.com\")}\n      supportedChains={[ChainId.Mainnet]}\n      walletConnectors={[\n        \"walletConnect\",\n        { name: \"injected\", options: { shimDisconnect: false } },\n        {\n          name: \"walletLink\",\n          options: {\n            appName: \"Example App\",\n          },\n        },\n        {\n          name: \"magic\",\n          options: {\n            apiKey: \"your-magic-api-key\",\n            rpcUrls: {\n              [ChainId.Mainnet]: \"https://mainnet.infura.io/v3\",\n            },\n          },\n        },\n      ]}\n      sdkOptions={{\n        gasSettings: { maxPriceInGwei: 500, speed: \"fast\" },\n        readonlySettings: {\n          chainId: ChainId.Mainnet,\n          rpcUrl: \"https://mainnet.infura.io/v3\",\n        },\n        gasless: {\n          openzeppelin: {\n            relayerUrl: \"your-relayer-url\",\n          },\n        },\n      }}\n    >\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Available hooks\n\n### Main hooks\n\n| Hook                                                                                 | Description                                                                |\n| ------------------------------------------------------------------------------------ | -------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useSDK`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usesdk)                           | Access the instance of the thirdweb SDK created by the ThirdwebProvider.   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContract`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontract)                 | Use this resolve a contract address to a smart contract instance.          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractWrite`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractwrite)       | Use this to get data from a contract read-function call.                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractRead`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractread)         | Use this to get a function to make a write call to your contract.          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractEvents`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractevents)     | Use this to get the contract metadata for a (built-in or custom) contract. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractMetadata`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractmetadata) | Use this to get the contract metadata for a (built-in or custom) contract. |\n\n### Wallet connection\n\n| Hook                                                                             | Description                                                 |\n| -------------------------------------------------------------------------------- | ----------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAddress`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useaddress)               | Hook for accessing the address of the connected wallet.     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMetamask`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemetamask)             | Hook for connecting to a Metamask wallet.                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useWalletConnect`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usewalletconnect)   | Hook for connecting to a mobile wallet with Wallet Connect. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCoinbaseWallet`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecoinbasewallet) | Hook for connecting to a Coinbase wallet.                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMagic`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemagic)                   | Hook for connecting to an email wallet using magic link.    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useGnosis`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usegnosis)                 | Hook for connecting to a Gnosis Safe.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useDisconnect`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usedisconnect)         | Hook for disconnecting the currently connected wallet.      |\n\n### Network connection\n\n| Hook                                                                               | Description                                                                                                                                  |\n| ---------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useChainId`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usechainid)                 | Hook for accessing the chain ID of the network the current wallet is connected to                                                            |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNetwork`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenetwork)                 | Hook for getting metadata about the network the current wallet is connected to and switching networks.                                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNetworkMismatch`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenetworkmismatch) | Hook for checking whether the connected wallet is on the correct network specified by the desiredChainId passed to the <ThirdwebProvider />. |\n\n### NFT\n\n| Hook                                                                                             | Description                                                                         |\n| ------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenft)                                       | Use this to get an individual NFT token of your NFTContract.                        |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenfts)                                     | Use this to get a list of NFT tokens of your NFTContract.                           |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTotalCirculatingSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetotalcirculatingsupply) | Use this to get a the total (minted) supply of your NFTContract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useOwnedNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useownednfts)                           | Use this to get a the owned NFTs for a specific Erc721OrErc1155 and wallet address. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNFTBalance`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenftbalance)                         | Use this to get a the total balance of a NFTContract and wallet address.            |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTotalCount`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetotalcount)                         | Use this to get the total count of NFT tokens of your NFTContract.                  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMintNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemintnft)                               | Use this to mint a new NFT on your Erc721OrErc1155.                                 |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMintNFTSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemintnftsupply)                   | Use this mint extra supply on your Erc1155.                                         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTransferNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetransfernft)                       | Use this to transfer tokens on your NFTContract.                                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAirdropNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useairdropnft)                         | Use this to airdrop tokens on your Erc1155.                                         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBurnNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useburnnft)                               | Use this to burn an NFT on your Erc721OrErc1155.                                    |\n\n### Token\n\n| Hook                                                                                     | Description                                                        |\n| ---------------------------------------------------------------------------------------- | ------------------------------------------------------------------ |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTokenSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetokensupply)               | Use this to get a the total supply of your contract.               |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTokenBalance`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetokenbalance)             | Use this to get the balance of your contract for a given address.  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTokenDecimals`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetokendecimals)           | Use this to get the decimals of your contract for a given address. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMintToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useminttoken)                   | Use this to mint new tokens on your contract.                      |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimtoken)                 | Use this to claim tokens from your contract.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTransferToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetransfertoken)           | Use this to transfer tokens on your contract.                      |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTransferBatchToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetransferbatchtoken) | Use this to transfer batch tokens on your contract.                |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBurnToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useburntoken)                   | Use this to burn tokens on your contract.                          |\n\n### Marketplace\n\n| Hook                                                                                         | Description                                                                               |\n| -------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselisting)                           | Use this to get a specific listing from the marketplace.                                  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useListings`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselistings)                         | Use this to get a list all listings from your marketplace contract.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useListingsCount`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselistingscount)               | Use this to get a count of all listings on your marketplace contract.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useActiveListings`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useactivelistings)             | Use this to get a list active listings from your marketplace contract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useWinningBid`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usewinningbid)                     | Use this to get a the winning bid for an auction listing from your marketplace contract.  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAuctionWinner`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useauctionwinner)               | Use this to get the winner of an auction listing from your marketplace contract.          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBidBuffer`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usebidbuffer)                       | Use this to get the buffer in basis points between offers from your marketplace contract. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCreateDirectListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecreatedirectlisting)   | Use this to create a new Direct Listing on your marketplace contract.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCreateAuctionListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecreateauctionlisting) | Use this to create a new Auction Listing on your marketplace contract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCancelListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecancellisting)               | Use this to cancel a listing on your marketplace contract.                                |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMakeBid`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemakebid)                           | Use this to place a bid on an auction listing from your marketplace contract.             |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBuyNow`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usebuynow)                             | Use this to buy out an auction listing from your marketplace contract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBuyDirectListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useBuyDirectListing)         | Use this to buy from a direct listing in your marketplace v3 contract.                    |\n\n### Permissions Controls\n\n| Hook                                                                                   | Description                                                                     |\n| -------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAllRoleMembers`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useallrolemembers)       | Use this to get the roles of all members.                                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useRoleMembers`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.userolemembers)             | Use this to get the members of a role.                                          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useIsAddressRole`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useisaddressrole)         | Use this to check if a WalletAddress is a member of a role.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useSetAllRoleMembers`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usesetallrolemembers) | Use this to OVERWRITE the list of addresses that are members of specific roles. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useGrantRole`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usegrantrole)                 | Use this to grant a WalletAddress a specific role.                              |\n| ["
		},
		{
			"kind": "code",
			"text": "`useRevokeRole`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.userevokerole)               | Use this to revoke a WalletAddress a specific role.                             |\n\n### Drop\n\n| Hook                                                                                           | Description                                                                          |\n| ---------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ |\n| ["
		},
		{
			"kind": "code",
			"text": "`useUnclaimedNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useunclaimednfts)                 | Use this to get a list of unclaimed NFT tokens of your ERC721 Drop contract.         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimedNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimednfts)                     | Use this to get a list of claimed (minted) NFT tokens of your ERC721 Drop contract.. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useUnclaimedNFTSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useunclaimednftsupply)       | Use this to get the total unclaimed NFT supply of your ERC721 Drop contract.         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimedNFTSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimednftsupply)           | Use this to get the total claimed (minted) NFT supply of your ERC721 Drop contract.  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBatchesToReveal`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usebatchestoreveal)             | Use this to get a list of batches that are ready to be revealed.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimnft)                           | Use this to claim a NFT on your DropContract                                         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useLazyMint`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselazymint)                           | Use this to lazy mint a batch of NFTs on your DropContract.                          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useDelayedRevealLazyMint`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usedelayedreveallazymint) | Use this to lazy mint a batch of delayed reveal NFTs on your DropContract.           |\n| ["
		},
		{
			"kind": "code",
			"text": "`useRevealLazyMint`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usereveallazymint)               | Use this to reveal a batch of delayed reveal NFTs on your RevealableContract.        |\n\n### Claim Conditions\n\n| Hook                                                                                                   | Description                                                                                              |\n| ------------------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useActiveClaimCondition`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useactiveclaimcondition)           | Use this to get the active claim condition for ERC20, ERC721 or ERC1155 based contracts.                 |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimConditions`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimconditions)                     | Use this to get all claim conditions for ERC20, ERC721 or ERC1155 based contracts.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimIneligibilityReasons`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimineligibilityreasons) | Use this to check for reasons that prevent claiming for either ERC20, ERC721 or ERC1155 based contracts. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useSetClaimConditions`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usesetclaimconditions)               | Use this to set claim conditions on your DropContract.                                                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useResetClaimConditions`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useresetclaimconditions)           | Use this to reset claim conditions on your DropContract.                                                 |"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "defaultTokens"
		},
		"2": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "TokenInfo"
		},
		"3": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "__type"
		},
		"4": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "__type.name"
		},
		"5": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "__type.symbol"
		},
		"6": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "__type.address"
		},
		"7": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "__type.icon"
		},
		"8": {
			"sourceFileName": "src/wallet/wallets/defaultWallets.ts",
			"qualifiedName": "defaultWallets"
		},
		"9": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "useSmartWallet"
		},
		"10": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "useSmartWallet"
		},
		"11": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "W"
		},
		"12": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "personalWallet"
		},
		"13": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "options"
		},
		"14": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__object"
		},
		"15": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__object.connect"
		},
		"16": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"17": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"18": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "args"
		},
		"19": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"20": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.connectPersonalWallet"
		},
		"21": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"22": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"23": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "wallet"
		},
		"24": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.connectionArgs"
		},
		"25": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__object.predictAddress"
		},
		"26": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"27": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"28": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "args"
		},
		"29": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"30": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.personalWalletAddress"
		},
		"31": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.data"
		},
		"32": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "bloctoWallet"
		},
		"33": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "bloctoWallet"
		},
		"34": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "options"
		},
		"35": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "BloctoWalletConfigOptions"
		},
		"36": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "__type"
		},
		"37": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "__type.appId"
		},
		"38": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"39": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "coinbaseWallet"
		},
		"40": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "coinbaseWallet"
		},
		"41": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "options"
		},
		"42": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "CoinbaseWalletConfigOptions"
		},
		"43": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "__type"
		},
		"44": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "__type.qrmodal"
		},
		"45": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"46": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
			"qualifiedName": "embeddedWallet"
		},
		"47": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
			"qualifiedName": "embeddedWallet"
		},
		"48": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
			"qualifiedName": "options"
		},
		"49": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
			"qualifiedName": "EmbeddedWalletConfigOptions"
		},
		"50": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
			"qualifiedName": "__type"
		},
		"51": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
			"qualifiedName": "__type.recommended"
		},
		"52": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
			"qualifiedName": "__type.auth"
		},
		"53": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
			"qualifiedName": "__type"
		},
		"54": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
			"qualifiedName": "__type.options"
		},
		"55": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "frameWallet"
		},
		"56": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "frameWallet"
		},
		"57": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "config"
		},
		"58": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "FrameWalletConfigOptions"
		},
		"59": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "__type"
		},
		"60": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"61": {
			"sourceFileName": "src/wallet/wallets/localWallet/localWallet.tsx",
			"qualifiedName": "localWallet"
		},
		"62": {
			"sourceFileName": "src/wallet/wallets/localWallet/localWallet.tsx",
			"qualifiedName": "localWallet"
		},
		"63": {
			"sourceFileName": "src/wallet/wallets/localWallet/localWallet.tsx",
			"qualifiedName": "config"
		},
		"64": {
			"sourceFileName": "src/wallet/wallets/localWallet/types.ts",
			"qualifiedName": "LocalWalletConfigOptions"
		},
		"65": {
			"sourceFileName": "src/wallet/wallets/localWallet/types.ts",
			"qualifiedName": "__type"
		},
		"66": {
			"sourceFileName": "src/wallet/wallets/localWallet/types.ts",
			"qualifiedName": "__type.persist"
		},
		"67": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "magicLink"
		},
		"68": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "magicLink"
		},
		"69": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "config"
		},
		"70": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "MagicWalletConfigOptions"
		},
		"71": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "__type"
		},
		"72": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "__type.recommended"
		},
		"73": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "metamaskWallet"
		},
		"74": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "metamaskWallet"
		},
		"75": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "options"
		},
		"76": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "MetamaskWalletConfigOptions"
		},
		"77": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "__type"
		},
		"78": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"79": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"80": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "__type.connectionMethod"
		},
		"90": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "phantomWallet"
		},
		"91": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "phantomWallet"
		},
		"92": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "options"
		},
		"93": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "PhantomWalletConfigOptions"
		},
		"94": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "__type"
		},
		"95": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"96": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "rainbowWallet"
		},
		"97": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "rainbowWallet"
		},
		"98": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "options"
		},
		"99": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "RainbowWalletConfigOptions"
		},
		"100": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "__type"
		},
		"101": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"102": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"103": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "safeWallet"
		},
		"104": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "safeWallet"
		},
		"105": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "config"
		},
		"106": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "SafeWalletConfigOptions"
		},
		"107": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "__type"
		},
		"108": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "__type.personalWallets"
		},
		"109": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"110": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "smartWallet"
		},
		"111": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "smartWallet"
		},
		"112": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "walletConfig"
		},
		"113": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "config"
		},
		"114": {
			"sourceFileName": "src/wallet/wallets/smartWallet/types.ts",
			"qualifiedName": "SmartWalletConfigOptions"
		},
		"115": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "trustWallet"
		},
		"116": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "trustWallet"
		},
		"117": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "options"
		},
		"118": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "TrustWalletConfigOptions"
		},
		"119": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "__type"
		},
		"120": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"121": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"122": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "walletConnect"
		},
		"123": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "walletConnect"
		},
		"124": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "config"
		},
		"125": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "walletConnectConfigOptions"
		},
		"126": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "__type"
		},
		"127": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "__type.projectId"
		},
		"128": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "__type.qrModalOptions"
		},
		"129": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "__type.recommended"
		},
		"130": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "__type.qrModal"
		},
		"134": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "zerionWallet"
		},
		"135": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "zerionWallet"
		},
		"136": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "options"
		},
		"137": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "ZerionkWalletConfigOptions"
		},
		"138": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "__type"
		},
		"139": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"140": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"141": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "okxWallet"
		},
		"142": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "okxWallet"
		},
		"143": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "options"
		},
		"144": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "OKXWalletConfigOptions"
		},
		"145": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "__type"
		},
		"146": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"147": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"148": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "coreWallet"
		},
		"149": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "coreWallet"
		},
		"150": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "options"
		},
		"151": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "CoreWalletConfigOptions"
		},
		"152": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "__type"
		},
		"153": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"154": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"155": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "cryptoDefiWallet"
		},
		"156": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "cryptoDefiWallet"
		},
		"157": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "options"
		},
		"158": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "CryptoDefiWalletConfigOptions"
		},
		"159": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "__type"
		},
		"160": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"161": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"162": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "rabbyWallet"
		},
		"163": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "rabbyWallet"
		},
		"164": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "options"
		},
		"165": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "RabbyWalletConfigOptions"
		},
		"166": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "__type"
		},
		"167": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"168": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"169": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "coin98Wallet"
		},
		"170": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "coin98Wallet"
		},
		"171": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "options"
		},
		"172": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "Coin98WalletConfigOptions"
		},
		"173": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "__type"
		},
		"174": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"175": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"176": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "darkTheme"
		},
		"177": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "darkTheme"
		},
		"178": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "overrides"
		},
		"179": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "lightTheme"
		},
		"180": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "lightTheme"
		},
		"181": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "overrides"
		},
		"182": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "Theme"
		},
		"183": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type"
		},
		"184": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.type"
		},
		"185": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.colors"
		},
		"186": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type"
		},
		"187": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.primaryText"
		},
		"188": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryText"
		},
		"189": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.accentText"
		},
		"190": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.danger"
		},
		"191": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.success"
		},
		"192": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.modalOverlayBg"
		},
		"193": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.accentButtonBg"
		},
		"194": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.accentButtonText"
		},
		"195": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.primaryButtonBg"
		},
		"196": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.primaryButtonText"
		},
		"197": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryButtonBg"
		},
		"198": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryButtonText"
		},
		"199": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryButtonHoverBg"
		},
		"200": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.modalBg"
		},
		"201": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.dropdownBg"
		},
		"202": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.tooltipBg"
		},
		"203": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.tooltipText"
		},
		"204": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.inputAutofillBg"
		},
		"205": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.scrollbarBg"
		},
		"206": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.walletSelectorButtonHoverBg"
		},
		"207": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.separatorLine"
		},
		"208": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryIconColor"
		},
		"209": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryIconHoverBg"
		},
		"210": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryIconHoverColor"
		},
		"211": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.borderColor"
		},
		"212": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.skeletonBg"
		},
		"213": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.selectedTextColor"
		},
		"214": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.selectedTextBg"
		},
		"215": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.connectedButtonBg"
		},
		"216": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.connectedButtonBgHover"
		},
		"217": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.fontFamily"
		},
		"218": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "ThemeOverrides"
		},
		"219": {
			"sourceFileName": "src/evm/locales/en.ts",
			"qualifiedName": "en"
		},
		"220": {
			"sourceFileName": "src/evm/locales/en.ts",
			"qualifiedName": "en"
		},
		"221": {
			"sourceFileName": "src/evm/locales/en.ts",
			"qualifiedName": "overrides"
		},
		"222": {
			"sourceFileName": "src/evm/locales/ja.ts",
			"qualifiedName": "ja"
		},
		"223": {
			"sourceFileName": "src/evm/locales/ja.ts",
			"qualifiedName": "ja"
		},
		"224": {
			"sourceFileName": "src/evm/locales/ja.ts",
			"qualifiedName": "overrides"
		},
		"225": {
			"sourceFileName": "src/evm/locales/es.ts",
			"qualifiedName": "es"
		},
		"226": {
			"sourceFileName": "src/evm/locales/es.ts",
			"qualifiedName": "es"
		},
		"227": {
			"sourceFileName": "src/evm/locales/es.ts",
			"qualifiedName": "overrides"
		},
		"228": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "ThirdwebLocale"
		},
		"229": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"230": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectWallet"
		},
		"231": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"232": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.agreement"
		},
		"233": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"234": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.and"
		},
		"235": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.prefix"
		},
		"236": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.privacyPolicy"
		},
		"237": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.termsOfService"
		},
		"238": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.goBackButton"
		},
		"239": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.backupWallet"
		},
		"240": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.confirmInWallet"
		},
		"241": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectAWallet"
		},
		"242": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectedToSmartWallet"
		},
		"243": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connecting"
		},
		"244": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.continueAsGuest"
		},
		"245": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.copyAddress"
		},
		"246": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.currentNetwork"
		},
		"247": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.defaultButtonTitle"
		},
		"248": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.defaultModalTitle"
		},
		"249": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.disconnectWallet"
		},
		"250": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.download"
		},
		"251": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"252": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.android"
		},
		"253": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.chrome"
		},
		"254": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.iOS"
		},
		"255": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStarted"
		},
		"256": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.guest"
		},
		"257": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.guestWalletWarning"
		},
		"258": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.installed"
		},
		"259": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.networkSelector"
		},
		"260": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"261": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.addCustomNetwork"
		},
		"262": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.allNetworks"
		},
		"263": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.categoryLabel"
		},
		"264": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"265": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.others"
		},
		"266": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.popular"
		},
		"267": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.recentlyUsed"
		},
		"268": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSwitch"
		},
		"269": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inputPlaceholder"
		},
		"270": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.loading"
		},
		"271": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.mainnets"
		},
		"272": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.testnets"
		},
		"273": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"274": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.newToWallets"
		},
		"275": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.or"
		},
		"276": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.personalWallet"
		},
		"277": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.receive"
		},
		"278": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.receiveFundsScreen"
		},
		"279": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"280": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"281": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"282": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.recommended"
		},
		"283": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.requestTestnetFunds"
		},
		"284": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.send"
		},
		"285": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sendFundsScreen"
		},
		"286": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"287": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.amount"
		},
		"288": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.insufficientFunds"
		},
		"289": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidAddress"
		},
		"290": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.noTokensFound"
		},
		"291": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.searchToken"
		},
		"292": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.selectTokenTitle"
		},
		"293": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sendTo"
		},
		"294": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sending"
		},
		"295": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitButton"
		},
		"296": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.successMessage"
		},
		"297": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"298": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.token"
		},
		"299": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.transactionFailed"
		},
		"300": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.transactionRejected"
		},
		"301": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signIn"
		},
		"302": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signatureScreen"
		},
		"303": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"304": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instructionScreen"
		},
		"305": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"306": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"307": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInButton"
		},
		"308": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"309": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.disconnectWallet"
		},
		"310": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signingScreen"
		},
		"311": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"312": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.approveTransactionInSafe"
		},
		"313": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSignIn"
		},
		"314": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inProgress"
		},
		"315": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.prompt"
		},
		"316": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.promptForSafe"
		},
		"317": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"318": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.tryAgain"
		},
		"319": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.smartWallet"
		},
		"320": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchAccount"
		},
		"321": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchNetwork"
		},
		"322": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchTo"
		},
		"323": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchingNetwork"
		},
		"324": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.transactionHistory"
		},
		"325": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.welcomeScreen"
		},
		"326": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"327": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.defaultSubtitle"
		},
		"328": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.defaultTitle"
		},
		"329": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.wallets"
		},
		"330": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"331": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.coin98Wallet"
		},
		"332": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"333": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectionScreen"
		},
		"334": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"335": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"336": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inProgress"
		},
		"337": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"338": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"339": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedLink"
		},
		"340": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedScreen"
		},
		"341": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"342": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"343": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.scanScreen"
		},
		"344": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"345": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"346": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.coinbaseWallet"
		},
		"347": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.coreWallet"
		},
		"348": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.cryptoDefiWallet"
		},
		"349": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.embeddedWallet"
		},
		"350": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"351": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.createPassword"
		},
		"352": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"353": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.confirmation"
		},
		"354": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSetPassword"
		},
		"355": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inputPlaceholder"
		},
		"356": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"357": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.saveInstruction"
		},
		"358": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitButton"
		},
		"359": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"360": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailLoginScreen"
		},
		"361": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"362": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterCodeSendTo"
		},
		"363": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterRecoveryCode"
		},
		"364": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSendCode"
		},
		"365": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidCode"
		},
		"366": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidCodeOrRecoveryCode"
		},
		"367": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.newDeviceDetected"
		},
		"368": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.resendCode"
		},
		"369": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sendingCode"
		},
		"370": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"371": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.verify"
		},
		"372": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailPlaceholder"
		},
		"373": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailRequired"
		},
		"374": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterPassword"
		},
		"375": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"376": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inputPlaceholder"
		},
		"377": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"378": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitButton"
		},
		"379": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"380": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.wrongPassword"
		},
		"381": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidEmail"
		},
		"382": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signIn"
		},
		"383": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInWithApple"
		},
		"384": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInWithFacebook"
		},
		"385": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInWithGoogle"
		},
		"386": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.socialLoginScreen"
		},
		"387": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"388": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"389": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"390": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"391": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"392": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitEmail"
		},
		"393": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.frameWallet"
		},
		"394": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"395": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectionFailedScreen"
		},
		"396": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"397": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description"
		},
		"398": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.downloadFrame"
		},
		"399": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.supportLink"
		},
		"400": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"401": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectionScreen"
		},
		"402": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"403": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"404": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inProgress"
		},
		"405": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"406": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"407": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedLink"
		},
		"408": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedScreen"
		},
		"409": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"410": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"411": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.scanScreen"
		},
		"412": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"413": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"414": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.localWallet"
		},
		"415": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"416": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.confirmPasswordLabel"
		},
		"417": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.createScreen"
		},
		"418": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"419": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connecting"
		},
		"420": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.createNewWallet"
		},
		"421": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.importWallet"
		},
		"422": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"423": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterYourPassword"
		},
		"424": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.exportScreen"
		},
		"425": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"426": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description1"
		},
		"427": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description2"
		},
		"428": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.download"
		},
		"429": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"430": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.walletAddress"
		},
		"431": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.importScreen"
		},
		"432": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"433": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description1"
		},
		"434": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description2"
		},
		"435": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.import"
		},
		"436": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"437": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.uploadJSON"
		},
		"438": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.uploadedSuccessfully"
		},
		"439": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.passwordLabel"
		},
		"440": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.reconnectScreen"
		},
		"441": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"442": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.continue"
		},
		"443": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.createNewWallet"
		},
		"444": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.savedWallet"
		},
		"445": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"446": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.warningScreen"
		},
		"447": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"448": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.backupWallet"
		},
		"449": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"450": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.warning"
		},
		"451": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.magicLink"
		},
		"452": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"453": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.countryCodeMissing"
		},
		"454": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailOrPhoneRequired"
		},
		"455": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailPlaceholder"
		},
		"456": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailRequired"
		},
		"457": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidEmail"
		},
		"458": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidEmailOrPhone"
		},
		"459": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidPhone"
		},
		"460": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.loginWith"
		},
		"461": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.loginWithEmailOrPhone"
		},
		"462": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.loginWithPhone"
		},
		"463": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.phoneRequired"
		},
		"464": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signIn"
		},
		"465": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitEmail"
		},
		"466": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.metamaskWallet"
		},
		"467": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.okxWallet"
		},
		"468": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.oneKeyWallet"
		},
		"469": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.paperWallet"
		},
		"470": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"471": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailLoginScreen"
		},
		"472": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"473": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterCodeSendTo"
		},
		"474": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterRecoveryCode"
		},
		"475": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSendCode"
		},
		"476": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidCode"
		},
		"477": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidCodeOrRecoveryCode"
		},
		"478": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.newDeviceDetected"
		},
		"479": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.resendCode"
		},
		"480": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sendingCode"
		},
		"481": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"482": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.verify"
		},
		"483": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailPlaceholder"
		},
		"484": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailRequired"
		},
		"485": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.googleLoginScreen"
		},
		"486": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"487": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"488": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"489": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"490": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"491": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidEmail"
		},
		"492": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signIn"
		},
		"493": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInWithGoogle"
		},
		"494": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitEmail"
		},
		"495": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.phantomWallet"
		},
		"496": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.rabbyWallet"
		},
		"497": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.rainbowWallet"
		},
		"498": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.safeWallet"
		},
		"499": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"500": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.accountDetailsScreen"
		},
		"501": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"502": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectToSafe"
		},
		"503": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connecting"
		},
		"504": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.dashboardLink"
		},
		"505": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToConnect"
		},
		"506": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSwitch"
		},
		"507": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.findSafeAddressIn"
		},
		"508": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidChainConfig"
		},
		"509": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.mainnets"
		},
		"510": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.network"
		},
		"511": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.safeAddress"
		},
		"512": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.selectNetworkPlaceholder"
		},
		"513": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchNetwork"
		},
		"514": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchingNetwork"
		},
		"515": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.testnets"
		},
		"516": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"517": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectWalletScreen"
		},
		"518": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"519": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.learnMoreLink"
		},
		"520": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.subtitle"
		},
		"521": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"522": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.smartWallet"
		},
		"523": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"524": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connecting"
		},
		"525": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToConnect"
		},
		"526": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.wrongNetworkScreen"
		},
		"527": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"528": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSwitch"
		},
		"529": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.subtitle"
		},
		"530": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"531": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.trustWallet"
		},
		"532": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.walletConnect"
		},
		"533": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"534": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.scanInstruction"
		},
		"535": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.zerionWallet"
		},
		"536": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "ExtensionAndQRScreensLocale"
		},
		"537": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"538": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectionScreen"
		},
		"539": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"540": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"541": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inProgress"
		},
		"542": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"543": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"544": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedLink"
		},
		"545": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedScreen"
		},
		"546": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"547": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"548": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.scanScreen"
		},
		"549": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"550": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"551": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useIsWalletModalOpen"
		},
		"552": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useIsWalletModalOpen"
		},
		"553": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useSetIsWalletModalOpen"
		},
		"554": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useSetIsWalletModalOpen"
		},
		"555": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "ModalConfigOptions"
		},
		"556": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type"
		},
		"557": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type.title"
		},
		"558": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type.theme"
		},
		"559": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type.modalSize"
		},
		"560": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type.termsOfServiceUrl"
		},
		"561": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type.privacyPolicyUrl"
		},
		"562": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type.welcomeScreen"
		},
		"563": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type.titleIconUrl"
		},
		"564": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type.auth"
		},
		"565": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type"
		},
		"566": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type.loginOptional"
		},
		"567": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type.onLogin"
		},
		"568": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type"
		},
		"569": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type"
		},
		"570": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "token"
		},
		"571": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type.onLogout"
		},
		"572": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type"
		},
		"573": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type"
		},
		"574": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type.onConnect"
		},
		"575": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type"
		},
		"576": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__type"
		},
		"577": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useSetWalletModalConfig"
		},
		"578": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useSetWalletModalConfig"
		},
		"579": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__function"
		},
		"580": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "__function"
		},
		"581": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "value"
		},
		"592": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "ConnectWallet"
		},
		"593": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "ConnectWallet"
		},
		"594": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "props"
		},
		"595": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "ConnectWalletProps"
		},
		"596": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"597": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.className"
		},
		"598": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.theme"
		},
		"599": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.btnTitle"
		},
		"600": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.switchNetworkBtnTitle"
		},
		"601": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.modalTitle"
		},
		"602": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.modalTitleIconUrl"
		},
		"603": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.detailsBtn"
		},
		"604": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"605": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"606": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.dropdownPosition"
		},
		"607": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.auth"
		},
		"608": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"609": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.loginOptional"
		},
		"610": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.onLogin"
		},
		"611": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"612": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"613": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "token"
		},
		"614": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.onLogout"
		},
		"615": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"616": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"617": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.style"
		},
		"618": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.networkSelector"
		},
		"619": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.hideTestnetFaucet"
		},
		"620": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.switchToActiveChain"
		},
		"621": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.modalSize"
		},
		"622": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.termsOfServiceUrl"
		},
		"623": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.privacyPolicyUrl"
		},
		"624": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.welcomeScreen"
		},
		"625": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.supportedTokens"
		},
		"626": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.displayBalanceToken"
		},
		"627": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.hideSwitchToPersonalWallet"
		},
		"628": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.hideDisconnect"
		},
		"629": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.onConnect"
		},
		"630": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"631": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"632": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "WelcomeScreen"
		},
		"633": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type"
		},
		"634": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.title"
		},
		"635": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.subtitle"
		},
		"636": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.img"
		},
		"637": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type"
		},
		"638": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.src"
		},
		"639": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.width"
		},
		"640": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.height"
		},
		"641": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type"
		},
		"642": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type"
		},
		"657": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "useShowConnectEmbed"
		},
		"658": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "useShowConnectEmbed"
		},
		"659": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "loginOptional"
		},
		"660": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "ConnectEmbed"
		},
		"661": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "ConnectEmbed"
		},
		"662": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "props"
		},
		"663": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "ConnectEmbedProps"
		},
		"664": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type"
		},
		"665": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type.className"
		},
		"666": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type.theme"
		},
		"667": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type.style"
		},
		"668": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type.termsOfServiceUrl"
		},
		"669": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type.privacyPolicyUrl"
		},
		"670": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type.auth"
		},
		"671": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type"
		},
		"672": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type.loginOptional"
		},
		"673": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type.onLogin"
		},
		"674": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type"
		},
		"675": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type"
		},
		"676": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "token"
		},
		"677": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type.onLogout"
		},
		"678": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type"
		},
		"679": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type"
		},
		"680": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type.onConnect"
		},
		"681": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type"
		},
		"682": {
			"sourceFileName": "src/wallet/ConnectWallet/Modal/ConnectEmbed.tsx",
			"qualifiedName": "__type"
		},
		"686": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "NetworkSelectorProps"
		},
		"687": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"688": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.theme"
		},
		"689": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.onClose"
		},
		"690": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"691": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"692": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.open"
		},
		"693": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.chains"
		},
		"694": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.popularChains"
		},
		"695": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.recentChains"
		},
		"696": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.renderChain"
		},
		"697": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.onSwitch"
		},
		"698": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"699": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"700": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "chain"
		},
		"701": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.onCustomClick"
		},
		"702": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"703": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"704": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "NetworkSelectorChainProps"
		},
		"705": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"706": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.chain"
		},
		"707": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.switchChain"
		},
		"708": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"709": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"710": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.switching"
		},
		"711": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.switchFailed"
		},
		"712": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.close"
		},
		"713": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"714": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"715": {
			"sourceFileName": "src/wallet/ConnectWallet/Details.tsx",
			"qualifiedName": "DropDownPosition"
		},
		"716": {
			"sourceFileName": "src/wallet/ConnectWallet/Details.tsx",
			"qualifiedName": "__type"
		},
		"717": {
			"sourceFileName": "src/wallet/ConnectWallet/Details.tsx",
			"qualifiedName": "__type.side"
		},
		"718": {
			"sourceFileName": "src/wallet/ConnectWallet/Details.tsx",
			"qualifiedName": "__type.align"
		},
		"719": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3Button"
		},
		"720": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3Button"
		},
		"721": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "TAction"
		},
		"722": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "props"
		},
		"723": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps"
		},
		"724": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.className"
		},
		"725": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.contractAddress"
		},
		"726": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.contractAbi"
		},
		"727": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.onSuccess"
		},
		"728": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"729": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"730": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "result"
		},
		"731": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.onError"
		},
		"732": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"733": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"734": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "error"
		},
		"735": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.onSubmit"
		},
		"736": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"737": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"738": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.isDisabled"
		},
		"739": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.action"
		},
		"740": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.type"
		},
		"741": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.theme"
		},
		"742": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.style"
		},
		"743": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.connectWallet"
		},
		"744": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"745": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.className"
		},
		"746": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.btnTitle"
		},
		"747": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.modalTitle"
		},
		"748": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.modalTitleIconUrl"
		},
		"749": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.auth"
		},
		"750": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"751": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.loginOptional"
		},
		"752": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.onLogin"
		},
		"753": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"754": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"755": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "token"
		},
		"756": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.onLogout"
		},
		"757": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"758": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"759": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.style"
		},
		"760": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.modalSize"
		},
		"761": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.termsOfServiceUrl"
		},
		"762": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.privacyPolicyUrl"
		},
		"763": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.welcomeScreen"
		},
		"764": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.switchNetworkBtnTitle"
		},
		"765": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.TActionFn"
		},
		"766": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "ActionFn"
		},
		"767": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"768": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"769": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "contract"
		},
		"770": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProvider"
		},
		"771": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProvider"
		},
		"772": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "TChains"
		},
		"773": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"774": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"775": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"776": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"777": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"778": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"779": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"780": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"781": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"782": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"783": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"784": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"785": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"786": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"787": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"788": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"789": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"790": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "props"
		},
		"791": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "DefaultChains"
		},
		"792": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps"
		},
		"793": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.supportedWallets"
		},
		"794": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.theme"
		},
		"795": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.signer"
		},
		"796": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.locale"
		},
		"797": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.TChains"
		},
		"798": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps"
		},
		"799": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.src"
		},
		"800": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.alt"
		},
		"801": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.poster"
		},
		"802": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.gatewayUrl"
		},
		"803": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.width"
		},
		"804": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.height"
		},
		"805": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.className"
		},
		"806": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.style"
		},
		"807": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.requireInteraction"
		},
		"808": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.controls"
		},
		"809": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.children"
		},
		"810": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.mimeType"
		},
		"811": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps"
		},
		"812": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.className"
		},
		"813": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.style"
		},
		"814": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.width"
		},
		"815": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.height"
		},
		"816": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.requireInteraction"
		},
		"817": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.controls"
		},
		"818": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.children"
		},
		"819": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.mimeType"
		},
		"869": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWallet"
		},
		"870": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWallet"
		},
		"871": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__object"
		},
		"872": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__object.connect"
		},
		"873": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"874": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"875": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "authParams"
		},
		"876": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__object.sendVerificationEmail"
		},
		"877": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"878": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"879": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__0"
		},
		"880": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__type"
		},
		"881": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__type.email"
		},
		"882": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWalletUserEmail"
		},
		"883": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWalletUserEmail"
		},
		"884": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "useEmbeddedWalletSendVerificationEmail"
		},
		"885": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "useEmbeddedWalletSendVerificationEmail"
		},
		"886": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "__function"
		},
		"887": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "__function"
		},
		"888": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "email"
		},
		"915": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "SupportedTokens"
		},
		"916": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "oneKeyWallet"
		},
		"917": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "oneKeyWallet"
		},
		"918": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "options"
		},
		"919": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "OneKeyWalletConfigOptions"
		},
		"920": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "__type"
		},
		"921": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"922": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"923": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "useResolvedMediaType"
		},
		"924": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "useResolvedMediaType"
		},
		"925": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "uri"
		},
		"926": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "mimeType"
		},
		"927": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "gatewayUrl"
		},
		"928": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "__object"
		},
		"929": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "__object.url"
		},
		"930": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "__object.mimeType"
		},
		"931": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaRenderer"
		},
		"932": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MediaRenderer"
		},
		"933": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"934": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaType"
		},
		"935": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaType.url"
		},
		"936": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaType.mimeType"
		},
		"937": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps"
		},
		"938": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps.metadata"
		},
		"939": {
			"sourceFileName": "../sdk/src/core/schema/nft.ts",
			"qualifiedName": "__type"
		},
		"940": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps.width"
		},
		"941": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps.height"
		},
		"942": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.className"
		},
		"943": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.style"
		},
		"944": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.requireInteraction"
		},
		"945": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.controls"
		},
		"946": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.children"
		},
		"947": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.mimeType"
		},
		"948": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMedia"
		},
		"949": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ThirdwebNftMedia"
		},
		"950": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"951": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PaymentsSDKErrorCode"
		},
		"952": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PaymentsSDKErrorCode.UserAbandonedCheckout"
		},
		"953": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PaymentsSDKErrorCode.UserLoginFailed"
		},
		"954": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PaymentsSDKErrorCode.InvalidProps"
		},
		"955": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PaymentsSDKErrorCode.InvalidCard"
		},
		"956": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PaymentsSDKErrorCode.EmailNotVerified"
		},
		"957": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PaymentsSDKErrorCode.NotEnoughSupply"
		},
		"958": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PaymentsSDKErrorCode.AddressNotAllowed"
		},
		"959": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PaymentsSDKErrorCode.NoActiveClaimPhase"
		},
		"960": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PayWithCryptoErrorCode"
		},
		"961": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PayWithCryptoErrorCode.ErrorConnectingToWallet"
		},
		"962": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PayWithCryptoErrorCode.ErrorSendingTransaction"
		},
		"963": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PayWithCryptoErrorCode.InsufficientBalance"
		},
		"964": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PayWithCryptoErrorCode.TransactionCancelled"
		},
		"965": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PayWithCryptoErrorCode.WrongChain"
		},
		"966": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PayWithCryptoErrorCode.ChainSwitchUnderway"
		},
		"967": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PayWithCryptoErrorCode.PendingSignature"
		},
		"968": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "PaymentsSDKError"
		},
		"969": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "__type"
		},
		"970": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "__type.code"
		},
		"971": {
			"sourceFileName": "../payments/src/interfaces/PaymentsSdkError.ts",
			"qualifiedName": "__type.error"
		},
		"972": {
			"sourceFileName": "../payments/src/interfaces/PaperUser.ts",
			"qualifiedName": "PaperUser"
		},
		"973": {
			"sourceFileName": "../payments/src/interfaces/PaperUser.ts",
			"qualifiedName": "__type"
		},
		"974": {
			"sourceFileName": "../payments/src/interfaces/PaperUser.ts",
			"qualifiedName": "__type.emailAddress"
		},
		"975": {
			"sourceFileName": "../payments/src/interfaces/PaperUser.ts",
			"qualifiedName": "__type.walletAddress"
		},
		"976": {
			"sourceFileName": "../payments/src/interfaces/PaperUser.ts",
			"qualifiedName": "__type.accessCode"
		},
		"977": {
			"sourceFileName": "../payments/src/constants/style.ts",
			"qualifiedName": "Locale"
		},
		"978": {
			"sourceFileName": "src/payments/interfaces/CustomContract.ts",
			"qualifiedName": "ReadMethodCallType"
		},
		"979": {
			"sourceFileName": "src/payments/interfaces/CustomContract.ts",
			"qualifiedName": "__type"
		},
		"980": {
			"sourceFileName": "src/payments/interfaces/CustomContract.ts",
			"qualifiedName": "__type.name"
		},
		"981": {
			"sourceFileName": "src/payments/interfaces/CustomContract.ts",
			"qualifiedName": "__type.args"
		},
		"982": {
			"sourceFileName": "src/payments/interfaces/CustomContract.ts",
			"qualifiedName": "WriteMethodCallType"
		},
		"983": {
			"sourceFileName": "src/payments/interfaces/CustomContract.ts",
			"qualifiedName": "__type"
		},
		"984": {
			"sourceFileName": "src/payments/interfaces/CustomContract.ts",
			"qualifiedName": "__type.payment"
		},
		"985": {
			"sourceFileName": "src/payments/interfaces/CustomContract.ts",
			"qualifiedName": "__type"
		},
		"986": {
			"sourceFileName": "src/payments/interfaces/CustomContract.ts",
			"qualifiedName": "__type.currency"
		},
		"987": {
			"sourceFileName": "src/payments/interfaces/CustomContract.ts",
			"qualifiedName": "__type.value"
		},
		"988": {
			"sourceFileName": "src/payments/interfaces/CustomContract.ts",
			"qualifiedName": "__type.callOptions"
		},
		"989": {
			"sourceFileName": "src/payments/interfaces/CustomContract.ts",
			"qualifiedName": "__type"
		},
		"990": {
			"sourceFileName": "src/payments/interfaces/CustomContract.ts",
			"qualifiedName": "__type.gasOptions"
		},
		"991": {
			"sourceFileName": "src/payments/Provider.tsx",
			"qualifiedName": "PaymentsProviderProps"
		},
		"992": {
			"sourceFileName": "src/payments/Provider.tsx",
			"qualifiedName": "PaymentsProviderProps.chainName"
		},
		"993": {
			"sourceFileName": "src/payments/Provider.tsx",
			"qualifiedName": "PaymentsProviderProps.appName"
		},
		"994": {
			"sourceFileName": "src/payments/Provider.tsx",
			"qualifiedName": "PaymentsProviderProps.clientId"
		},
		"995": {
			"sourceFileName": "src/payments/Provider.tsx",
			"qualifiedName": "PaymentsSDKProvider"
		},
		"996": {
			"sourceFileName": "src/payments/Provider.tsx",
			"qualifiedName": "PaymentsSDKProvider"
		},
		"997": {
			"sourceFileName": "src/payments/Provider.tsx",
			"qualifiedName": "__0"
		},
		"998": {
			"sourceFileName": "src/payments/Provider.tsx",
			"qualifiedName": "usePaymentsSDKContext"
		},
		"999": {
			"sourceFileName": "src/payments/Provider.tsx",
			"qualifiedName": "usePaymentsSDKContext"
		},
		"1000": {
			"sourceFileName": "src/payments/components/CheckoutWithCard.tsx",
			"qualifiedName": "CheckoutWithCard"
		},
		"1001": {
			"sourceFileName": "src/payments/components/CheckoutWithCard.tsx",
			"qualifiedName": "CheckoutWithCard"
		},
		"1002": {
			"sourceFileName": "src/payments/components/CheckoutWithCard.tsx",
			"qualifiedName": "props"
		},
		"1003": {
			"sourceFileName": "src/payments/components/VerifyOwnershipWithPaper.tsx",
			"qualifiedName": "VerifyOwnershipWithPaper"
		},
		"1004": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "VerifyOwnershipWithPaper"
		},
		"1005": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"1006": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "context"
		},
		"1007": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "PaperCheckoutDisplay"
		},
		"1008": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "PaperCheckoutDisplay.POPUP"
		},
		"1009": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "PaperCheckoutDisplay.NEW_TAB"
		},
		"1010": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "PaperCheckoutDisplay.MODAL"
		},
		"1011": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "PaperCheckoutDisplay.DRAWER"
		},
		"1012": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "PaperCheckoutDisplay.EMBED"
		},
		"1013": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "PaperCheckoutProps"
		},
		"1014": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type"
		},
		"1015": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.checkoutId"
		},
		"1016": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.display"
		},
		"1017": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.recipientWalletAddress"
		},
		"1018": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.emailAddress"
		},
		"1019": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.quantity"
		},
		"1020": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.mintMethod"
		},
		"1021": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.eligibilityMethod"
		},
		"1022": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.metadata"
		},
		"1023": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.appName"
		},
		"1024": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.onOpenCheckout"
		},
		"1025": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type"
		},
		"1026": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type"
		},
		"1027": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.onCloseCheckout"
		},
		"1028": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type"
		},
		"1029": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type"
		},
		"1030": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.onPaymentSuccess"
		},
		"1031": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type"
		},
		"1032": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type"
		},
		"1033": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "result"
		},
		"1034": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.onTransferSuccess"
		},
		"1035": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type"
		},
		"1036": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type"
		},
		"1037": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "result"
		},
		"1038": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.options"
		},
		"1039": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type"
		},
		"1040": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.width"
		},
		"1041": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.height"
		},
		"1042": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.colorPrimary"
		},
		"1043": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.colorBackground"
		},
		"1044": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.colorText"
		},
		"1045": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.borderRadius"
		},
		"1046": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.fontFamily"
		},
		"1047": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__type.children"
		},
		"1048": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "T"
		},
		"1049": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "PaperCheckout"
		},
		"1050": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "PaperCheckout"
		},
		"1051": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "T"
		},
		"1052": {
			"sourceFileName": "src/payments/components/PaperCheckout.tsx",
			"qualifiedName": "__0"
		},
		"1053": {
			"sourceFileName": "src/payments/components/VerifyOwnershipWithPaper.tsx",
			"qualifiedName": "VerifyOwnershipWithPaper"
		},
		"1054": {
			"sourceFileName": "src/payments/interfaces/PaymentSuccessResult.ts",
			"qualifiedName": "PaymentSuccessResult"
		},
		"1055": {
			"sourceFileName": "src/payments/interfaces/PaymentSuccessResult.ts",
			"qualifiedName": "PaymentSuccessResult.id"
		},
		"1056": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "TransferSuccessResult"
		},
		"1057": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type"
		},
		"1058": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.id"
		},
		"1059": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.claimedTokens"
		},
		"1060": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "ClaimedToken"
		},
		"1061": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type"
		},
		"1062": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.contractAddress"
		},
		"1063": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.collectionTitle"
		},
		"1064": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.tokenId"
		},
		"1065": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.transactions"
		},
		"1066": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type"
		},
		"1067": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.claimHash"
		},
		"1068": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.claimExplorerUrl"
		},
		"1069": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.transferHash"
		},
		"1070": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.transferExplorerUrl"
		},
		"1071": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.metadata"
		},
		"1072": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type"
		},
		"1073": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.name"
		},
		"1074": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.description"
		},
		"1075": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.image"
		},
		"1076": {
			"sourceFileName": "src/payments/interfaces/TransferSuccessResult.ts",
			"qualifiedName": "__type.properties"
		}
	}
}