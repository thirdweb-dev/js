/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export interface OperatorFiltererInterface extends utils.Interface {
  functions: {
    "OPERATOR_FILTER_REGISTRY()": FunctionFragment;
    "operatorRestriction()": FunctionFragment;
    "setOperatorRestriction(bool)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "OPERATOR_FILTER_REGISTRY"
      | "operatorRestriction"
      | "setOperatorRestriction"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "OPERATOR_FILTER_REGISTRY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "operatorRestriction",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setOperatorRestriction",
    values: [boolean]
  ): string;

  decodeFunctionResult(
    functionFragment: "OPERATOR_FILTER_REGISTRY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "operatorRestriction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setOperatorRestriction",
    data: BytesLike
  ): Result;

  events: {
    "OperatorRestriction(bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OperatorRestriction"): EventFragment;
}

export interface OperatorRestrictionEventObject {
  restriction: boolean;
}
export type OperatorRestrictionEvent = TypedEvent<
  [boolean],
  OperatorRestrictionEventObject
>;

export type OperatorRestrictionEventFilter =
  TypedEventFilter<OperatorRestrictionEvent>;

export interface OperatorFilterer extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: OperatorFiltererInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    OPERATOR_FILTER_REGISTRY(overrides?: CallOverrides): Promise<[string]>;

    operatorRestriction(overrides?: CallOverrides): Promise<[boolean]>;

    setOperatorRestriction(
      _restriction: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  OPERATOR_FILTER_REGISTRY(overrides?: CallOverrides): Promise<string>;

  operatorRestriction(overrides?: CallOverrides): Promise<boolean>;

  setOperatorRestriction(
    _restriction: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    OPERATOR_FILTER_REGISTRY(overrides?: CallOverrides): Promise<string>;

    operatorRestriction(overrides?: CallOverrides): Promise<boolean>;

    setOperatorRestriction(
      _restriction: boolean,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "OperatorRestriction(bool)"(
      restriction?: null
    ): OperatorRestrictionEventFilter;
    OperatorRestriction(restriction?: null): OperatorRestrictionEventFilter;
  };

  estimateGas: {
    OPERATOR_FILTER_REGISTRY(overrides?: CallOverrides): Promise<BigNumber>;

    operatorRestriction(overrides?: CallOverrides): Promise<BigNumber>;

    setOperatorRestriction(
      _restriction: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    OPERATOR_FILTER_REGISTRY(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    operatorRestriction(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setOperatorRestriction(
      _restriction: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
