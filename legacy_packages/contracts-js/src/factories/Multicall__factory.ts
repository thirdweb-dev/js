/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Multicall, MulticallInterface } from "../Multicall";

const _abi = [
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610560806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ac9650d814610030575b600080fd5b61004361003e366004610312565b610059565b60405161005091906103d6565b60405180910390f35b6060816001600160401b038111156100735761007361043a565b6040519080825280602002602001820160405280156100a657816020015b60608152602001906001900390816100915790505b509050336000805b848110156101b557811561012d5761010b308787848181106100d2576100d2610450565b90506020028101906100e49190610466565b866040516020016100f7939291906104b3565b6040516020818303038152906040526101be565b84828151811061011d5761011d610450565b60200260200101819052506101ad565b61018f3087878481811061014357610143610450565b90506020028101906101559190610466565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506101be92505050565b8482815181106101a1576101a1610450565b60200260200101819052505b6001016100ae565b50505092915050565b60606101e38383604051806060016040528060278152602001610504602791396101ea565b9392505050565b6060600080856001600160a01b03168560405161020791906104d4565b600060405180830381855af49150503d8060008114610242576040519150601f19603f3d011682016040523d82523d6000602084013e610247565b606091505b509150915061025886838387610262565b9695505050505050565b606083156102d65782516000036102cf576001600160a01b0385163b6102cf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b50816102e0565b6102e083836102e8565b949350505050565b8151156102f85781518083602001fd5b8060405162461bcd60e51b81526004016102c691906104f0565b6000806020838503121561032557600080fd5b82356001600160401b038082111561033c57600080fd5b818501915085601f83011261035057600080fd5b81358181111561035f57600080fd5b8660208260051b850101111561037457600080fd5b60209290920196919550909350505050565b60005b838110156103a1578181015183820152602001610389565b50506000910152565b600081518084526103c2816020860160208601610386565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561042d57603f1988860301845261041b8583516103aa565b945092850192908501906001016103ff565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261047d57600080fd5b8301803591506001600160401b0382111561049757600080fd5b6020019150368190038213156104ac57600080fd5b9250929050565b8284823760609190911b6001600160601b0319169101908152601401919050565b600082516104e6818460208701610386565b9190910192915050565b6020815260006101e360208301846103aa56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d93626bce9524952675b70a631d7356118b3b8c31d04833e372643ea93ebedf264736f6c63430008170033";

type MulticallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MulticallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Multicall__factory extends ContractFactory {
  constructor(...args: MulticallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Multicall> {
    return super.deploy(overrides || {}) as Promise<Multicall>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Multicall {
    return super.attach(address) as Multicall;
  }
  override connect(signer: Signer): Multicall__factory {
    return super.connect(signer) as Multicall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MulticallInterface {
    return new utils.Interface(_abi) as MulticallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Multicall {
    return new Contract(address, _abi, signerOrProvider) as Multicall;
  }
}
