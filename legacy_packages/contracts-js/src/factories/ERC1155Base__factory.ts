/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155Base, ERC1155BaseInterface } from "../ERC1155Base";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_defaultAdmin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
      {
        name: "_symbol",
        type: "string",
        internalType: "string",
      },
      {
        name: "_royaltyRecipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "_royaltyBps",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "balanceOfBatch",
    inputs: [
      {
        name: "accounts",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "ids",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "batchFrozen",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "batchMintTo",
    inputs: [
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_tokenIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "_amounts",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "_baseURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "burnBatch",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_tokenIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "_amounts",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "contractURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBaseURICount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatchIdAtIndex",
    inputs: [
      {
        name: "_index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDefaultRoyaltyInfo",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRoyaltyInfoForToken",
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mintTo",
    inputs: [
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_tokenURI",
        type: "string",
        internalType: "string",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nextTokenIdToMint",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "royaltyInfo",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "salePrice",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "royaltyAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "safeBatchTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "ids",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "amounts",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setContractURI",
    inputs: [
      {
        name: "_uri",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDefaultRoyaltyInfo",
    inputs: [
      {
        name: "_royaltyRecipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "_royaltyBps",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOwner",
    inputs: [
      {
        name: "_newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRoyaltyInfoForToken",
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "_bps",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "uri",
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "_owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BatchMetadataUpdate",
    inputs: [
      {
        name: "_fromTokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "_toTokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContractURIUpdated",
    inputs: [
      {
        name: "prevURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "newURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DefaultRoyalty",
    inputs: [
      {
        name: "newRoyaltyRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newRoyaltyBps",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "MetadataFrozen",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnerUpdated",
    inputs: [
      {
        name: "prevOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoyaltyForToken",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "royaltyRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "royaltyBps",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TransferBatch",
    inputs: [
      {
        name: "_operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_ids",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
      {
        name: "_values",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TransferSingle",
    inputs: [
      {
        name: "_operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "_id",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "_value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "URI",
    inputs: [
      {
        name: "_value",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "_id",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "BatchMintInvalidBatchId",
    inputs: [
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "BatchMintInvalidTokenId",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "BatchMintMetadataFrozen",
    inputs: [
      {
        name: "batchId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ContractMetadataUnauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableUnauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "RoyaltyExceededMaxFeeBps",
    inputs: [
      {
        name: "max",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "actual",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "RoyaltyInvalidRecipient",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "RoyaltyUnauthorized",
    inputs: [],
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200349038038062003490833981016040819052620000349162000253565b8383600062000044838262000397565b50600162000053828262000397565b50505062000067856200008760201b60201c565b6200007c826001600160801b038316620000d9565b505050505062000463565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6127108111156200010c57604051630a4930ad60e31b815261271060048201526024810182905260440160405180910390fd5b600780546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b80516001600160a01b03811681146200018657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001b357600080fd5b81516001600160401b0380821115620001d057620001d06200018b565b604051601f8301601f19908116603f01168101908282118183101715620001fb57620001fb6200018b565b81604052838152602092508660208588010111156200021957600080fd5b600091505b838210156200023d57858201830151818301840152908201906200021e565b6000602085830101528094505050505092915050565b600080600080600060a086880312156200026c57600080fd5b62000277866200016e565b60208701519095506001600160401b03808211156200029557600080fd5b620002a389838a01620001a1565b95506040880151915080821115620002ba57600080fd5b50620002c988828901620001a1565b935050620002da606087016200016e565b60808701519092506001600160801b0381168114620002f857600080fd5b809150509295509295909350565b600181811c908216806200031b57607f821691505b6020821081036200033c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000392576000816000526020600020601f850160051c810160208610156200036d5750805b601f850160051c820191505b818110156200038e5782815560010162000379565b5050505b505050565b81516001600160401b03811115620003b357620003b36200018b565b620003cb81620003c4845462000306565b8462000342565b602080601f831160018114620004035760008415620003ea5750858301515b600019600386901b1c1916600185901b1785556200038e565b600085815260208120601f198616915b82811015620004345788860151825594840194600190910190840162000413565b5085821015620004535787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61301d80620004736000396000f3fe608060405234801561001057600080fd5b506004361061015e5760003560e01c8062fdd58e1461016357806301ffc9a7146101a157806306fdde03146101c45780630e89341c146101d957806313af4035146101ec5780632419f51b146102015780632a55205a146102145780632eb2c2d6146102465780633b1475a7146102595780634cc157df146102615780634e1273f414610296578063600dd5ea146102b657806363b45e2d146102c95780636b20c454146102d157806383040532146102e45780638da5cb5b14610307578063938e3d7b14610327578063949c09f71461033a57806395d89b411461034d5780639bcf7a1514610355578063a22cb46514610368578063ac9650d81461037b578063b03f45281461039b578063b24f2d39146103ae578063bd85b039146103cc578063e8a3d485146103ec578063e985e9c5146103f4578063f242432a14610422578063f5298aca14610435575b600080fd5b61018e610171366004612191565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101b46101af3660046121d1565b610448565b6040519015158152602001610198565b6101cc6104b5565b604051610198919061223e565b6101cc6101e7366004612251565b610543565b6101ff6101fa36600461226a565b610631565b005b61018e61020f366004612251565b610662565b610227610222366004612285565b6106b9565b604080516001600160a01b039093168352602083019190915201610198565b6101ff6102543660046123f5565b6106f6565b600c5461018e565b61027461026f366004612251565b610760565b604080516001600160a01b03909316835261ffff909116602083015201610198565b6102a96102a436600461249e565b6107cb565b60405161019891906125a4565b6101ff6102c4366004612191565b6108d7565b60095461018e565b6101ff6102df3660046125b7565b61090a565b6101b46102f2366004612251565b600b6020526000908152604090205460ff1681565b61030f610a5e565b6040516001600160a01b039091168152602001610198565b6101ff61033536600461262a565b610a6d565b6101ff61034836600461265e565b610a9b565b6101cc610c4f565b6101ff6103633660046126f6565b610c5c565b6101ff61037636600461272b565b610c91565b61038e610389366004612767565b610d49565b60405161019891906127db565b6101ff6103a936600461283f565b610eae565b6007546001600160a01b03811690600160a01b900461ffff16610274565b61018e6103da366004612251565b600d6020526000908152604090205481565b6101cc610f5a565b6101b461040236600461289d565b600360209081526000928352604080842090915290825290205460ff1681565b6101ff6104303660046128d0565b610f67565b6101ff610443366004612934565b610fca565b60006301ffc9a760e01b6001600160e01b0319831614806104795750636cdb3d1360e11b6001600160e01b03198316145b8061049457506303a24d0760e21b6001600160e01b03198316145b806104af57506001600160e01b0319821663152a902d60e11b145b92915050565b600080546104c290612967565b80601f01602080910402602001604051908101604052809291908181526020018280546104ee90612967565b801561053b5780601f106105105761010080835404028352916020019161053b565b820191906000526020600020905b81548152906001019060200180831161051e57829003601f168201915b505050505081565b60008181526004602052604081208054606092919061056190612967565b80601f016020809104026020016040519081016040528092919081815260200182805461058d90612967565b80156105da5780601f106105af576101008083540402835291602001916105da565b820191906000526020600020905b8154815290600101906020018083116105bd57829003601f168201915b505050505090506000815111156105f15792915050565b60006105fc84611071565b905080610608856111ef565b6040516020016106199291906129a1565b60405160208183030381529060405292505050919050565b6106396112f7565b610656576040516316ccb9cb60e11b815260040160405180910390fd5b61065f8161131a565b50565b600061066d60095490565b821061069457604051630793127760e11b8152600481018390526024015b60405180910390fd5b600982815481106106a7576106a76129d0565b90600052602060002001549050919050565b6000806000806106c886610760565b90945084925061ffff1690506127106106e182876129fc565b6106eb9190612a29565b925050509250929050565b6001600160a01b03851633148061073057506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b61074c5760405162461bcd60e51b815260040161068b90612a3d565b610759858585858561136c565b5050505050565b6000818152600860209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156107a757805160208201516107c1565b6007546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b606081518351146107ee5760405162461bcd60e51b815260040161068b90612a69565b600083516001600160401b03811115610809576108096122a7565b604051908082528060200260200182016040528015610832578160200160208202803683370190505b50905060005b84518110156108cf5760026000868381518110610857576108576129d0565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858381518110610893576108936129d0565b60200260200101518152602001908152602001600020548282815181106108bc576108bc6129d0565b6020908102919091010152600101610838565b509392505050565b6108df6112f7565b6108fc57604051636fae358160e11b815260040160405180910390fd5b6109068282611506565b5050565b336001600160a01b03841681148061094757506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b6109635760405162461bcd60e51b815260040161068b90612a92565b81518351146109a65760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b604482015260640161068b565b60005b8351811015610a4c578281815181106109c4576109c46129d0565b602002602001015160026000876001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110610a0557610a056129d0565b60200260200101518152602001908152602001600020541015610a3a5760405162461bcd60e51b815260040161068b90612abd565b610a45600182612aee565b90506109a9565b50610a58848484611596565b50505050565b6006546001600160a01b031690565b610a756112f7565b610a9257604051639f7f092560e01b815260040160405180910390fd5b61065f8161170e565b610aa36112f7565b610abf5760405162461bcd60e51b815260040161068b90612b01565b6000825111610b075760405162461bcd60e51b815260206004820152601460248201527326b4b73a34b733903d32b937903a37b5b2b7399760611b604482015260640161068b565b8151835114610b4b5760405162461bcd60e51b815260206004820152601060248201526f2632b733ba341036b4b9b6b0ba31b41760811b604482015260640161068b565b6000610b56600c5490565b9050806000805b8651811015610c0f57600019878281518110610b7b57610b7b6129d0565b602002602001015103610bc55783878281518110610b9b57610b9b6129d0565b6020908102919091010152610bb1600185612aee565b9350610bbe600183612aee565b9150610bfd565b83878281518110610bd857610bd86129d0565b602002602001015110610bfd5760405162461bcd60e51b815260040161068b90612b32565b610c08600182612aee565b9050610b5d565b508015610c2457610c218282866117ea565b50505b82600c81905550610c468787876040518060200160405280600081525061184e565b50505050505050565b600180546104c290612967565b610c646112f7565b610c8157604051636fae358160e11b815260040160405180910390fd5b610c8c83838361198c565b505050565b336001600160a01b0383168103610cdb5760405162461bcd60e51b815260206004820152600e60248201526d20a8282927ab24a723afa9a2a62360911b604482015260640161068b565b6001600160a01b03818116600081815260036020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191015b60405180910390a3505050565b6060816001600160401b03811115610d6357610d636122a7565b604051908082528060200260200182016040528015610d9657816020015b6060815260200190600190039081610d815790505b509050336000805b84811015610ea5578115610e1d57610dfb30878784818110610dc257610dc26129d0565b9050602002810190610dd49190612b56565b86604051602001610de793929190612ba3565b604051602081830303815290604052611a37565b848281518110610e0d57610e0d6129d0565b6020026020010181905250610e9d565b610e7f30878784818110610e3357610e336129d0565b9050602002810190610e459190612b56565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a3792505050565b848281518110610e9157610e916129d0565b60200260200101819052505b600101610d9e565b50505092915050565b610eb66112f7565b610ed25760405162461bcd60e51b815260040161068b90612b01565b600080610ede600c5490565b90506000198503610f14578091506001600c6000828254610eff9190612aee565b90915550610f0f90508185611a63565b610f37565b808510610f335760405162461bcd60e51b815260040161068b90612b32565b8491505b610f5286838560405180602001604052806000815250611a7b565b505050505050565b600580546104c290612967565b6001600160a01b038516331480610fa157506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b610fbd5760405162461bcd60e51b815260040161068b90612a3d565b6107598585858585611b42565b336001600160a01b03841681148061100757506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b6110235760405162461bcd60e51b815260040161068b90612a92565b6001600160a01b03841660009081526002602090815260408083208684529091529020548211156110665760405162461bcd60e51b815260040161068b90612abd565b610a58848484611c56565b6060600061107e60095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156110ce57602002820191906000526020600020905b8154815260200190600101908083116110ba575b5050505050905060005b828110156111d2578181815181106110f2576110f26129d0565b60200260200101518510156111c057600a6000838381518110611117576111176129d0565b60200260200101518152602001908152602001600020805461113890612967565b80601f016020809104026020016040519081016040528092919081815260200182805461116490612967565b80156111b15780601f10611186576101008083540402835291602001916111b1565b820191906000526020600020905b81548152906001019060200180831161119457829003601f168201915b50505050509350505050919050565b6111cb600182612aee565b90506110d8565b506040516309797f6960e21b81526004810185905260240161068b565b6060816000036112165750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611240578061122a81612bc4565b91506112399050600a83612a29565b915061121a565b6000816001600160401b0381111561125a5761125a6122a7565b6040519080825280601f01601f191660200182016040528015611284576020820181803683370190505b5090505b84156112ef57611299600183612bdd565b91506112a6600a86612bf0565b6112b1906030612aee565b60f81b8183815181106112c6576112c66129d0565b60200101906001600160f81b031916908160001a9053506112e8600a86612a29565b9450611288565b949350505050565b6000611301610a5e565b6001600160a01b0316336001600160a01b031614905090565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b815183511461138d5760405162461bcd60e51b815260040161068b90612a69565b6001600160a01b0384166113b35760405162461bcd60e51b815260040161068b90612c04565b336113c2818787878787611d48565b60005b84518110156114b25760008582815181106113e2576113e26129d0565b602002602001015190506000858381518110611400576114006129d0565b6020908102919091018101516001600160a01b038b1660009081526002835260408082208683529093529190912054909150818110156114525760405162461bcd60e51b815260040161068b90612c2a565b6001600160a01b03808b16600090815260026020818152604080842088855282528084208787039055938d1683529081528282208683529052908120805484929061149e908490612aee565b9091555050600190930192506113c5915050565b50846001600160a01b0316866001600160a01b0316826001600160a01b0316600080516020612f8183398151915287876040516114f0929190612c54565b60405180910390a4610f52818787878787611e42565b61271081111561153457604051630a4930ad60e31b815261271060048201526024810182905260440161068b565b600780546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6001600160a01b0383166115bc5760405162461bcd60e51b815260040161068b90612c82565b80518251146115dd5760405162461bcd60e51b815260040161068b90612a69565b600033905061160081856000868660405180602001604052806000815250611d48565b60005b83518110156116c1576000848281518110611620576116206129d0565b60200260200101519050600084838151811061163e5761163e6129d0565b6020908102919091018101516001600160a01b03891660009081526002835260408082208683529093529190912054909150818110156116905760405162461bcd60e51b815260040161068b90612c2a565b6001600160a01b03881660009081526002602090815260408083209583529490529290922091039055600101611603565b5060006001600160a01b0316846001600160a01b0316826001600160a01b0316600080516020612f818339815191528686604051611700929190612c54565b60405180910390a450505050565b60006005805461171d90612967565b80601f016020809104026020016040519081016040528092919081815260200182805461174990612967565b80156117965780601f1061176b57610100808354040283529160200191611796565b820191906000526020600020905b81548152906001019060200180831161177957829003601f168201915b5050505050905081600590816117ac9190612cf2565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516117de929190612db1565b60405180910390a15050565b6000806117f78486612aee565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602052604090209092508291506118458482612cf2565b50935093915050565b6001600160a01b0384166118745760405162461bcd60e51b815260040161068b90612c04565b81518351146118955760405162461bcd60e51b815260040161068b90612a69565b336118a581600087878787611d48565b60005b8451811015611936578381815181106118c3576118c36129d0565b602002602001015160026000886001600160a01b03166001600160a01b031681526020019081526020016000206000878481518110611904576119046129d0565b6020026020010151815260200190815260200160002060008282546119299190612aee565b90915550506001016118a8565b50846001600160a01b031660006001600160a01b0316826001600160a01b0316600080516020612f818339815191528787604051611975929190612c54565b60405180910390a461075981600087878787611e42565b6127108111156119ba57604051630a4930ad60e31b815261271060048201526024810182905260440161068b565b6040805180820182526001600160a01b038481168083526020808401868152600089815260088352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d9101610d3c565b6060611a5c8383604051806060016040528060278152602001612fc160279139611f73565b9392505050565b6000828152600460205260409020610c8c8282612cf2565b6001600160a01b038416611aa15760405162461bcd60e51b815260040161068b90612c04565b33611ac181600087611ab288611feb565b611abb88611feb565b87611d48565b6001600160a01b038516600090815260026020908152604080832087845290915281208054859290611af4908490612aee565b909155505060408051858152602081018590526001600160a01b038088169260009291851691600080516020612fa1833981519152910160405180910390a461075981600087878787612036565b6001600160a01b038416611b685760405162461bcd60e51b815260040161068b90612c04565b33611b78818787611ab288611feb565b6001600160a01b038616600090815260026020908152604080832087845290915290205483811015611bbc5760405162461bcd60e51b815260040161068b90612c2a565b6001600160a01b0380881660009081526002602081815260408084208a855282528084208987039055938a16835290815282822088835290529081208054869290611c08908490612aee565b909155505060408051868152602081018690526001600160a01b03808916928a82169291861691600080516020612fa1833981519152910160405180910390a4610c46828888888888612036565b6001600160a01b038316611c7c5760405162461bcd60e51b815260040161068b90612c82565b33611cab81856000611c8d87611feb565b611c9687611feb565b60405180602001604052806000815250611d48565b6001600160a01b038416600090815260026020908152604080832086845290915290205482811015611cef5760405162461bcd60e51b815260040161068b90612c2a565b6001600160a01b0385811660008181526002602090815260408083208984528252808320888703905580518981529182018890529193861691600080516020612fa1833981519152910160405180910390a45050505050565b6001600160a01b038516611dc65760005b8351811015611dc457828181518110611d7457611d746129d0565b6020026020010151600d6000868481518110611d9257611d926129d0565b602002602001015181526020019081526020016000206000828254611db79190612aee565b9091555050600101611d59565b505b6001600160a01b038416610f525760005b8351811015610c4657828181518110611df257611df26129d0565b6020026020010151600d6000868481518110611e1057611e106129d0565b602002602001015181526020019081526020016000206000828254611e359190612bdd565b9091555050600101611dd7565b6001600160a01b0384163b15610f525760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611e869089908990889088908890600401612dd6565b6020604051808303816000875af1925050508015611ec1575060408051601f3d908101601f19168201909252611ebe91810190612e34565b60015b611f4357611ecd612e51565b806308c379a003611f065750611ee1612e6d565b80611eec5750611f08565b8060405162461bcd60e51b815260040161068b919061223e565b505b60405162461bcd60e51b815260206004820152601060248201526f10a2a92198989a9aa922a1a2a4ab22a960811b604482015260640161068b565b6001600160e01b0319811663bc197c8160e01b14610c465760405162461bcd60e51b815260040161068b90612ef6565b6060600080856001600160a01b031685604051611f909190612f1f565b600060405180830381855af49150503d8060008114611fcb576040519150601f19603f3d011682016040523d82523d6000602084013e611fd0565b606091505b5091509150611fe1868383876120f1565b9695505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110612025576120256129d0565b602090810291909101015292915050565b6001600160a01b0384163b15610f525760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061207a9089908990889088908890600401612f3b565b6020604051808303816000875af19250505080156120b5575060408051601f3d908101601f191682019092526120b291810190612e34565b60015b6120c157611ecd612e51565b6001600160e01b0319811663f23a6e6160e01b14610c465760405162461bcd60e51b815260040161068b90612ef6565b60608315612160578251600003612159576001600160a01b0385163b6121595760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161068b565b50816112ef565b6112ef8383815115611eec5781518083602001fd5b80356001600160a01b038116811461218c57600080fd5b919050565b600080604083850312156121a457600080fd5b6121ad83612175565b946020939093013593505050565b6001600160e01b03198116811461065f57600080fd5b6000602082840312156121e357600080fd5b8135611a5c816121bb565b60005b838110156122095781810151838201526020016121f1565b50506000910152565b6000815180845261222a8160208601602086016121ee565b601f01601f19169290920160200192915050565b602081526000611a5c6020830184612212565b60006020828403121561226357600080fd5b5035919050565b60006020828403121561227c57600080fd5b611a5c82612175565b6000806040838503121561229857600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b03811182821017156122e2576122e26122a7565b6040525050565b60006001600160401b03821115612302576123026122a7565b5060051b60200190565b600082601f83011261231d57600080fd5b8135602061232a826122e9565b60405161233782826122bd565b80915083815260208101915060208460051b87010193508684111561235b57600080fd5b602086015b848110156123775780358352918301918301612360565b509695505050505050565b600082601f83011261239357600080fd5b81356001600160401b038111156123ac576123ac6122a7565b6040516123c3601f8301601f1916602001826122bd565b8181528460208386010111156123d857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561240d57600080fd5b61241686612175565b945061242460208701612175565b935060408601356001600160401b038082111561244057600080fd5b61244c89838a0161230c565b9450606088013591508082111561246257600080fd5b61246e89838a0161230c565b9350608088013591508082111561248457600080fd5b5061249188828901612382565b9150509295509295909350565b600080604083850312156124b157600080fd5b82356001600160401b03808211156124c857600080fd5b818501915085601f8301126124dc57600080fd5b813560206124e9826122e9565b6040516124f682826122bd565b83815260059390931b850182019282810191508984111561251657600080fd5b948201945b8386101561253b5761252c86612175565b8252948201949082019061251b565b9650508601359250508082111561255157600080fd5b5061255e8582860161230c565b9150509250929050565b60008151808452602080850194506020840160005b838110156125995781518752958201959082019060010161257d565b509495945050505050565b602081526000611a5c6020830184612568565b6000806000606084860312156125cc57600080fd5b6125d584612175565b925060208401356001600160401b03808211156125f157600080fd5b6125fd8783880161230c565b9350604086013591508082111561261357600080fd5b506126208682870161230c565b9150509250925092565b60006020828403121561263c57600080fd5b81356001600160401b0381111561265257600080fd5b6112ef84828501612382565b6000806000806080858703121561267457600080fd5b61267d85612175565b935060208501356001600160401b038082111561269957600080fd5b6126a58883890161230c565b945060408701359150808211156126bb57600080fd5b6126c78883890161230c565b935060608701359150808211156126dd57600080fd5b506126ea87828801612382565b91505092959194509250565b60008060006060848603121561270b57600080fd5b8335925061271b60208501612175565b9150604084013590509250925092565b6000806040838503121561273e57600080fd5b61274783612175565b91506020830135801515811461275c57600080fd5b809150509250929050565b6000806020838503121561277a57600080fd5b82356001600160401b038082111561279157600080fd5b818501915085601f8301126127a557600080fd5b8135818111156127b457600080fd5b8660208260051b85010111156127c957600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561283257603f19888603018452612820858351612212565b94509285019290850190600101612804565b5092979650505050505050565b6000806000806080858703121561285557600080fd5b61285e85612175565b93506020850135925060408501356001600160401b0381111561288057600080fd5b61288c87828801612382565b949793965093946060013593505050565b600080604083850312156128b057600080fd5b6128b983612175565b91506128c760208401612175565b90509250929050565b600080600080600060a086880312156128e857600080fd5b6128f186612175565b94506128ff60208701612175565b9350604086013592506060860135915060808601356001600160401b0381111561292857600080fd5b61249188828901612382565b60008060006060848603121561294957600080fd5b61295284612175565b95602085013595506040909401359392505050565b600181811c9082168061297b57607f821691505b60208210810361299b57634e487b7160e01b600052602260045260246000fd5b50919050565b600083516129b38184602088016121ee565b8351908301906129c78183602088016121ee565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104af576104af6129e6565b634e487b7160e01b600052601260045260246000fd5b600082612a3857612a38612a13565b500490565b6020808252601290820152710853d5d3915497d3d497d054141493d5915160721b604082015260600190565b6020808252600f908201526e0988a9c8ea890be9a92a69a82a8869608b1b604082015260600190565b6020808252601190820152702ab730b8383937bb32b21031b0b63632b960791b604082015260600190565b602080825260179082015276139bdd08195b9bdd59da081d1bdad95b9cc81bdddb9959604a1b604082015260600190565b808201808211156104af576104af6129e6565b6020808252601790820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b604082015260600190565b6020808252600a90820152691a5b9d985b1a59081a5960b21b604082015260600190565b6000808335601e19843603018112612b6d57600080fd5b8301803591506001600160401b03821115612b8757600080fd5b602001915036819003821315612b9c57600080fd5b9250929050565b8284823760609190911b6001600160601b0319169101908152601401919050565b600060018201612bd657612bd66129e6565b5060010190565b818103818111156104af576104af6129e6565b600082612bff57612bff612a13565b500690565b6020808252600c908201526b2a27afad22a927afa0a2222960a11b604082015260600190565b60208082526010908201526f125394d551919250d251539517d0905360821b604082015260600190565b604081526000612c676040830185612568565b8281036020840152612c798185612568565b95945050505050565b6020808252600e908201526d232927a6afad22a927afa0a2222960911b604082015260600190565b601f821115610c8c576000816000526020600020601f850160051c81016020861015612cd35750805b601f850160051c820191505b81811015610f5257828155600101612cdf565b81516001600160401b03811115612d0b57612d0b6122a7565b612d1f81612d198454612967565b84612caa565b602080601f831160018114612d545760008415612d3c5750858301515b600019600386901b1c1916600185901b178555610f52565b600085815260208120601f198616915b82811015612d8357888601518255948401946001909101908401612d64565b5085821015612da15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000612dc46040830185612212565b8281036020840152612c798185612212565b6001600160a01b0386811682528516602082015260a060408201819052600090612e0290830186612568565b8281036060840152612e148186612568565b90508281036080840152612e288185612212565b98975050505050505050565b600060208284031215612e4657600080fd5b8151611a5c816121bb565b600060033d1115612e6a5760046000803e5060005160e01c5b90565b600060443d1015612e7b5790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715612eaa57505050505090565b8285019150815181811115612ec25750505050505090565b843d8701016020828501011115612edc5750505050505090565b612eeb602082860101876122bd565b509095945050505050565b6020808252600f908201526e1513d2d15394d7d491529150d51151608a1b604082015260600190565b60008251612f318184602087016121ee565b9190910192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090612f7590830184612212565b97965050505050505056fe4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fbc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201f8034737a63d8cb5d44c695c87b2aab3a192f9d502baf9269820b5a5776771c64736f6c63430008170033";

type ERC1155BaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Base__factory extends ContractFactory {
  constructor(...args: ERC1155BaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _defaultAdmin: string,
    _name: string,
    _symbol: string,
    _royaltyRecipient: string,
    _royaltyBps: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Base> {
    return super.deploy(
      _defaultAdmin,
      _name,
      _symbol,
      _royaltyRecipient,
      _royaltyBps,
      overrides || {}
    ) as Promise<ERC1155Base>;
  }
  override getDeployTransaction(
    _defaultAdmin: string,
    _name: string,
    _symbol: string,
    _royaltyRecipient: string,
    _royaltyBps: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _defaultAdmin,
      _name,
      _symbol,
      _royaltyRecipient,
      _royaltyBps,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Base {
    return super.attach(address) as ERC1155Base;
  }
  override connect(signer: Signer): ERC1155Base__factory {
    return super.connect(signer) as ERC1155Base__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BaseInterface {
    return new utils.Interface(_abi) as ERC1155BaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Base {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Base;
  }
}
