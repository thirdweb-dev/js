/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DirectListingsStorage,
  DirectListingsStorageInterface,
} from "../DirectListingsStorage";

const _abi = [
  {
    type: "function",
    name: "DIRECT_LISTINGS_STORAGE_POSITION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
];

const _bytecode =
  "0x60a6610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80635475fd43146038575b600080fd5b605e7fa5370dfa5e46a36b8e1214352e211aa04006b977c8fd45a98e6b8c6e230ba00081565b60405190815260200160405180910390f3fea264697066735822122012d84ec37a4b0ccd201fd25d511024da4f28cc03af0aaedad8a497419e792b3364736f6c63430008170033";

type DirectListingsStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DirectListingsStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DirectListingsStorage__factory extends ContractFactory {
  constructor(...args: DirectListingsStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DirectListingsStorage> {
    return super.deploy(overrides || {}) as Promise<DirectListingsStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DirectListingsStorage {
    return super.attach(address) as DirectListingsStorage;
  }
  override connect(signer: Signer): DirectListingsStorage__factory {
    return super.connect(signer) as DirectListingsStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DirectListingsStorageInterface {
    return new utils.Interface(_abi) as DirectListingsStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DirectListingsStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DirectListingsStorage;
  }
}
