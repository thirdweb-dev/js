/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AirdropERC1155Claimable,
  AirdropERC1155ClaimableInterface,
} from "../AirdropERC1155Claimable";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "airdropTokenAddress",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "availableAmount",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claim",
    inputs: [
      {
        name: "_receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "_quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_proofs",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
      {
        name: "_proofMaxQuantityForWallet",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "expirationTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_trustedForwarders",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_tokenOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_airdropTokenAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_tokenIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "_availableAmounts",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "_expirationTimestamp",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_openClaimLimitPerWallet",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "_merkleRoot",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isTrustedForwarder",
    inputs: [
      {
        name: "forwarder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "merkleRoot",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "openClaimLimitPerWallet",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "supplyClaimedByWallet",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenIds",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verifyClaim",
    inputs: [
      {
        name: "_claimer",
        type: "address",
        internalType: "address",
      },
      {
        name: "_quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_proofs",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
      {
        name: "_proofMaxQuantityForWallet",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokensClaimed",
    inputs: [
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "quantityClaimed",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611449806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806338524a10146100b45780633c70b357146100c9578063572b6c05146100fc57806371b406e41461011f5780639f43ddd21461014a578063a0c2293a14610153578063a3e6761014610173578063ac9650d81461019e578063b5c150d4146101be578063b73e0e8b146101de578063d58778d6146101f1578063f4cebfe614610204578063feff17ce14610217575b600080fd5b6100c76100c2366004610ea4565b61022a565b005b6100e96100d7366004610f13565b609e6020526000908152604090205481565b6040519081526020015b60405180910390f35b61010f61010a366004610f2c565b6102be565b60405190151581526020016100f3565b6100e961012d366004610f47565b609b60209081526000928352604080842090915290825290205481565b6100e9609a5481565b6100e9610161366004610f13565b609c6020526000908152604090205481565b609854610186906001600160a01b031681565b6040516001600160a01b0390911681526020016100f3565b6101b16101ac366004610f73565b6102dc565b6040516100f39190611004565b6100e96101cc366004610f13565b609d6020526000908152604090205481565b609754610186906001600160a01b031681565b6100e96101ff366004610f13565b610459565b6100c7610212366004610ea4565b61047a565b6100c76102253660046111a6565b610666565b61023261092a565b600061023c610983565b905061024c81878787878761047a565b610257878787610992565b84876001600160a01b031661026a610983565b6001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de6896040516102a491815260200190565b60405180910390a4506102b660018055565b505050505050565b6001600160a01b031660009081526065602052604090205460ff1690565b6060816001600160401b038111156102f6576102f6611068565b60405190808252806020026020018201604052801561032957816020015b60608152602001906001900390816103145790505b5090506000610336610983565b9050336001600160a01b038216141560005b8481101561044f5781156103c7576103a53087878481811061036c5761036c6112a2565b905060200281019061037e91906112b8565b86604051602001610391939291906112fe565b604051602081830303815290604052610a91565b8482815181106103b7576103b76112a2565b6020026020010181905250610447565b610429308787848181106103dd576103dd6112a2565b90506020028101906103ef91906112b8565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a9192505050565b84828151811061043b5761043b6112a2565b60200260200101819052505b600101610348565b5050505b92915050565b6099818154811061046957600080fd5b600091825260209091200154905081565b6000848152609e602052604081205480156104d9576040516001600160601b031960608a901b166020820152603481018490526104d59086908690849060540160405160208183030381529060405280519060200120610abd565b5091505b6000868152609b602090815260408083206001600160a01b038c168452909152902054876105455760405162461bcd60e51b8152602060048201526014602482015273436c61696d696e67207a65726f20746f6b656e7360601b60448201526064015b60405180910390fd5b6000878152609d602052604090205488111561059f5760405162461bcd60e51b815260206004820152601960248201527832bc31b2b2b2399030bb30b4b630b13632903a37b5b2b7399760391b604482015260640161053c565b609a548015806105ae57508042105b6105ed5760405162461bcd60e51b815260206004820152601060248201526f30b4b9323937b81032bc3834b932b21760811b604482015260640161053c565b600084610608576000898152609c602052604090205461060a565b855b905080610617848c611335565b11156106595760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21038bab0b73a34ba3c9760791b604482015260640161053c565b5050505050505050505050565b600054610100900460ff16158080156106865750600054600160ff909116105b806106a7575061069530610b48565b1580156106a7575060005460ff166001145b61070a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161053c565b6000805460ff19166001179055801561072d576000805461ff0019166101001790555b610735610b57565b61073e89610b88565b609880546001600160a01b03808b166001600160a01b03199283161790925560978054928a16929091169190911790558551610781906099906020890190610ddd565b50609a84905585518351148015610799575085518251145b80156107a6575085518551145b6107e55760405162461bcd60e51b815260206004820152601060248201526f3632b733ba341036b4b9b6b0ba31b41760811b604482015260640161053c565b60005b86518110156108d857828181518110610803576108036112a2565b6020026020010151609e6000898481518110610821576108216112a2565b602002602001015181526020019081526020016000208190555083818151811061084d5761084d6112a2565b6020026020010151609c600089848151811061086b5761086b6112a2565b6020026020010151815260200190815260200160002081905550858181518110610897576108976112a2565b6020026020010151609d60008984815181106108b5576108b56112a2565b6020908102919091018101518252810191909152604001600020556001016107e8565b50801561091f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b60026001540361097c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161053c565b6002600155565b600061098d610bc3565b905090565b6000818152609b6020526040812083916109aa610983565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546109d99190611335565b90915550506000818152609d6020526040812080548492906109fc908490611348565b9091555050609754609854604051637921219560e11b81526001600160a01b0391821660048201528582166024820152604481018490526064810185905260a06084820152600060a482015291169063f242432a9060c401600060405180830381600087803b158015610a6e57600080fd5b505af1158015610a82573d6000803e3d6000fd5b50505050505050565b60018055565b6060610ab683836040518060600160405280602781526020016113ed60279139610be5565b9392505050565b6000808281805b87811015610b3957610ad760028361135b565b91506000898983818110610aed57610aed6112a2565b905060200201359050808411610b125760008481526020829052604090209350610b30565b60008181526020859052604090209350610b2d600184611335565b92505b50600101610ac4565b50941496939550929350505050565b6001600160a01b03163b151590565b600054610100900460ff16610b7e5760405162461bcd60e51b815260040161053c90611372565b610b86610c5d565b565b600054610100900460ff16610baf5760405162461bcd60e51b815260040161053c90611372565b610bb7610c84565b610bc081610cab565b50565b6000610bce336102be565b15610be0575060131936013560601c90565b503390565b6060600080856001600160a01b031685604051610c0291906113bd565b600060405180830381855af49150503d8060008114610c3d576040519150601f19603f3d011682016040523d82523d6000602084013e610c42565b606091505b5091509150610c5386838387610d34565b9695505050505050565b600054610100900460ff16610a8b5760405162461bcd60e51b815260040161053c90611372565b600054610100900460ff16610b865760405162461bcd60e51b815260040161053c90611372565b600054610100900460ff16610cd25760405162461bcd60e51b815260040161053c90611372565b60005b8151811015610d3057600160656000848481518110610cf657610cf66112a2565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610cd5565b5050565b60608315610da1578251600003610d9a57610d4e85610b48565b610d9a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161053c565b5081610dab565b610dab8383610db3565b949350505050565b815115610dc35781518083602001fd5b8060405162461bcd60e51b815260040161053c91906113d9565b828054828255906000526020600020908101928215610e18579160200282015b82811115610e18578251825591602001919060010190610dfd565b50610e24929150610e28565b5090565b5b80821115610e245760008155600101610e29565b80356001600160a01b0381168114610e5457600080fd5b919050565b60008083601f840112610e6b57600080fd5b5081356001600160401b03811115610e8257600080fd5b6020830191508360208260051b8501011115610e9d57600080fd5b9250929050565b60008060008060008060a08789031215610ebd57600080fd5b610ec687610e3d565b9550602087013594506040870135935060608701356001600160401b03811115610eef57600080fd5b610efb89828a01610e59565b979a9699509497949695608090950135949350505050565b600060208284031215610f2557600080fd5b5035919050565b600060208284031215610f3e57600080fd5b610ab682610e3d565b60008060408385031215610f5a57600080fd5b82359150610f6a60208401610e3d565b90509250929050565b60008060208385031215610f8657600080fd5b82356001600160401b03811115610f9c57600080fd5b610fa885828601610e59565b90969095509350505050565b60005b83811015610fcf578181015183820152602001610fb7565b50506000910152565b60008151808452610ff0816020860160208601610fb4565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561105b57603f19888603018452611049858351610fd8565b9450928501929085019060010161102d565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156110a6576110a6611068565b604052919050565b60006001600160401b038211156110c7576110c7611068565b5060051b60200190565b600082601f8301126110e257600080fd5b813560206110f76110f2836110ae565b61107e565b8083825260208201915060208460051b87010193508684111561111957600080fd5b602086015b8481101561113c5761112f81610e3d565b835291830191830161111e565b509695505050505050565b600082601f83011261115857600080fd5b813560206111686110f2836110ae565b8083825260208201915060208460051b87010193508684111561118a57600080fd5b602086015b8481101561113c578035835291830191830161118f565b600080600080600080600080610100898b0312156111c357600080fd5b88356001600160401b03808211156111da57600080fd5b6111e68c838d016110d1565b99506111f460208c01610e3d565b985061120260408c01610e3d565b975060608b013591508082111561121857600080fd5b6112248c838d01611147565b965060808b013591508082111561123a57600080fd5b6112468c838d01611147565b955060a08b0135945060c08b013591508082111561126357600080fd5b61126f8c838d01611147565b935060e08b013591508082111561128557600080fd5b506112928b828c01611147565b9150509295985092959890939650565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126112cf57600080fd5b8301803591506001600160401b038211156112e957600080fd5b602001915036819003821315610e9d57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104535761045361131f565b818103818111156104535761045361131f565b80820281158282048414176104535761045361131f565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082516113cf818460208701610fb4565b9190910192915050565b602081526000610ab66020830184610fd856fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122039ee069bafdfd27328f444197375e4098f719337d84caa4cb7f38346791efe3c64736f6c63430008170033";

type AirdropERC1155ClaimableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropERC1155ClaimableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropERC1155Claimable__factory extends ContractFactory {
  constructor(...args: AirdropERC1155ClaimableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AirdropERC1155Claimable> {
    return super.deploy(overrides || {}) as Promise<AirdropERC1155Claimable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AirdropERC1155Claimable {
    return super.attach(address) as AirdropERC1155Claimable;
  }
  override connect(signer: Signer): AirdropERC1155Claimable__factory {
    return super.connect(signer) as AirdropERC1155Claimable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropERC1155ClaimableInterface {
    return new utils.Interface(_abi) as AirdropERC1155ClaimableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AirdropERC1155Claimable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AirdropERC1155Claimable;
  }
}
