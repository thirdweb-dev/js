/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Staking721Base,
  Staking721BaseInterface,
} from "../Staking721Base";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_defaultAdmin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_timeUnit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_rewardsPerUnitTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_stakingToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "_rewardToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "_nativeTokenWrapper",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "claimRewards",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "contractURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "depositRewardTokens",
    inputs: [
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getRewardTokenBalance",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRewardsPerUnitTime",
    inputs: [],
    outputs: [
      {
        name: "_rewardsPerUnitTime",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getStakeInfo",
    inputs: [
      {
        name: "_staker",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "_tokensStaked",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "_rewards",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTimeUnit",
    inputs: [],
    outputs: [
      {
        name: "_timeUnit",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "indexedTokens",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isIndexed",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "nativeTokenWrapper",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onERC721Received",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "rewardToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setContractURI",
    inputs: [
      {
        name: "_uri",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOwner",
    inputs: [
      {
        name: "_newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRewardsPerUnitTime",
    inputs: [
      {
        name: "_rewardsPerUnitTime",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTimeUnit",
    inputs: [
      {
        name: "_timeUnit",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stake",
    inputs: [
      {
        name: "_tokenIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stakerAddress",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "stakers",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "amountStaked",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "conditionIdOflastUpdate",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "timeOfLastUpdate",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "unclaimedRewards",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "stakersArray",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "stakingToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "_tokenIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawRewardTokens",
    inputs: [
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ContractURIUpdated",
    inputs: [
      {
        name: "prevURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "newURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnerUpdated",
    inputs: [
      {
        name: "prevOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsClaimed",
    inputs: [
      {
        name: "staker",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "rewardAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokensStaked",
    inputs: [
      {
        name: "staker",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenIds",
        type: "uint256[]",
        indexed: true,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokensWithdrawn",
    inputs: [
      {
        name: "staker",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenIds",
        type: "uint256[]",
        indexed: true,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdatedRewardsPerUnitTime",
    inputs: [
      {
        name: "oldRewardsPerUnitTime",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newRewardsPerUnitTime",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdatedTimeUnit",
    inputs: [
      {
        name: "oldTimeUnit",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newTimeUnit",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ContractMetadataUnauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "CurrencyTransferLibMismatchedValue",
    inputs: [
      {
        name: "expected",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "actual",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorized",
    inputs: [],
  },
];

const _bytecode =
  "0x60e06040526003805460ff191660011790553480156200001e57600080fd5b506040516200328338038062003283833981016040819052620000419162000267565b6001600255826001600160a01b038116620000a35760405162461bcd60e51b815260206004820152601460248201527f636f6c6c656374696f6e2061646472657373203000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0316608052620000ba86620000e3565b620000c6858562000135565b6001600160a01b0391821660a0521660c052506200033292505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b81600003620001875760405162461bcd60e51b815260206004820152601460248201527f74696d652d756e69742063616e2774206265203000000000000000000000000060448201526064016200009a565b6003805461010090046001600160401b03169060019081620001aa8185620002ec565b82546001600160401b039182166101009390930a92830291909202199091161790555060408051608081018252848152602080820185815242838501908152600060608501818152878252600990945294909420925183555160018301559151600282015590516003909101558015620002455742600960006200023060018562000316565b81526020810191909152604001600020600301555b505050565b80516001600160a01b03811681146200026257600080fd5b919050565b60008060008060008060c087890312156200028157600080fd5b6200028c876200024a565b95506020870151945060408701519350620002aa606088016200024a565b9250620002ba608088016200024a565b9150620002ca60a088016200024a565b90509295509295509295565b634e487b7160e01b600052601160045260246000fd5b6001600160401b038181168382160190808211156200030f576200030f620002d6565b5092915050565b818103818111156200032c576200032c620002d6565b92915050565b60805160a05160c051612ecd620003b660003960008181610145015281816105a60152818161141d015281816114d901528181611df90152612260015260008181610572015281816113b3015281816113f7015281816114b501528181611dd5015261223c01526000818161033601528181610fa201526119570152612ecd6000f3fe6080604052600436106101355760003560e01c806301ffc9a7146101be5780630e8b229b146101f35780630fbf0a931461021657806313af403514610236578063150b7a021461025657806316c621e01461028f57806323ef2580146102a2578063372500ab146102c25780635357e916146102d75780636360106f1461030457806372f702f3146103245780638da5cb5b146103585780639168ae721461036d578063938e3d7b1461040357806393ce5343146104235780639406704514610438578063961004d31461046e578063983d95ce1461048e578063ac9650d8146104ae578063c3453153146104db578063cb43b2dd14610509578063d68124c714610529578063e8a3d4851461053e578063f7c618c114610560578063f9ea29cb14610594578063fd48ba17146105c857600080fd5b366101b957336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101b75760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b3480156101ca57600080fd5b506101de6101d936600461270f565b6105f8565b60405190151581526020015b60405180910390f35b3480156101ff57600080fd5b5061020861062f565b6040519081526020016101ea565b34801561022257600080fd5b506101b761023136600461277d565b610677565b34801561024257600080fd5b506101b76102513660046127d5565b6106af565b34801561026257600080fd5b506102766102713660046127f0565b6106e0565b6040516001600160e01b031990911681526020016101ea565b6101b761029d36600461288a565b61073c565b3480156102ae57600080fd5b506101b76102bd36600461288a565b610772565b3480156102ce57600080fd5b506101b7610899565b3480156102e357600080fd5b506102f76102f236600461288a565b6108cd565b6040516101ea91906128a3565b34801561031057600080fd5b506101b761031f36600461288a565b6108f7565b34801561033057600080fd5b506102f77f000000000000000000000000000000000000000000000000000000000000000081565b34801561036457600080fd5b506102f7610a1f565b34801561037957600080fd5b506103ca6103883660046127d5565b600760205260009081526040902080546001909101546001600160401b0380831692600160401b810490911691600160801b9091046001600160801b03169084565b604080516001600160401b0395861681529490931660208501526001600160801b039091169183019190915260608201526080016101ea565b34801561040f57600080fd5b506101b761041e3660046128cd565b610a2e565b34801561042f57600080fd5b50600a54610208565b34801561044457600080fd5b506102f761045336600461288a565b6008602052600090815260409020546001600160a01b031681565b34801561047a57600080fd5b5061020861048936600461288a565b610a5c565b34801561049a57600080fd5b506101b76104a936600461277d565b610a7d565b3480156104ba57600080fd5b506104ce6104c936600461277d565b610aac565b6040516101ea91906129cd565b3480156104e757600080fd5b506104fb6104f63660046127d5565b610c11565b6040516101ea929190612a31565b34801561051557600080fd5b506101b761052436600461288a565b610e3f565b34801561053557600080fd5b50610208610e6d565b34801561054a57600080fd5b50610553610eb5565b6040516101ea9190612a7e565b34801561056c57600080fd5b506102f77f000000000000000000000000000000000000000000000000000000000000000081565b3480156105a057600080fd5b506102f77f000000000000000000000000000000000000000000000000000000000000000081565b3480156105d457600080fd5b506101de6105e336600461288a565b60066020526000908152604090205460ff1681565b60006001600160e01b03198216630a85bd0160e11b148061062957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000600960006001600360019054906101000a90046001600160401b03166106579190612aa7565b6001600160401b0316815260200190815260200160002060010154905090565b60028054036106985760405162461bcd60e51b81526004016101ae90612ace565b600280556106a68282610f43565b50506001600255565b6106b7611302565b6106d4576040516316ccb9cb60e11b815260040160405180910390fd5b6106dd81611325565b50565b60035460009060ff1660021461072a5760405162461bcd60e51b815260206004820152600f60248201526e2234b932b1ba103a3930b739b332b960891b60448201526064016101ae565b50630a85bd0160e11b95945050505050565b600280540361075d5760405162461bcd60e51b81526004016101ae90612ace565b6002805561076a81611377565b506001600255565b61077a611302565b6107965760405162461bcd60e51b81526004016101ae90612b05565b6000600960006001600360019054906101000a90046001600160401b03166107be9190612aa7565b6001600160401b03168152602080820192909252604090810160002081516080810183528154815260018201549381018490526002820154928101929092526003015460608201529150820361084a5760405162461bcd60e51b81526020600482015260116024820152702932bbb0b932103ab731b430b733b2b21760791b60448201526064016101ae565b80516108569083611596565b602080820151604080519182529181018490527f243c4656edc72b2c7ec8575d464d955b2f42c1b205960c6c2fb7eecda5419cf691015b60405180910390a15050565b60028054036108ba5760405162461bcd60e51b81526004016101ae90612ace565b600280556108c661169b565b6001600255565b600581815481106108dd57600080fd5b6000918252602090912001546001600160a01b0316905081565b6108ff611302565b61091b5760405162461bcd60e51b81526004016101ae90612b05565b6000600960006001600360019054906101000a90046001600160401b03166109439190612aa7565b6001600160401b031681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050806000015182036109d95760405162461bcd60e51b81526020600482015260146024820152732a34b6b296bab734ba103ab731b430b733b2b21760611b60448201526064016101ae565b6109e7828260200151611596565b805160408051918252602082018490527fd968de290ed68f978b9e4816f7d4be9ef46189fe8eeb3eeb86199e7229cf2de0910161088d565b6001546001600160a01b031690565b610a36611302565b610a5357604051639f7f092560e01b815260040160405180910390fd5b6106dd816117c9565b60048181548110610a6c57600080fd5b600091825260209091200154905081565b6002805403610a9e5760405162461bcd60e51b81526004016101ae90612ace565b600280556106a68282611898565b6060816001600160401b03811115610ac657610ac66128b7565b604051908082528060200260200182016040528015610af957816020015b6060815260200190600190039081610ae45790505b509050336000805b84811015610c08578115610b8057610b5e30878784818110610b2557610b25612b2d565b9050602002810190610b379190612b43565b86604051602001610b4a93929190612b89565b604051602081830303815290604052611ccf565b848281518110610b7057610b70612b2d565b6020026020010181905250610c00565b610be230878784818110610b9657610b96612b2d565b9050602002810190610ba89190612b43565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611ccf92505050565b848281518110610bf457610bf4612b2d565b60200260200101819052505b600101610b01565b50505092915050565b60606000806004805480602002602001604051908101604052809291908181526020018280548015610c6257602002820191906000526020600020905b815481526020019060010190808311610c4e575b50505050509050600081516001600160401b03811115610c8457610c846128b7565b604051908082528060200260200182016040528015610cad578160200160208202803683370190505b5082519091506000805b82811015610d6c57876001600160a01b031660086000878481518110610cdf57610cdf612b2d565b6020026020010151815260200190815260200160002060009054906101000a90046001600160a01b03166001600160a01b031614848281518110610d2557610d25612b2d565b602002602001019015159081151581525050838181518110610d4957610d49612b2d565b602002602001015115610d6457610d61600183612baa565b91505b600101610cb7565b50806001600160401b03811115610d8557610d856128b7565b604051908082528060200260200182016040528015610dae578160200160208202803683370190505b5095506000805b83811015610e2957848181518110610dcf57610dcf612b2d565b602002602001015115610e2157858181518110610dee57610dee612b2d565b6020026020010151888381518110610e0857610e08612b2d565b6020908102919091010152610e1e600183612baa565b91505b600101610db5565b50610e3388611cfb565b95505050505050915091565b6002805403610e605760405162461bcd60e51b81526004016101ae90612ace565b6002805561076a81611d76565b6000600960006001600360019054906101000a90046001600160401b0316610e959190612aa7565b6001600160401b0316815260200190815260200160002060000154905090565b60008054610ec290612bbd565b80601f0160208091040260200160405190810160405280929190818152602001828054610eee90612bbd565b8015610f3b5780601f10610f1057610100808354040283529160200191610f3b565b820191906000526020600020905b815481529060010190602001808311610f1e57829003601f168201915b505050505081565b806001600160401b038116600003610f905760405162461bcd60e51b815260206004820152601060248201526f5374616b696e67203020746f6b656e7360801b60448201526064016101ae565b336000908152600760205260409020547f0000000000000000000000000000000000000000000000000000000000000000906001600160401b031615610fde57610fd933611e1d565b61109c565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018054336001600160a01b0319909116811790915560009081526007602052604090208054426001600160801b03908116600160801b02911617905560035461106391906001600160401b0361010090910416612aa7565b33600090815260076020526040902080546001600160401b0392909216600160401b02600160401b600160801b03199092169190911790555b60005b826001600160401b031681101561125b576003805460ff191660021790556001600160a01b0382166342842e0e6110d33390565b308888868181106110e6576110e6612b2d565b905060200201356040518463ffffffff1660e01b815260040161110b93929190612bf7565b600060405180830381600087803b15801561112557600080fd5b505af1158015611139573d6000803e3d6000fd5b50506003805460ff191660011790555061115290503390565b6008600087878581811061116857611168612b2d565b90506020020135815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600660008686848181106111b7576111b7612b2d565b602090810292909201358352508101919091526040016000205460ff16611253576001600660008787858181106111f0576111f0612b2d565b90506020020135815260200190815260200160002060006101000a81548160ff021916908315150217905550600485858381811061123057611230612b2d565b835460018101855560009485526020948590209190940292909201359190920155505b60010161109f565b5033600090815260076020526040812080548492906112849084906001600160401b0316612c1b565b92506101000a8154816001600160401b0302191690836001600160401b0316021790555083836040516112b8929190612c3b565b60405180910390206112c73390565b6001600160a01b03167f540cd34f06460fd67aeca9d19e0a56cd3a7c1cde8dc2263f265b68b2ef3495d260405160405180910390a350505050565b600061130c610a1f565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b61137f610a1f565b6001600160a01b0316336001600160a01b0316146113af5760405162461bcd60e51b81526004016101ae90612b05565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461141b577f000000000000000000000000000000000000000000000000000000000000000061143d565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161146d91906128a3565b602060405180830381865afa15801561148a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ae9190612c64565b90506114fd7f00000000000000000000000000000000000000000000000000000000000000003330867f0000000000000000000000000000000000000000000000000000000000000000611ef1565b600081836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161152c91906128a3565b602060405180830381865afa158015611549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156d9190612c64565b6115779190612c7d565b905080600a600082825461158b9190612baa565b909155505050505050565b816000036115dd5760405162461bcd60e51b8152602060048201526014602482015273074696d652d756e69742063616e277420626520360641b60448201526064016101ae565b6003805461010090046001600160401b031690600190816115fe8185612c1b565b82546001600160401b039182166101009390930a92830291909202199091161790555060408051608081018252848152602080820185815242838501908152600060608501818152878252600990945294909420925183555160018301559151600282015590516003909101558015611696574260096000611681600185612c7d565b81526020810191909152604001600020600301555b505050565b60006116a633612046565b336000908152600760205260409020600101546116c39190612baa565b9050806000036117025760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b60448201526064016101ae565b3360009081526007602052604081208054426001600160801b03908116600160801b02911617815560019081019190915560035461174e919061010090046001600160401b0316612aa7565b33600081815260076020526040902080546001600160401b0393909316600160401b02600160401b600160801b03199093169290921790915561179190826121d2565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250565b60008080546117d790612bbd565b80601f016020809104026020016040519081016040528092919081815260200182805461180390612bbd565b80156118505780601f1061182557610100808354040283529160200191611850565b820191906000526020600020905b81548152906001019060200180831161183357829003601f168201915b5050505050905081600090816118669190612ce0565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161088d929190612d9f565b336000908152600760205260408120546001600160401b03908116918391821690036118fd5760405162461bcd60e51b81526020600482015260146024820152735769746864726177696e67203020746f6b656e7360601b60448201526064016101ae565b806001600160401b03168210156119555760405162461bcd60e51b815260206004820152601c60248201527b15da5d1a191c985dda5b99c81b5bdc99481d1a185b881cdd185ad95960221b60448201526064016101ae565b7f000000000000000000000000000000000000000000000000000000000000000061197f33611e1d565b816001600160401b03168303611ad757600060058054806020026020016040519081016040528092919081815260200182805480156119e757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116119c9575b5050505050905060005b8151811015611ad457336001600160a01b0316828281518110611a1657611a16612b2d565b60200260200101516001600160a01b031603611acc578160018351611a3b9190612c7d565b81518110611a4b57611a4b612b2d565b602002602001015160058281548110611a6657611a66612b2d565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506005805480611aa557611aa5612dcd565b600082815260209020810160001990810180546001600160a01b0319169055019055611ad4565b6001016119f1565b50505b3360009081526007602052604081208054849290611aff9084906001600160401b0316612aa7565b92506101000a8154816001600160401b0302191690836001600160401b0316021790555060005b826001600160401b0316811015611c73573360086000888885818110611b4e57611b4e612b2d565b60209081029290920135835250810191909152604001600020546001600160a01b031614611bab5760405162461bcd60e51b815260206004820152600a6024820152692737ba1039ba30b5b2b960b11b60448201526064016101ae565b600060086000888885818110611bc357611bc3612b2d565b6020908102929092013583525081019190915260400160002080546001600160a01b0319166001600160a01b0392831617905582166342842e0e3033898986818110611c1157611c11612b2d565b905060200201356040518463ffffffff1660e01b8152600401611c3693929190612bf7565b600060405180830381600087803b158015611c5057600080fd5b505af1158015611c64573d6000803e3d6000fd5b50505050806001019050611b26565b508484604051611c84929190612c3b565b6040518091039020611c933390565b6001600160a01b03167f09ba0ae49142860d7eec1f3ce54722d70b60910facbe018cccb1099e4e84755c60405160405180910390a35050505050565b6060611cf48383604051806060016040528060278152602001612e7160279139612288565b9392505050565b6001600160a01b0381166000908152600760205260408120546001600160401b03168103611d4257506001600160a01b031660009081526007602052604090206001015490565b611d4b82612046565b6001600160a01b0383166000908152600760205260409020600101546106299190612baa565b919050565b611d7e610a1f565b6001600160a01b0316336001600160a01b031614611dae5760405162461bcd60e51b81526004016101ae90612b05565b600a548111611dca5780600a54611dc59190612c7d565b611dcd565b60005b600a556106dd7f00000000000000000000000000000000000000000000000000000000000000003033847f0000000000000000000000000000000000000000000000000000000000000000611ef1565b6000611e2882612046565b6001600160a01b038316600090815260076020526040812060010180549293508392909190611e58908490612baa565b90915550506001600160a01b038216600090815260076020526040902080546001600160801b03428116600160801b029116179055600354611eab906001906001600160401b0361010090910416612aa7565b6001600160a01b03909216600090815260076020526040902080546001600160401b0393909316600160401b02600160401b600160801b03199093169290921790915550565b811561203f5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0386160161203357306001600160a01b03851603611f9657604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611f6e57600080fd5b505af1158015611f82573d6000803e3d6000fd5b50505050611f91838383612300565b61203f565b306001600160a01b0384160361202857348214611fcf576040516303e085f960e01b8152346004820152602481018390526044016101ae565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561200a57600080fd5b505af115801561201e573d6000803e3d6000fd5b505050505061203f565b611f91838383612300565b61203f858585856123cb565b5050505050565b6001600160a01b0381166000908152600760209081526040808320815160808101835281546001600160401b038082168352600160401b82048116958301869052600160801b9091046001600160801b031693820193909352600190910154606082015260035490929161010090910416815b818110156121c95760008181526009602090815260408083208151608081018352815481526001820154938101939093526002810154918301919091526003015460608201529084830361211a5785604001516001600160801b0316612120565b81604001515b905060008260600151600003612136574261213c565b82606001515b905060008061217289600001516001600160401b0316858561215e9190612c7d565b6121689190612de3565b8660200151612423565b915091506000806121928c88600001518561218d9190612e10565b61246e565b915091508380156121a05750815b6121aa578b6121ac565b805b9b50505050505050506001816121c29190612baa565b90506120b9565b50505050919050565b600a5481111561221f5760405162461bcd60e51b81526020600482015260186024820152774e6f7420656e6f7567682072657761726420746f6b656e7360401b60448201526064016101ae565b80600a60008282546122319190612c7d565b9091555061228490507f00000000000000000000000000000000000000000000000000000000000000003084847f0000000000000000000000000000000000000000000000000000000000000000611ef1565b5050565b6060600080856001600160a01b0316856040516122a59190612e32565b600060405180830381855af49150503d80600081146122e0576040519150601f19603f3d011682016040523d82523d6000602084013e6122e5565b606091505b50915091506122f686838387612489565b9695505050505050565b6000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461234d576040519150601f19603f3d011682016040523d82523d6000602084013e612352565b606091505b50509050806123c557816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561239657600080fd5b505af11580156123aa573d6000803e3d6000fd5b506123c5935050506001600160a01b0384169050858561250a565b50505050565b816001600160a01b0316836001600160a01b031603156123c557306001600160a01b0384160361240e576124096001600160a01b038516838361250a565b6123c5565b6123c56001600160a01b03851684848461256d565b6000808360000361243a5750600190506000612467565b8383028385828161244d5761244d612dfa565b0414612460576000809250925050612467565b6001925090505b9250929050565b60008083830184811015612460576000809250925050612467565b606083156124f85782516000036124f1576001600160a01b0385163b6124f15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101ae565b5081612502565b612502838361258e565b949350505050565b6040516001600160a01b03831660248201526044810182905261169690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526125b8565b6123c5846323b872dd60e01b85858560405160240161253693929190612bf7565b81511561259e5781518083602001fd5b8060405162461bcd60e51b81526004016101ae9190612a7e565b600061260d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661268a9092919063ffffffff16565b805190915015611696578080602001905181019061262b9190612e4e565b6116965760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101ae565b6060612502848460008585600080866001600160a01b031685876040516126b19190612e32565b60006040518083038185875af1925050503d80600081146126ee576040519150601f19603f3d011682016040523d82523d6000602084013e6126f3565b606091505b509150915061270487838387612489565b979650505050505050565b60006020828403121561272157600080fd5b81356001600160e01b031981168114611cf457600080fd5b60008083601f84011261274b57600080fd5b5081356001600160401b0381111561276257600080fd5b6020830191508360208260051b850101111561246757600080fd5b6000806020838503121561279057600080fd5b82356001600160401b038111156127a657600080fd5b6127b285828601612739565b90969095509350505050565b80356001600160a01b0381168114611d7157600080fd5b6000602082840312156127e757600080fd5b611cf4826127be565b60008060008060006080868803121561280857600080fd5b612811866127be565b945061281f602087016127be565b93506040860135925060608601356001600160401b038082111561284257600080fd5b818801915088601f83011261285657600080fd5b81358181111561286557600080fd5b89602082850101111561287757600080fd5b9699959850939650602001949392505050565b60006020828403121561289c57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156128df57600080fd5b81356001600160401b03808211156128f657600080fd5b818401915084601f83011261290a57600080fd5b81358181111561291c5761291c6128b7565b604051601f8201601f19908116603f01168101908382118183101715612944576129446128b7565b8160405282815287602084870101111561295d57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b83811015612998578181015183820152602001612980565b50506000910152565b600081518084526129b981602086016020860161297d565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015612a2457603f19888603018452612a128583516129a1565b945092850192908501906001016129f6565b5092979650505050505050565b604080825283519082018190526000906020906060840190828701845b82811015612a6a57815184529284019290840190600101612a4e565b505050602093909301939093525092915050565b602081526000611cf460208301846129a1565b634e487b7160e01b600052601160045260246000fd5b6001600160401b03828116828216039080821115612ac757612ac7612a91565b5092915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112612b5a57600080fd5b8301803591506001600160401b03821115612b7457600080fd5b60200191503681900382131561246757600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b8082018082111561062957610629612a91565b600181811c90821680612bd157607f821691505b602082108103612bf157634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160401b03818116838216019080821115612ac757612ac7612a91565b60006001600160fb1b03831115612c5157600080fd5b8260051b80858437919091019392505050565b600060208284031215612c7657600080fd5b5051919050565b8181038181111561062957610629612a91565b601f821115611696576000816000526020600020601f850160051c81016020861015612cb95750805b601f850160051c820191505b81811015612cd857828155600101612cc5565b505050505050565b81516001600160401b03811115612cf957612cf96128b7565b612d0d81612d078454612bbd565b84612c90565b602080601f831160018114612d425760008415612d2a5750858301515b600019600386901b1c1916600185901b178555612cd8565b600085815260208120601f198616915b82811015612d7157888601518255948401946001909101908401612d52565b5085821015612d8f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000612db260408301856129a1565b8281036020840152612dc481856129a1565b95945050505050565b634e487b7160e01b600052603160045260246000fd5b808202811582820484141761062957610629612a91565b634e487b7160e01b600052601260045260246000fd5b600082612e2d57634e487b7160e01b600052601260045260246000fd5b500490565b60008251612e4481846020870161297d565b9190910192915050565b600060208284031215612e6057600080fd5b81518015158114611cf457600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205b24aa829a995643b88c62b703235c4f1701e9d0ca4e5bc1469c926e10d3d21b64736f6c63430008170033";

type Staking721BaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Staking721BaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking721Base__factory extends ContractFactory {
  constructor(...args: Staking721BaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _defaultAdmin: string,
    _timeUnit: BigNumberish,
    _rewardsPerUnitTime: BigNumberish,
    _stakingToken: string,
    _rewardToken: string,
    _nativeTokenWrapper: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking721Base> {
    return super.deploy(
      _defaultAdmin,
      _timeUnit,
      _rewardsPerUnitTime,
      _stakingToken,
      _rewardToken,
      _nativeTokenWrapper,
      overrides || {}
    ) as Promise<Staking721Base>;
  }
  override getDeployTransaction(
    _defaultAdmin: string,
    _timeUnit: BigNumberish,
    _rewardsPerUnitTime: BigNumberish,
    _stakingToken: string,
    _rewardToken: string,
    _nativeTokenWrapper: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _defaultAdmin,
      _timeUnit,
      _rewardsPerUnitTime,
      _stakingToken,
      _rewardToken,
      _nativeTokenWrapper,
      overrides || {}
    );
  }
  override attach(address: string): Staking721Base {
    return super.attach(address) as Staking721Base;
  }
  override connect(signer: Signer): Staking721Base__factory {
    return super.connect(signer) as Staking721Base__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Staking721BaseInterface {
    return new utils.Interface(_abi) as Staking721BaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking721Base {
    return new Contract(address, _abi, signerOrProvider) as Staking721Base;
  }
}
