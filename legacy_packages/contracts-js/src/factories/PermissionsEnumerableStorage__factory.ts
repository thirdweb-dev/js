/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PermissionsEnumerableStorage,
  PermissionsEnumerableStorageInterface,
} from "../PermissionsEnumerableStorage";

const _abi = [
  {
    type: "function",
    name: "PERMISSIONS_ENUMERABLE_STORAGE_POSITION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
];

const _bytecode =
  "0x61010361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063871ef69d146038575b600080fd5b603e6050565b60405190815260200160405180910390f35b60ff19607c60017f0c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0c60a7565b604051602001608d91815260200190565b604051602081830303815290604052805190602001201681565b8181038181111560c757634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122088461caf52bcdd4c9c9b127ca6a2ed615c5f4c10e33e42de4e6888419d4094d864736f6c63430008170033";

type PermissionsEnumerableStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PermissionsEnumerableStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PermissionsEnumerableStorage__factory extends ContractFactory {
  constructor(...args: PermissionsEnumerableStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PermissionsEnumerableStorage> {
    return super.deploy(
      overrides || {}
    ) as Promise<PermissionsEnumerableStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PermissionsEnumerableStorage {
    return super.attach(address) as PermissionsEnumerableStorage;
  }
  override connect(signer: Signer): PermissionsEnumerableStorage__factory {
    return super.connect(signer) as PermissionsEnumerableStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PermissionsEnumerableStorageInterface {
    return new utils.Interface(_abi) as PermissionsEnumerableStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PermissionsEnumerableStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PermissionsEnumerableStorage;
  }
}
