/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RouterImmutable,
  RouterImmutableInterface,
} from "../RouterImmutable";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_pluginMap",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "_getPluginForFunction",
    inputs: [
      {
        name: "_selector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addPlugin",
    inputs: [
      {
        name: "_plugin",
        type: "tuple",
        internalType: "struct IPluginMap.Plugin",
        components: [
          {
            name: "functionSelector",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "functionSignature",
            type: "string",
            internalType: "string",
          },
          {
            name: "pluginAddress",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllFunctionsOfPlugin",
    inputs: [
      {
        name: "_pluginAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "registered",
        type: "bytes4[]",
        internalType: "bytes4[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllPlugins",
    inputs: [],
    outputs: [
      {
        name: "registered",
        type: "tuple[]",
        internalType: "struct IPluginMap.Plugin[]",
        components: [
          {
            name: "functionSelector",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "functionSignature",
            type: "string",
            internalType: "string",
          },
          {
            name: "pluginAddress",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPluginForFunction",
    inputs: [
      {
        name: "_selector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pluginMap",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removePlugin",
    inputs: [
      {
        name: "_selector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updatePlugin",
    inputs: [
      {
        name: "_plugin",
        type: "tuple",
        internalType: "struct IPluginMap.Plugin",
        components: [
          {
            name: "functionSelector",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "functionSignature",
            type: "string",
            internalType: "string",
          },
          {
            name: "pluginAddress",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "PluginAdded",
    inputs: [
      {
        name: "functionSelector",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
      {
        name: "pluginAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PluginRemoved",
    inputs: [
      {
        name: "functionSelector",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
      {
        name: "pluginAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PluginSet",
    inputs: [
      {
        name: "functionSelector",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
      {
        name: "functionSignature",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "pluginAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PluginUpdated",
    inputs: [
      {
        name: "functionSelector",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
      {
        name: "oldPluginAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPluginAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161177138038061177183398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516116cb6100a66000396000818160ca015281816102a50152818161043a015281816106f30152610aca01526116cb6000f3fe6080604052600436106100855760003560e01c806301ffc9a71461015a5780631ab6b7051461018f5780634cb5d8fd146101af5780635c573f2e146101cf5780636b86400e146101fc578063a520a38a1461021e578063a5342fdf1461024b578063ac9650d814610266578063b48912da14610293578063c511f8fb146102c75761008c565b3661008c57005b60006100a36000356001600160e01b0319166102e2565b90506001600160a01b03811661014f5760405163529051c560e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a520a38a9061010b906001600160e01b03196000351690600401610e8f565b602060405180830381865afa158015610128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014c9190610ec9565b90505b6101588161031c565b005b34801561016657600080fd5b5061017a610175366004610efc565b610340565b60405190151581526020015b60405180910390f35b34801561019b57600080fd5b506101586101aa366004610fb9565b610377565b3480156101bb57600080fd5b506101586101ca366004610fb9565b6103c0565b3480156101db57600080fd5b506101ef6101ea366004611089565b6103fe565b60405161018691906110a6565b34801561020857600080fd5b506102116106d9565b6040516101869190611144565b34801561022a57600080fd5b5061023e610239366004610efc565b610a97565b60405161018691906111dc565b34801561025757600080fd5b506101586101ca366004610efc565b34801561027257600080fd5b506102866102813660046111f0565b610b4e565b6040516101869190611264565b34801561029f57600080fd5b5061023e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d357600080fd5b5061023e6102e2366004610efc565b6000806102ed610cb3565b6001600160e01b031990931660009081526003909301602052505060409020600201546001600160a01b031690565b3660008037600080366000845af43d6000803e80801561033b573d6000f35b3d6000fd5b60006001600160e01b0319821663f337402760e01b148061037157506301ffc9a760e01b6001600160e01b03198316145b92915050565b60405162461bcd60e51b8152602060048201526016602482015275149bdd5d195c8e88139bdd08185d5d1a1bdc9a5e995960521b60448201526064015b60405180910390fd5b50565b60405162461bcd60e51b815260206004820152601360248201527213585c0e88139bdd08185d5d1a1bdc9a5e9959606a1b60448201526064016103b4565b6060600061040a610cb3565b6001600160a01b0380851660009081526002830160205260408082209051632e2b9f9760e11b81529394509290917f00000000000000000000000000000000000000000000000000000000000000001690635c573f2e9061046f9088906004016111dc565b600060405180830381865afa15801561048c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104b491908101906112eb565b80519091506000816104c585610cd7565b6104cf919061139a565b905060005b82811015610567576105128482815181106104f1576104f16113ad565b60200260200101516001600160e01b03191686610ce190919063ffffffff16565b15610555576105226001836113c3565b9150600060e01b84828151811061053b5761053b6113ad565b6001600160e01b0319909216602092830291909101909101525b61056060018261139a565b90506104d4565b50806001600160401b0381111561058057610580610f19565b6040519080825280602002602001820160405280156105a9578160200160208202803683370190505b5095506000805b8381101561064a5784516000908690839081106105cf576105cf6113ad565b60200260200101516001600160e01b03191614610638578481815181106105f8576105f86113ad565b602002602001015188838061060c906113d6565b94508151811061061e5761061e6113ad565b6001600160e01b0319909216602092830291909101909101525b61064360018261139a565b90506105b0565b5061065485610cd7565b925060005b838110156106cd576001600160a01b038916600090815260028801602052604090206106859082610cf9565b8883610690816113d6565b9450815181106106a2576106a26113ad565b6001600160e01b0319909216602092830291909101909101526106c660018261139a565b9050610659565b50505050505050919050565b606060006106e5610cb3565b9050600081600001905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636b86400e6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561074f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261077791908101906113ef565b9050600061078483610cd7565b82519091506000610795828461139a565b905060005b838110156108515760005b8381101561083e578581815181106107bf576107bf6113ad565b6020908102919091010151516001600160e01b0319166107df8884610cf9565b6001600160e01b0319160361082c576107f96001846113c3565b9250600060e01b868281518110610812576108126113ad565b60209081029190910101516001600160e01b031990911690525b61083760018261139a565b90506107a5565b5061084a60018261139a565b905061079a565b50806001600160401b0381111561086a5761086a610f19565b6040519080825280602002602001820160405280156108ba57816020015b604080516060808201835260008083526020830191909152918101919091528152602001906001900390816108885790505b5096506000805b838110156109525785516000908790839081106108e0576108e06113ad565b6020026020010151600001516001600160e01b031916146109405785818151811061090d5761090d6113ad565b6020026020010151898381518110610927576109276113ad565b602090810291909101015261093d60018361139a565b91505b61094b60018261139a565b90506108c1565b5060005b84811015610a8c5760038801600061096e8984610cf9565b6001600160e01b031990811682526020808301939093526040918201600020825160608101909352805460e01b909116825260018101805492939192918401916109b79061152f565b80601f01602080910402602001604051908101604052809291908181526020018280546109e39061152f565b8015610a305780601f10610a0557610100808354040283529160200191610a30565b820191906000526020600020905b815481529060010190602001808311610a1357829003601f168201915b5050509183525050600291909101546001600160a01b031660209091015289518a9084908110610a6257610a626113ad565b6020908102919091010152610a7860018361139a565b9150610a8560018261139a565b9050610956565b505050505050505090565b600080610aa3836102e2565b90506001600160a01b038116610b455760405163529051c560e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a520a38a90610aff908690600401610e8f565b602060405180830381865afa158015610b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b409190610ec9565b610b47565b805b9392505050565b6060816001600160401b03811115610b6857610b68610f19565b604051908082528060200260200182016040528015610b9b57816020015b6060815260200190600190039081610b865790505b509050336000805b84811015610caa578115610c2257610c0030878784818110610bc757610bc76113ad565b9050602002810190610bd99190611569565b86604051602001610bec939291906115b6565b604051602081830303815290604052610d05565b848281518110610c1257610c126113ad565b6020026020010181905250610ca2565b610c8430878784818110610c3857610c386113ad565b9050602002810190610c4a9190611569565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d0592505050565b848281518110610c9657610c966113ad565b60200260200101819052505b600101610ba3565b50505092915050565b7f012ef321094c8c682aa635dfdfcd754624a7473f08ad6ac415bb7f35eb12a10090565b6000610371825490565b60008181526001830160205260408120541515610b47565b6000610b478383610d2a565b6060610b47838360405180606001604052806027815260200161166f60279139610d54565b6000826000018281548110610d4157610d416113ad565b9060005260206000200154905092915050565b6060600080856001600160a01b031685604051610d7191906115d7565b600060405180830381855af49150503d8060008114610dac576040519150601f19603f3d011682016040523d82523d6000602084013e610db1565b606091505b5091509150610dc286838387610dcc565b9695505050505050565b60608315610e3b578251600003610e34576001600160a01b0385163b610e345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103b4565b5081610e45565b610e458383610e4d565b949350505050565b815115610e5d5781518083602001fd5b8060405162461bcd60e51b81526004016103b4919061165b565b80821115610e8b5760008155600101610e77565b5090565b6001600160e01b031991909116815260200190565b6001600160a01b03811681146103bd57600080fd5b8051610ec481610ea4565b919050565b600060208284031215610edb57600080fd5b8151610b4781610ea4565b6001600160e01b0319811681146103bd57600080fd5b600060208284031215610f0e57600080fd5b8135610b4781610ee6565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715610f5157610f51610f19565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610f7f57610f7f610f19565b604052919050565b60006001600160401b03821115610fa057610fa0610f19565b50601f01601f191660200190565b8035610ec481610ea4565b60006020808385031215610fcc57600080fd5b82356001600160401b0380821115610fe357600080fd5b9084019060608287031215610ff757600080fd5b610fff610f2f565b823561100a81610ee6565b8152828401358281111561101d57600080fd5b83019150601f8201871361103057600080fd5b813561104361103e82610f87565b610f57565b818152888683860101111561105757600080fd5b818685018783013760008683830101528086840152505061107a60408401610fae565b60408201529695505050505050565b60006020828403121561109b57600080fd5b8135610b4781610ea4565b6020808252825182820181905260009190848201906040850190845b818110156110e85783516001600160e01b031916835292840192918401916001016110c2565b50909695505050505050565b60005b8381101561110f5781810151838201526020016110f7565b50506000910152565b600081518084526111308160208601602086016110f4565b601f01601f19169290920160200192915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b838110156111ce57888303603f19018552815180516001600160e01b0319168452878101516060898601819052906111a782870182611118565b928901516001600160a01b031695890195909552509487019492509086019060010161116d565b509098975050505050505050565b6001600160a01b0391909116815260200190565b6000806020838503121561120357600080fd5b82356001600160401b038082111561121a57600080fd5b818501915085601f83011261122e57600080fd5b81358181111561123d57600080fd5b8660208260051b850101111561125257600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b828110156112bb57603f198886030184526112a9858351611118565b9450928501929085019060010161128d565b5092979650505050505050565b60006001600160401b038211156112e1576112e1610f19565b5060051b60200190565b600060208083850312156112fe57600080fd5b82516001600160401b0381111561131457600080fd5b8301601f8101851361132557600080fd5b805161133361103e826112c8565b81815260059190911b8201830190838101908783111561135257600080fd5b928401925b8284101561137957835161136a81610ee6565b82529284019290840190611357565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037157610371611384565b634e487b7160e01b600052603260045260246000fd5b8181038181111561037157610371611384565b6000600182016113e8576113e8611384565b5060010190565b6000602080838503121561140257600080fd5b82516001600160401b038082111561141957600080fd5b818501915085601f83011261142d57600080fd5b815161143b61103e826112c8565b81815260059190911b8301840190848101908883111561145a57600080fd5b8585015b838110156115225780518581111561147557600080fd5b86016060818c03601f1901121561148c5760008081fd5b611494610f2f565b888201516114a181610ee6565b8152604082810151888111156114b75760008081fd5b8301603f81018e136114c95760008081fd5b8a8101516114d961103e82610f87565b8181528f848385010111156114ee5760008081fd5b6114fd828e83018686016110f4565b848d015250611510905060608401610eb9565b9082015284525091860191860161145e565b5098975050505050505050565b600181811c9082168061154357607f821691505b60208210810361156357634e487b7160e01b600052602260045260246000fd5b50919050565b6000808335601e1984360301811261158057600080fd5b8301803591506001600160401b0382111561159a57600080fd5b6020019150368190038213156115af57600080fd5b9250929050565b8284823760609190911b6001600160601b0319169101908152601401919050565b600082516115e98184602087016110f4565b9190910192915050565b81811015611606578281556001016115f3565b505050505050565b8281101561162d5788860151825594840194600190910190840161160e565b508582101561164b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000610b47602083018461111856fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202fb188328076b91e4a027e2ae2c7fb85791b0d5519b9af2fe8e9b2b2c7db854c64736f6c63430008170033";

type RouterImmutableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterImmutableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RouterImmutable__factory extends ContractFactory {
  constructor(...args: RouterImmutableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pluginMap: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RouterImmutable> {
    return super.deploy(
      _pluginMap,
      overrides || {}
    ) as Promise<RouterImmutable>;
  }
  override getDeployTransaction(
    _pluginMap: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pluginMap, overrides || {});
  }
  override attach(address: string): RouterImmutable {
    return super.attach(address) as RouterImmutable;
  }
  override connect(signer: Signer): RouterImmutable__factory {
    return super.connect(signer) as RouterImmutable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterImmutableInterface {
    return new utils.Interface(_abi) as RouterImmutableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RouterImmutable {
    return new Contract(address, _abi, signerOrProvider) as RouterImmutable;
  }
}
