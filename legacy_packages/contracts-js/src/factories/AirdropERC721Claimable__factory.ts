/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AirdropERC721Claimable,
  AirdropERC721ClaimableInterface,
} from "../AirdropERC721Claimable";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "airdropTokenAddress",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "availableAmount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claim",
    inputs: [
      {
        name: "_receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "_quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_proofs",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
      {
        name: "_proofMaxQuantityForWallet",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "expirationTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_trustedForwarders",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_tokenOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_airdropTokenAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_tokenIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "_expirationTimestamp",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_openClaimLimitPerWallet",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_merkleRoot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isTrustedForwarder",
    inputs: [
      {
        name: "forwarder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "merkleRoot",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "nextIndex",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "openClaimLimitPerWallet",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "supplyClaimedByWallet",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenIds",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verifyClaim",
    inputs: [
      {
        name: "_claimer",
        type: "address",
        internalType: "address",
      },
      {
        name: "_quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_proofs",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
      {
        name: "_proofMaxQuantityForWallet",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokensClaimed",
    inputs: [
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "quantityClaimed",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611298806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c8063097b3cdb146100bf5780630ce56cac146100d45780632eb4a7ab146101075780633b4b57b0146101105780633fb9baee14610123578063572b6c051461012c57806391f7cfb91461014f5780639f43ddd214610158578063a3e6761014610161578063ac9650d81461018c578063b2c0ee77146101ac578063b73e0e8b146101bf578063d58778d6146101d2578063fc7e9c6f146101e5575b600080fd5b6100d26100cd366004610d91565b6101ee565b005b6100f46100e2366004610df2565b609f6020526000908152604090205481565b6040519081526020015b60405180910390f35b6100f4609e5481565b6100d261011e366004610d91565b6103ae565b6100f4609d5481565b61013f61013a366004610df2565b61043e565b60405190151581526020016100fe565b6100f4609b5481565b6100f4609c5481565b609854610174906001600160a01b031681565b6040516001600160a01b0390911681526020016100fe565b61019f61019a366004610e0d565b61045c565b6040516100fe9190610e9e565b6100d26101ba366004610fda565b6105d9565b609754610174906001600160a01b031681565b6100f46101e03660046110d8565b610759565b6100f4609a5481565b609e546000901561024557609e546040516001600160601b0319606089901b166020820152603481018490526102419186918691906054016040516020818303038152906040528051906020012061077a565b5090505b6001600160a01b0386166000908152609f6020526040902054856102a75760405162461bcd60e51b8152602060048201526014602482015273436c61696d696e67207a65726f20746f6b656e7360601b60448201526064015b60405180910390fd5b609b548611156102f55760405162461bcd60e51b815260206004820152601960248201527832bc31b2b2b2399030bb30b4b630b13632903a37b5b2b7399760391b604482015260640161029e565b609c5480158061030457508042105b6103435760405162461bcd60e51b815260206004820152601060248201526f30b4b9323937b81032bc3834b932b21760811b604482015260640161029e565b60008361035257609d54610354565b845b905080610361848a611107565b11156103a35760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21038bab0b73a34ba3c9760791b604482015260640161029e565b505050505050505050565b6103b6610805565b60006103c061085e565b90506103cf81868686866101ee565b6103d9868661086d565b856001600160a01b03166103eb61085e565b6001600160a01b03167fa86305abc2db271df4609aa86a8d044bc11fb36939841bfdad6c1ab2b26e94718760405161042591815260200190565b60405180910390a35061043760018055565b5050505050565b6001600160a01b031660009081526065602052604090205460ff1690565b6060816001600160401b0381111561047657610476610f02565b6040519080825280602002602001820160405280156104a957816020015b60608152602001906001900390816104945790505b50905060006104b661085e565b9050336001600160a01b038216141560005b848110156105cf57811561054757610525308787848181106104ec576104ec61111a565b90506020028101906104fe9190611130565b8660405160200161051193929190611176565b604051602081830303815290604052610a09565b8482815181106105375761053761111a565b60200260200101819052506105c7565b6105a93087878481811061055d5761055d61111a565b905060200281019061056f9190611130565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a0992505050565b8482815181106105bb576105bb61111a565b60200260200101819052505b6001016104c8565b5050505b92915050565b600054610100900460ff16158080156105f95750600054600160ff909116105b8061061a575061060830610a35565b15801561061a575060005460ff166001145b61067d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161029e565b6000805460ff1916600117905580156106a0576000805461ff0019166101001790555b6106a8610a44565b6106b188610a75565b609880546001600160a01b03808a166001600160a01b031992831617909255609780549289169290911691909117905584516106f4906099906020880190610cca565b50609c849055609d839055609e8290558451609b55801561074f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6099818154811061076957600080fd5b600091825260209091200154905081565b6000808281805b878110156107f657610794600283611197565b915060008989838181106107aa576107aa61111a565b9050602002013590508084116107cf57600084815260208290526040902093506107ed565b600081815260208590526040902093506107ea600184611107565b92505b50600101610781565b50941496939550929350505050565b6002600154036108575760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161029e565b6002600155565b6000610868610ab0565b905090565b80609f600061087a61085e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546108a99190611107565b9250508190555080609b60008282546108c291906111ae565b9091555050609a5460998054604080516020808402820181019092528281526000939092909183018282801561091757602002820191906000526020600020905b815481526020019060010190808311610903575b50506097546098549495506001600160a01b039081169416925060009150505b858110156109f557826001600160a01b03166342842e0e83898789815181106109625761096261111a565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156109bc57600080fd5b505af11580156109d0573d6000803e3d6000fd5b505050506001856109e19190611107565b94506109ee600182611107565b9050610937565b505050609a91909155505050565b60018055565b6060610a2e838360405180606001604052806027815260200161123c60279139610ad2565b9392505050565b6001600160a01b03163b151590565b600054610100900460ff16610a6b5760405162461bcd60e51b815260040161029e906111c1565b610a73610b4a565b565b600054610100900460ff16610a9c5760405162461bcd60e51b815260040161029e906111c1565b610aa4610b71565b610aad81610b98565b50565b6000610abb3361043e565b15610acd575060131936013560601c90565b503390565b6060600080856001600160a01b031685604051610aef919061120c565b600060405180830381855af49150503d8060008114610b2a576040519150601f19603f3d011682016040523d82523d6000602084013e610b2f565b606091505b5091509150610b4086838387610c21565b9695505050505050565b600054610100900460ff16610a035760405162461bcd60e51b815260040161029e906111c1565b600054610100900460ff16610a735760405162461bcd60e51b815260040161029e906111c1565b600054610100900460ff16610bbf5760405162461bcd60e51b815260040161029e906111c1565b60005b8151811015610c1d57600160656000848481518110610be357610be361111a565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610bc2565b5050565b60608315610c8e578251600003610c8757610c3b85610a35565b610c875760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161029e565b5081610c98565b610c988383610ca0565b949350505050565b815115610cb05781518083602001fd5b8060405162461bcd60e51b815260040161029e9190611228565b828054828255906000526020600020908101928215610d05579160200282015b82811115610d05578251825591602001919060010190610cea565b50610d11929150610d15565b5090565b5b80821115610d115760008155600101610d16565b80356001600160a01b0381168114610d4157600080fd5b919050565b60008083601f840112610d5857600080fd5b5081356001600160401b03811115610d6f57600080fd5b6020830191508360208260051b8501011115610d8a57600080fd5b9250929050565b600080600080600060808688031215610da957600080fd5b610db286610d2a565b94506020860135935060408601356001600160401b03811115610dd457600080fd5b610de088828901610d46565b96999598509660600135949350505050565b600060208284031215610e0457600080fd5b610a2e82610d2a565b60008060208385031215610e2057600080fd5b82356001600160401b03811115610e3657600080fd5b610e4285828601610d46565b90969095509350505050565b60005b83811015610e69578181015183820152602001610e51565b50506000910152565b60008151808452610e8a816020860160208601610e4e565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015610ef557603f19888603018452610ee3858351610e72565b94509285019290850190600101610ec7565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610f4057610f40610f02565b604052919050565b60006001600160401b03821115610f6157610f61610f02565b5060051b60200190565b600082601f830112610f7c57600080fd5b81356020610f91610f8c83610f48565b610f18565b8083825260208201915060208460051b870101935086841115610fb357600080fd5b602086015b84811015610fcf5780358352918301918301610fb8565b509695505050505050565b600080600080600080600060e0888a031215610ff557600080fd5b87356001600160401b038082111561100c57600080fd5b818a0191508a601f83011261102057600080fd5b81356020611030610f8c83610f48565b82815260059290921b8401810191818101908e84111561104f57600080fd5b948201945b838610156110745761106586610d2a565b82529482019490820190611054565b9b5061108390508c8201610d2a565b9950505061109360408b01610d2a565b965060608a01359150808211156110a957600080fd5b506110b68a828b01610f6b565b979a969950949760808101359660a0820135965060c090910135945092505050565b6000602082840312156110ea57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156105d3576105d36110f1565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261114757600080fd5b8301803591506001600160401b0382111561116157600080fd5b602001915036819003821315610d8a57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b80820281158282048414176105d3576105d36110f1565b818103818111156105d3576105d36110f1565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000825161121e818460208701610e4e565b9190910192915050565b602081526000610a2e6020830184610e7256fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122098ea7d45b0c82633a46fd92e82921624f58e84f488e7d422bbc57ebba9a1a5ba64736f6c63430008170033";

type AirdropERC721ClaimableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropERC721ClaimableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropERC721Claimable__factory extends ContractFactory {
  constructor(...args: AirdropERC721ClaimableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AirdropERC721Claimable> {
    return super.deploy(overrides || {}) as Promise<AirdropERC721Claimable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AirdropERC721Claimable {
    return super.attach(address) as AirdropERC721Claimable;
  }
  override connect(signer: Signer): AirdropERC721Claimable__factory {
    return super.connect(signer) as AirdropERC721Claimable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropERC721ClaimableInterface {
    return new utils.Interface(_abi) as AirdropERC721ClaimableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AirdropERC721Claimable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AirdropERC721Claimable;
  }
}
