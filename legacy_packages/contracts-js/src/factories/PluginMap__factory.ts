/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PluginMap, PluginMapInterface, IPluginMap } from "../PluginMap";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_pluginsToAdd",
        type: "tuple[]",
        internalType: "struct IPluginMap.Plugin[]",
        components: [
          {
            name: "functionSelector",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "functionSignature",
            type: "string",
            internalType: "string",
          },
          {
            name: "pluginAddress",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllFunctionsOfPlugin",
    inputs: [
      {
        name: "_pluginAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "registered",
        type: "bytes4[]",
        internalType: "bytes4[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllPlugins",
    inputs: [],
    outputs: [
      {
        name: "_plugins",
        type: "tuple[]",
        internalType: "struct IPluginMap.Plugin[]",
        components: [
          {
            name: "functionSelector",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "functionSignature",
            type: "string",
            internalType: "string",
          },
          {
            name: "pluginAddress",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPluginForFunction",
    inputs: [
      {
        name: "_selector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "PluginSet",
    inputs: [
      {
        name: "functionSelector",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
      {
        name: "functionSignature",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "pluginAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d3f38038062000d3f8339810160408190526200003491620003ad565b805160005b8181101562000084576200006f8382815181106200005b576200005b62000543565b60200260200101516200008d60201b60201c565b6200007c60018262000559565b905062000039565b505050620006f6565b8051620000a7906000906001600160e01b0319166200028d565b620000f95760405162461bcd60e51b815260206004820152601460248201527f4d61703a2053656c6563746f722065786973747300000000000000000000000060448201526064015b60405180910390fd5b6020808201516040516200010e92016200057b565b604051602081830303815290604052805190602001206001600160e01b03191681600001516001600160e01b031916146200018c5760405162461bcd60e51b815260206004820152601760248201527f4d61703a20496e636f72726563742073656c6563746f720000000000000000006044820152606401620000f0565b80516001600160e01b03191660009081526003602090815260409091208251815463ffffffff191660e09190911c178155908201518291906001820190620001d590826200062a565b50604091820151600291820180546001600160a01b0319166001600160a01b03928316179055835184840151909116600090815260209290925291902062000227916001600160e01b0319166200028d565b5080604001516001600160a01b031681602001516040516200024a91906200057b565b604051908190038120835190916001600160e01b0319909116907f3773a9e2d436c841075ce219f31cf6a8f4947415b7ed528ab2e6ca69f4ee4d6f90600090a450565b60006200029b8383620002a4565b90505b92915050565b6000818152600183016020526040812054620002ed575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200029e565b5060006200029e565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715620003315762000331620002f6565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003625762000362620002f6565b604052919050565b60005b83811015620003875781810151838201526020016200036d565b50506000910152565b80516001600160a01b0381168114620003a857600080fd5b919050565b60006020808385031215620003c157600080fd5b82516001600160401b0380821115620003d957600080fd5b818501915085601f830112620003ee57600080fd5b815181811115620004035762000403620002f6565b8060051b6200041485820162000337565b91825283810185019185810190898411156200042f57600080fd5b86860192505b8383101562000536578251858111156200044e57600080fd5b8601601f196060828d0382011215620004675760008081fd5b620004716200030c565b828a01516001600160e01b0319811681146200048d5760008081fd5b815260408381015189811115620004a45760008081fd5b8401603f81018f13620004b75760008081fd5b8b8101518a811115620004ce57620004ce620002f6565b620004e08d86601f8401160162000337565b94508085528f8d8e83850101011115620004fa5760008081fd5b6200050b818e87018585016200036a565b5050828b830152620005206060850162000390565b9082015284525050918601919086019062000435565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b808201808211156200029e57634e487b7160e01b600052601160045260246000fd5b600082516200058f8184602087016200036a565b9190910192915050565b600181811c90821680620005ae57607f821691505b602082108103620005cf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000625576000816000526020600020601f850160051c81016020861015620006005750805b601f850160051c820191505b8181101562000621578281556001016200060c565b5050505b505050565b81516001600160401b03811115620006465762000646620002f6565b6200065e8162000657845462000599565b84620005d5565b602080601f8311600181146200069657600084156200067d5750858301515b600019600386901b1c1916600185901b17855562000621565b600085815260208120601f198616915b82811015620006c757888601518255948401946001909101908401620006a6565b5085821015620006e65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61063980620007066000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635c573f2e146100465780636b86400e1461006f578063a520a38a14610084575b600080fd5b610059610054366004610407565b6100af565b6040516100669190610430565b60405180910390f35b61007761018b565b604051610066919061047e565b610097610092366004610552565b610335565b6040516001600160a01b039091168152602001610066565b6001600160a01b0381166000908152600260205260408120606091906100d4906103c0565b9050806001600160401b038111156100ee576100ee61057c565b604051908082528060200260200182016040528015610117578160200160208202803683370190505b50915060005b81811015610184576001600160a01b038416600090815260026020526040902061014790826103ca565b83828151811061015957610159610592565b6001600160e01b03199092166020928302919091019091015261017d6001826105a8565b905061011d565b5050919050565b6060600061019960006103c0565b9050806001600160401b038111156101b3576101b361057c565b60405190808252806020026020018201604052801561020357816020015b604080516060808201835260008083526020830191909152918101919091528152602001906001900390816101d15790505b50915060005b8181101561033057600061021d81836103ca565b6001600160e01b0319808216600090815260036020908152604091829020825160608101909352805460e01b909316825260018301805494955091939084019190610267906105c9565b80601f0160208091040260200160405190810160405280929190818152602001828054610293906105c9565b80156102e05780601f106102b5576101008083540402835291602001916102e0565b820191906000526020600020905b8154815290600101906020018083116102c357829003601f168201915b5050509183525050600291909101546001600160a01b0316602090910152845185908490811061031257610312610592565b6020908102919091010152506103296001826105a8565b9050610209565b505090565b6001600160e01b031981166000908152600360205260408120600201546001600160a01b0316806103ba5760405162461bcd60e51b815260206004820152602560248201527f4d61703a204e6f20706c7567696e20617661696c61626c6520666f722073656c60448201526432b1ba37b960d91b606482015260840160405180910390fd5b92915050565b60006103ba825490565b60006103d683836103dd565b9392505050565b60008260000182815481106103f4576103f4610592565b9060005260206000200154905092915050565b60006020828403121561041957600080fd5b81356001600160a01b03811681146103d657600080fd5b6020808252825182820181905260009190848201906040850190845b818110156104725783516001600160e01b0319168352928401929184019160010161044c565b50909695505050505050565b600060208083018184528085518083526040925060408601915060408160051b8701018488016000805b8481101561054357898403603f19018652825180516001600160e01b03191685528881015160608a870181905281519087018190528491905b808310156104ff578183018c015188840160800152918b01916104e1565b608092508583828a0101528a84015193506105248b8901856001600160a01b03169052565b988b0198601f01601f19169690960101945050918701916001016104a8565b50919998505050505050505050565b60006020828403121561056457600080fd5b81356001600160e01b0319811681146103d657600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b808201808211156103ba57634e487b7160e01b600052601160045260246000fd5b600181811c908216806105dd57607f821691505b6020821081036105fd57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200fb33287e608b27421eeb034b5d246e30f6609d306af3c2cced6a9fa32d2bd8e64736f6c63430008170033";

type PluginMapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PluginMapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PluginMap__factory extends ContractFactory {
  constructor(...args: PluginMapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pluginsToAdd: IPluginMap.PluginStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PluginMap> {
    return super.deploy(_pluginsToAdd, overrides || {}) as Promise<PluginMap>;
  }
  override getDeployTransaction(
    _pluginsToAdd: IPluginMap.PluginStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pluginsToAdd, overrides || {});
  }
  override attach(address: string): PluginMap {
    return super.attach(address) as PluginMap;
  }
  override connect(signer: Signer): PluginMap__factory {
    return super.connect(signer) as PluginMap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PluginMapInterface {
    return new utils.Interface(_abi) as PluginMapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PluginMap {
    return new Contract(address, _abi, signerOrProvider) as PluginMap;
  }
}
