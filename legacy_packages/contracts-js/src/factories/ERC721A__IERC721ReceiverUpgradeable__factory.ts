/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ERC721A__IERC721ReceiverUpgradeable,
  ERC721A__IERC721ReceiverUpgradeableInterface,
} from "../ERC721A__IERC721ReceiverUpgradeable";

const _abi = [
  {
    type: "function",
    name: "onERC721Received",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
];

export class ERC721A__IERC721ReceiverUpgradeable__factory {
  static readonly abi = _abi;
  static createInterface(): ERC721A__IERC721ReceiverUpgradeableInterface {
    return new utils.Interface(
      _abi
    ) as ERC721A__IERC721ReceiverUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721A__IERC721ReceiverUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721A__IERC721ReceiverUpgradeable;
  }
}
