/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ForwarderChainlessDomain,
  ForwarderChainlessDomainInterface,
} from "../ForwarderChainlessDomain";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "req",
        type: "tuple",
        internalType: "struct ForwarderChainlessDomain.ForwardRequest",
        components: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "chainid",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getNonce",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verify",
    inputs: [
      {
        name: "req",
        type: "tuple",
        internalType: "struct ForwarderChainlessDomain.ForwardRequest",
        components: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "chainid",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
];

const _bytecode =
  "0x61012060405234801561001157600080fd5b50604080518082018252600f81526e23a9a73b19102337b93bb0b93232b960891b602080830191825283518085019094526005845264302e302e3160d81b908401528151902060c08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc19916381188560e08190529192917f91ab3d17e3a50a9d89e63fd30b92be7f5336b03b287bb946787a83a9d62a27666100ef81848460408051602081018590529081018390526060810182905230608082015260009060a0016040516020818303038152906040528051906020012090509392505050565b6080523060a052610100525061010492505050565b60805160a05160c05160e051610100516109d461014860003960006104a6015260006104f5015260006104d0015260006104540152600061047d01526109d46000f3fe6080604052600436106100345760003560e01c8063019fe885146100395780632d0335ab1461006e57806344d46c8e146100b2575b600080fd5b34801561004557600080fd5b50610059610054366004610784565b6100d3565b60405190151581526020015b60405180910390f35b34801561007a57600080fd5b506100a4610089366004610822565b6001600160a01b031660009081526020819052604090205490565b604051908152602001610065565b6100c56100c0366004610784565b610258565b604051610065929190610876565b6000806101ed84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506101e792507f8531492456b937fd5f74434f9d37a0a2d84164116ae1fd825f21b73aebc452339150610143905060208a018a610822565b61015360408b0160208c01610822565b60408b013560608c013560808d013561016f60a08f018f6108b2565b60405161017d9291906108f8565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e08101919091524661010082015261012001604051602081830303815290604052805190602001206103f1565b90610424565b905060808501356000806102046020890189610822565b6001600160a01b03166001600160a01b031681526020019081526020016000205414801561024f575061023a6020860186610822565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600060606102678585856100d3565b6102d35760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f6573604482015271081b9bdd081b585d18da081c995c5d595cdd60721b60648201526084015b60405180910390fd5b6102e260808601356001610908565b6000806102f26020890189610822565b6001600160a01b03166001600160a01b031681526020019081526020016000208190555060008086602001602081019061032c9190610822565b6001600160a01b03166060880135604089013561034c60a08b018b6108b2565b61035960208d018d610822565b60405160200161036b93929190610929565b60408051601f19818403018152908290526103859161094a565b600060405180830381858888f193505050503d80600081146103c3576040519150601f19603f3d011682016040523d82523d6000602084013e6103c8565b606091505b5090925090506103dd603f6060890135610966565b5a116103e557fe5b90969095509350505050565b600061041e6103fe610448565b8360405161190160f01b8152600281019290925260228201526042902090565b92915050565b6000806000610433858561053d565b9150915061044081610582565b509392505050565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361049f57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f00000000000000000000000000000000000000000000000000000000000000006060830152306080808401919091528351808403909101815260a0909201909252805191012090565b60008082516041036105735760208301516040840151606085015160001a610567878285856106ca565b9450945050505061057b565b506000905060025b9250929050565b600081600481111561059657610596610988565b0361059e5750565b60018160048111156105b2576105b2610988565b036105fa5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016102ca565b600281600481111561060e5761060e610988565b0361065b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102ca565b600381600481111561066f5761066f610988565b036106c75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016102ca565b50565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156106f7575060009050600361077b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561074b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166107745760006001925092505061077b565b9150600090505b94509492505050565b60008060006040848603121561079957600080fd5b83356001600160401b03808211156107b057600080fd5b9085019060e082880312156107c457600080fd5b909350602085013590808211156107da57600080fd5b818601915086601f8301126107ee57600080fd5b8135818111156107fd57600080fd5b87602082850101111561080f57600080fd5b6020830194508093505050509250925092565b60006020828403121561083457600080fd5b81356001600160a01b038116811461084b57600080fd5b9392505050565b60005b8381101561086d578181015183820152602001610855565b50506000910152565b8215158152604060208201526000825180604084015261089d816060850160208701610852565b601f01601f1916919091016060019392505050565b6000808335601e198436030181126108c957600080fd5b8301803591506001600160401b038211156108e357600080fd5b60200191503681900382131561057b57600080fd5b8183823760009101908152919050565b8082018082111561041e57634e487b7160e01b600052601160045260246000fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b6000825161095c818460208701610852565b9190910192915050565b60008261098357634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea26469706673582212203000e60c2896ec8c972097e94bd456a0c1f642d2dd92c0e20f42c6ea3f7ab43d64736f6c63430008170033";

type ForwarderChainlessDomainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForwarderChainlessDomainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ForwarderChainlessDomain__factory extends ContractFactory {
  constructor(...args: ForwarderChainlessDomainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ForwarderChainlessDomain> {
    return super.deploy(overrides || {}) as Promise<ForwarderChainlessDomain>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ForwarderChainlessDomain {
    return super.attach(address) as ForwarderChainlessDomain;
  }
  override connect(signer: Signer): ForwarderChainlessDomain__factory {
    return super.connect(signer) as ForwarderChainlessDomain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForwarderChainlessDomainInterface {
    return new utils.Interface(_abi) as ForwarderChainlessDomainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ForwarderChainlessDomain {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ForwarderChainlessDomain;
  }
}
