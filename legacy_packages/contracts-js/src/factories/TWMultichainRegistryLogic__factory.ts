/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TWMultichainRegistryLogic,
  TWMultichainRegistryLogicInterface,
} from "../TWMultichainRegistryLogic";

const _abi = [
  {
    type: "function",
    name: "OPERATOR_ROLE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_msgData",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_msgSender",
    inputs: [],
    outputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "add",
    inputs: [
      {
        name: "_deployer",
        type: "address",
        internalType: "address",
      },
      {
        name: "_deployment",
        type: "address",
        internalType: "address",
      },
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "metadataUri",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "contractType",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "contractVersion",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "count",
    inputs: [
      {
        name: "_deployer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "deploymentCount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAll",
    inputs: [
      {
        name: "_deployer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "allDeployments",
        type: "tuple[]",
        internalType: "struct ITWMultichainRegistry.Deployment[]",
        components: [
          {
            name: "deploymentAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "chainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "metadataURI",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMetadataUri",
    inputs: [
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_deployment",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "metadataUri",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "remove",
    inputs: [
      {
        name: "_deployer",
        type: "address",
        internalType: "address",
      },
      {
        name: "_deployment",
        type: "address",
        internalType: "address",
      },
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Added",
    inputs: [
      {
        name: "deployer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "deployment",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "chainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "metadataUri",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Deleted",
    inputs: [
      {
        name: "deployer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "deployment",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "chainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506111d6806100206000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c806305d85eda14610093578063119df25f146100b957806326c5b516146100ce57806359e5fd04146100e35780638b49d47e146100f6578063a0a8e4601461010c578063cb2ef6f71461011b578063eb07734214610138578063f4c2012d14610158578063f5b541a614610178575b600080fd5b6100a66100a1366004610c9e565b61018d565b6040519081526020015b60405180910390f35b6100c1610219565b6040516100b09190610cb9565b6100e16100dc366004610ce3565b610297565b005b6100e16100f1366004610dbe565b61046b565b6100fe6105e8565b6040516100b0929190610dfa565b604051600181526020016100b0565b7354574d756c7469636861696e526567697374727960601b6100a6565b61014b610146366004610c9e565b610683565b6040516100b09190610e6f565b61016b610166366004610ef9565b61096a565b6040516100b09190610f25565b6100a660008051602061118183398151915281565b600080610198610a30565b905060006101a882600201610a54565b905060005b818110156102115760006101c46002850183610a64565b6001600160a01b03871660009081526020868152604080832084845290915290209091506101f190610a54565b6101fb9086610f4e565b945061020a9050600182610f4e565b90506101ad565b505050919050565b60405163572b6c0560e01b8152600090309063572b6c059061023f903390600401610cb9565b602060405180830381865afa15801561025c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102809190610f61565b15610292575060131936013560601c90565b503390565b306391d148546000805160206111818339815191526102b4610219565b6040518363ffffffff1660e01b81526004016102d1929190610f83565b602060405180830381865afa1580156102ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103129190610f61565b806103355750610320610219565b6001600160a01b0316846001600160a01b0316145b61035a5760405162461bcd60e51b815260040161035190610f9a565b60405180910390fd5b6000610364610a30565b6001600160a01b0386166000908152602082815260408083208784529091528120919250906103939086610a77565b9050806103d25760405162461bcd60e51b815260206004820152600d60248201526c19985a5b1959081d1bc8185919609a1b6044820152606401610351565b6103df6002830185610a8c565b5082511561041757600084815260018301602090815260408083206001600160a01b038916845290915290206104158482611058565b505b83856001600160a01b0316876001600160a01b03167f58089736ce1376be8f64c745948361e7908eb6fe512f9e69c0b041f7a70b535c8660405161045b9190610f25565b60405180910390a4505050505050565b306391d14854600080516020611181833981519152610488610219565b6040518363ffffffff1660e01b81526004016104a5929190610f83565b602060405180830381865afa1580156104c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e69190610f61565b8061050957506104f4610219565b6001600160a01b0316836001600160a01b0316145b6105255760405162461bcd60e51b815260040161035190610f9a565b600061052f610a30565b6001600160a01b03851660009081526020828152604080832086845290915281209192509061055e9085610a98565b9050806105a05760405162461bcd60e51b815260206004820152601060248201526f6661696c656420746f2072656d6f766560801b6044820152606401610351565b82846001600160a01b0316866001600160a01b03167fdc1791450b87438fe3505803e0a117aca5918e9d01a3afb374160b3a36cbf53260405160405180910390a45050505050565b60405163572b6c0560e01b81523690600090309063572b6c0590610610903390600401610cb9565b602060405180830381865afa15801561062d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106519190610f61565b1561067a5760008036610665601482611117565b926106729392919061112a565b915091509091565b50600091369150565b6060600061068f610a30565b90506000806106a083600201610a54565b905060005b818110156107095760006106bc6002860183610a64565b6001600160a01b03881660009081526020878152604080832084845290915290209091506106e990610a54565b6106f39085610f4e565b93506107029050600182610f4e565b90506106a5565b50816001600160401b0381111561072257610722610ccd565b60405190808252806020026020018201604052801561076f57816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816107405790505b5093506000805b8281101561096057600061078d6002870183610a64565b6001600160a01b0389166000908152602088815260408083208484529091528120919250906107bb90610a54565b6001600160a01b038a166000908152602089815260408083208684529091528120919250906107e990610aad565b905060005b8281101561094857604051806060016040528083838151811061081357610813611154565b60200260200101516001600160a01b031681526020018581526020018a6001016000878152602001908152602001600020600085858151811061085857610858611154565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020805461088b90610fcd565b80601f01602080910402602001604051908101604052809291908181526020018280546108b790610fcd565b80156109045780601f106108d957610100808354040283529160200191610904565b820191906000526020600020905b8154815290600101906020018083116108e757829003601f168201915b50505050508152508a878151811061091e5761091e611154565b6020908102919091010152610934600187610f4e565b9550610941600182610f4e565b90506107ee565b505050506001816109599190610f4e565b9050610776565b5050505050919050565b60606000610976610a30565b600085815260018201602090815260408083206001600160a01b038816845290915290208054919250906109a990610fcd565b80601f01602080910402602001604051908101604052809291908181526020018280546109d590610fcd565b8015610a225780601f106109f757610100808354040283529160200191610a22565b820191906000526020600020905b815481529060010190602001808311610a0557829003601f168201915b505050505091505092915050565b7f14e6df431852605a9ea88d8bd521d0d3fa06563ab37f65080e288e5afad4ac0090565b6000610a5e825490565b92915050565b6000610a708383610aba565b9392505050565b6000610a70836001600160a01b038416610ae4565b6000610a708383610ae4565b6000610a70836001600160a01b038416610b33565b60606000610a7083610c26565b6000826000018281548110610ad157610ad1611154565b9060005260206000200154905092915050565b6000818152600183016020526040812054610b2b57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a5e565b506000610a5e565b60008181526001830160205260408120548015610c1c576000610b57600183611117565b8554909150600090610b6b90600190611117565b9050818114610bd0576000866000018281548110610b8b57610b8b611154565b9060005260206000200154905080876000018481548110610bae57610bae611154565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610be157610be161116a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610a5e565b6000915050610a5e565b606081600001805480602002602001604051908101604052809291908181526020018280548015610c7657602002820191906000526020600020905b815481526020019060010190808311610c62575b50505050509050919050565b80356001600160a01b0381168114610c9957600080fd5b919050565b600060208284031215610cb057600080fd5b610a7082610c82565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610cf957600080fd5b610d0285610c82565b9350610d1060208601610c82565b92506040850135915060608501356001600160401b0380821115610d3357600080fd5b818701915087601f830112610d4757600080fd5b813581811115610d5957610d59610ccd565b604051601f8201601f19908116603f01168101908382118183101715610d8157610d81610ccd565b816040528281528a6020848701011115610d9a57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060608486031215610dd357600080fd5b610ddc84610c82565b9250610dea60208501610c82565b9150604084013590509250925092565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6000815180845260005b81811015610e4f57602081850181015186830182015201610e33565b506000602082860101526020601f19601f83011685010191505092915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b83811015610eeb57888303603f19018552815180516001600160a01b0316845287810151888501528601516060878501819052610ed781860183610e29565b968901969450505090860190600101610e98565b509098975050505050505050565b60008060408385031215610f0c57600080fd5b82359150610f1c60208401610c82565b90509250929050565b602081526000610a706020830184610e29565b634e487b7160e01b600052601160045260246000fd5b80820180821115610a5e57610a5e610f38565b600060208284031215610f7357600080fd5b81518015158114610a7057600080fd5b9182526001600160a01b0316602082015260400190565b6020808252601990820152783737ba1037b832b930ba37b91037b9103232b83637bcb2b91760391b604082015260600190565b600181811c90821680610fe157607f821691505b60208210810361100157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115611053576000816000526020600020601f850160051c810160208610156110305750805b601f850160051c820191505b8181101561104f5782815560010161103c565b5050505b505050565b81516001600160401b0381111561107157611071610ccd565b6110858161107f8454610fcd565b84611007565b602080601f8311600181146110ba57600084156110a25750858301515b600019600386901b1c1916600185901b17855561104f565b600085815260208120601f198616915b828110156110e9578886015182559484019460019091019084016110ca565b50858210156111075787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115610a5e57610a5e610f38565b6000808585111561113a57600080fd5b8386111561114757600080fd5b5050820193919092039150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfe97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929a2646970667358221220bc61db8d8b86d2b030aaee55c5fa0040ea995bd23cabcf6ac1cac41b67a3736564736f6c63430008170033";

type TWMultichainRegistryLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TWMultichainRegistryLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TWMultichainRegistryLogic__factory extends ContractFactory {
  constructor(...args: TWMultichainRegistryLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TWMultichainRegistryLogic> {
    return super.deploy(overrides || {}) as Promise<TWMultichainRegistryLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TWMultichainRegistryLogic {
    return super.attach(address) as TWMultichainRegistryLogic;
  }
  override connect(signer: Signer): TWMultichainRegistryLogic__factory {
    return super.connect(signer) as TWMultichainRegistryLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TWMultichainRegistryLogicInterface {
    return new utils.Interface(_abi) as TWMultichainRegistryLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TWMultichainRegistryLogic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TWMultichainRegistryLogic;
  }
}
