/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OffersLogic, OffersLogicInterface } from "../OffersLogic";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "_msgData",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_msgSender",
    inputs: [],
    outputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "acceptOffer",
    inputs: [
      {
        name: "_offerId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOffer",
    inputs: [
      {
        name: "_offerId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllOffers",
    inputs: [
      {
        name: "_startId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_endId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "_allOffers",
        type: "tuple[]",
        internalType: "struct IOffers.Offer[]",
        components: [
          {
            name: "offerId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "totalPrice",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expirationTimestamp",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "offeror",
            type: "address",
            internalType: "address",
          },
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenType",
            type: "uint8",
            internalType: "enum IOffers.TokenType",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IOffers.Status",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllValidOffers",
    inputs: [
      {
        name: "_startId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_endId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "_validOffers",
        type: "tuple[]",
        internalType: "struct IOffers.Offer[]",
        components: [
          {
            name: "offerId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "totalPrice",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expirationTimestamp",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "offeror",
            type: "address",
            internalType: "address",
          },
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenType",
            type: "uint8",
            internalType: "enum IOffers.TokenType",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IOffers.Status",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOffer",
    inputs: [
      {
        name: "_offerId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "_offer",
        type: "tuple",
        internalType: "struct IOffers.Offer",
        components: [
          {
            name: "offerId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "totalPrice",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expirationTimestamp",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "offeror",
            type: "address",
            internalType: "address",
          },
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenType",
            type: "uint8",
            internalType: "enum IOffers.TokenType",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IOffers.Status",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "makeOffer",
    inputs: [
      {
        name: "_params",
        type: "tuple",
        internalType: "struct IOffers.OfferParams",
        components: [
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "totalPrice",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expirationTimestamp",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "_offerId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "totalOffers",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AcceptedOffer",
    inputs: [
      {
        name: "offeror",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "offerId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "assetContract",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "seller",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "quantityBought",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "totalPricePaid",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CancelledOffer",
    inputs: [
      {
        name: "offeror",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "offerId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewOffer",
    inputs: [
      {
        name: "offeror",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "offerId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "assetContract",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "offer",
        type: "tuple",
        indexed: false,
        internalType: "struct IOffers.Offer",
        components: [
          {
            name: "offerId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "totalPrice",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expirationTimestamp",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "offeror",
            type: "address",
            internalType: "address",
          },
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenType",
            type: "uint8",
            internalType: "enum IOffers.TokenType",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IOffers.Status",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CurrencyTransferLibMismatchedValue",
    inputs: [
      {
        name: "expected",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "actual",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060017f1d281c488dae143b6ea4122e80c65059929950b9c32f17fc57be22089d9c3b005561278a806100446000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c8063016767fa14610088578063119df25f146100ae5780634579268a146100c35780638b49d47e146100e357806391940b3e146100f9578063a9fd8ed114610119578063c1edcfbe14610121578063c815729d14610134578063ef706adf14610149575b600080fd5b61009b6100963660046120f4565b61015c565b6040519081526020015b60405180910390f35b6100b661044a565b6040516100a5919061218b565b6100d66100d136600461219f565b6104c8565b6040516100a5919061227f565b6100eb6105c9565b6040516100a592919061228e565b61010c6101073660046122bd565b610664565b6040516100a591906122df565b61009b610955565b61010c61012f3660046122bd565b610965565b61014761014236600461219f565b610b3d565b005b61014761015736600461219f565b610e97565b805160405163a32fa5b360e01b81527f86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae660048201526001600160a01b038216602482015260009190309063a32fa5b390604401602060405180830381865afa1580156101cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f0919061232e565b61022f5760405162461bcd60e51b815260206004820152600b60248201526a2141535345545f524f4c4560a81b60448201526064015b60405180910390fd5b610237610fe8565b9150600061024361044a565b905060006102548560000151611019565b9050610260858261117c565b60006040518061014001604052808681526020018760200151815260200187604001518152602001876080015181526020018760a001518152602001846001600160a01b0316815260200187600001516001600160a01b0316815260200187606001516001600160a01b031681526020018360028111156102e3576102e36121b8565b8152602001600190529050806102f761133d565b600087815260019182016020908152604091829020845181559084015192810192909255820151600280830191909155606083015160038301556080830151600483015560a08301516005830180546001600160a01b03199081166001600160a01b039384161790915560c0850151600685018054831691841691909117905560e0850151600785018054928316919093169081178355610100860151936001600160a81b03199092161790600160a01b9084908111156103ba576103ba6121b8565b021790555061012082015160078201805460ff60a81b1916600160a81b8360038111156103e9576103e96121b8565b021790555090505085600001516001600160a01b031685846001600160a01b03167f8a597d224658d6f05ad676ddd666a25096b0bf7eff59d873ccbe943f8a3313ae84604051610439919061227f565b60405180910390a450505050919050565b60405163572b6c0560e01b8152600090309063572b6c059061047090339060040161218b565b602060405180830381865afa15801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b1919061232e565b156104c3575060131936013560601c90565b503390565b6104d0612018565b6104d861133d565b60008381526001918201602090815260409182902082516101408101845281548152938101549184019190915260028082015492840192909252600381015460608401526004810154608084015260058101546001600160a01b0390811660a08501526006820154811660c0850152600782015490811660e08501529091610100840191600160a01b900460ff1690811115610576576105766121b8565b6002811115610587576105876121b8565b81526020016007820160159054906101000a900460ff1660038111156105af576105af6121b8565b60038111156105c0576105c06121b8565b90525092915050565b60405163572b6c0560e01b81523690600090309063572b6c05906105f190339060040161218b565b602060405180830381865afa15801561060e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610632919061232e565b1561065b576000803661064660148261236d565b9261065393929190612380565b915091509091565b50600091369150565b606081831115801561067d575061067961133d565b5482105b6106995760405162461bcd60e51b8152600401610226906123aa565b60006106a5848461236d565b6106b09060016123d1565b6001600160401b038111156106c7576106c7612096565b60405190808252806020026020018201604052801561070057816020015b6106ed612018565b8152602001906001900390816106e55790505b5090506000845b84811161087557600061071a878361236d565b905061072461133d565b60008381526001918201602090815260409182902082516101408101845281548152938101549184019190915260028082015492840192909252600381015460608401526004810154608084015260058101546001600160a01b0390811660a08501526006820154811660c0850152600782015490811660e08501529091610100840191600160a01b900460ff16908111156107c2576107c26121b8565b60028111156107d3576107d36121b8565b81526020016007820160159054906101000a900460ff1660038111156107fb576107fb6121b8565b600381111561080c5761080c6121b8565b81525050848281518110610822576108226123e4565b602002602001018190525061084f848281518110610842576108426123e4565b6020026020010151611361565b156108625761085f6001846123d1565b92505b5061086e6001826123d1565b9050610707565b50806001600160401b0381111561088e5761088e612096565b6040519080825280602002602001820160405280156108c757816020015b6108b4612018565b8152602001906001900390816108ac5790505b508251909350600090815b8181101561094a576108ef858281518110610842576108426123e4565b1561093857848181518110610906576109066123e4565b602002602001015186848061091a906123fa565b95508151811061092c5761092c6123e4565b60200260200101819052505b6109436001826123d1565b90506108d2565b505050505092915050565b600061095f61133d565b54919050565b606081831115801561097e575061097a61133d565b5482105b61099a5760405162461bcd60e51b8152600401610226906123aa565b6109a4838361236d565b6109af9060016123d1565b6001600160401b038111156109c6576109c6612096565b6040519080825280602002602001820160405280156109ff57816020015b6109ec612018565b8152602001906001900390816109e45790505b509050825b828111610b3657610a1361133d565b60008281526001918201602090815260409182902082516101408101845281548152938101549184019190915260028082015492840192909252600381015460608401526004810154608084015260058101546001600160a01b0390811660a08501526006820154811660c0850152600782015490811660e08501529091610100840191600160a01b900460ff1690811115610ab157610ab16121b8565b6002811115610ac257610ac26121b8565b81526020016007820160159054906101000a900460ff166003811115610aea57610aea6121b8565b6003811115610afb57610afb6121b8565b90525082610b09868461236d565b81518110610b1957610b196123e4565b6020908102919091010152610b2f6001826123d1565b9050610a04565b5092915050565b6002610b476113b0565b5403610b955760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610226565b6002610b9f6113b0565b55806001610bab61133d565b60008381526001919091016020526040902060070154600160a81b900460ff166003811115610bdc57610bdc6121b8565b14610bf95760405162461bcd60e51b815260040161022690612413565b6000610c0361133d565b60008481526001918201602090815260409182902082516101408101845281548152938101549184019190915260028082015492840192909252600381015460608401526004810154608084015260058101546001600160a01b0390811660a08501526006820154811660c0850152600782015490811660e08501529091610100840191600160a01b900460ff1690811115610ca157610ca16121b8565b6002811115610cb257610cb26121b8565b81526020016007820160159054906101000a900460ff166003811115610cda57610cda6121b8565b6003811115610ceb57610ceb6121b8565b81525050905042816080015111610d2e5760405162461bcd60e51b81526020600482015260076024820152661156141254915160ca1b6044820152606401610226565b610d458160a001518260e0015183606001516113d4565b610d615760405162461bcd60e51b815260040161022690612448565b610d86610d6c61044a565b8260c00151836020015184604001518561010001516114c9565b6002610d9061133d565b600085815260019190910160205260409020600701805460ff60a81b1916600160a81b836003811115610dc557610dc56121b8565b0217905550610dea8160a00151610dda61044a565b8360e001518460600151856117c4565b610e05610df561044a565b8260a001518360400151846119c9565b8060c001516001600160a01b031681600001518260a001516001600160a01b03167fc3888b4f8640ff369e48089b45596f4adc2e39c73dc7fc6e609f2ad05f8795408460200151610e5461044a565b6040808801516060808a015183519586526001600160a01b0390941660208601529184015282015260800160405180910390a450506001610e936113b0565b5550565b806001610ea261133d565b60008381526001919091016020526040902060070154600160a81b900460ff166003811115610ed357610ed36121b8565b14610ef05760405162461bcd60e51b815260040161022690612413565b81610ef961044a565b6001600160a01b0316610f0a61133d565b600083815260019190910160205260409020600501546001600160a01b031614610f615760405162461bcd60e51b815260206004820152600860248201526710a7b33332b937b960c11b6044820152606401610226565b6003610f6b61133d565b600085815260019190910160205260409020600701805460ff60a81b1916600160a81b836003811115610fa057610fa06121b8565b021790555082610fae61044a565b6001600160a01b03167f26c37611219fb1f3253d3027b738bb3e678ed39b193c956cb48193e6431478d360405160405180910390a3505050565b6000610ff261133d565b5490506001610fff61133d565b805460009061100f9084906123d1565b9250508190555090565b6040516301ffc9a760e01b81526000906001600160a01b038316906301ffc9a79061104f90636cdb3d1360e11b90600401612493565b602060405180830381865afa15801561106c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611090919061232e565b1561109d57506001919050565b6040516301ffc9a760e01b81526001600160a01b038316906301ffc9a7906110d0906380ac58cd60e01b90600401612493565b602060405180830381865afa1580156110ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611111919061232e565b1561111e57506000919050565b60405162461bcd60e51b815260206004820152602d60248201527f4d61726b6574706c6163653a20746f6b656e206d75737420626520455243313160448201526c1a9a9037b91022a9219b99189760991b6064820152608401610226565b60008260800151116111be5760405162461bcd60e51b815260206004820152600b60248201526a3d32b93790383934b1b29760a91b6044820152606401610226565b60008260400151116112125760405162461bcd60e51b815260206004820181905260248201527f4d61726b6574706c6163653a2077616e746564207a65726f20746f6b656e732e6044820152606401610226565b81604001516001148061123657506001816002811115611234576112346121b8565b145b6112905760405162461bcd60e51b815260206004820152602560248201527f4d61726b6574706c6163653a2077616e74656420696e76616c6964207175616e6044820152643a34ba3c9760d91b6064820152608401610226565b428260a00151610e106112a391906123d1565b116113035760405162461bcd60e51b815260206004820152602a60248201527f4d61726b6574706c6163653a20696e76616c69642065787069726174696f6e206044820152693a34b6b2b9ba30b6b81760b11b6064820152608401610226565b61131d61130e61044a565b836060015184608001516113d4565b6113395760405162461bcd60e51b815260040161022690612448565b5050565b7f8f8effea55e8d961f30e12024b944289ed8a7f60abcf4b3989df2dc98a91430090565b600042826080015111801561138c57506001826101200151600381111561138a5761138a6121b8565b145b80156113aa57506113aa8260a001518360e0015184606001516113d4565b92915050565b7f1d281c488dae143b6ea4122e80c65059929950b9c32f17fc57be22089d9c3b0090565b600081836001600160a01b03166370a08231866040518263ffffffff1660e01b8152600401611403919061218b565b602060405180830381865afa158015611420573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144491906124a8565b101580156114c15750604051636eb1769f60e11b815282906001600160a01b0385169063dd62ed3e9061147d90889030906004016124c1565b602060405180830381865afa15801561149a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114be91906124a8565b10155b949350505050565b30600060018360028111156114e0576114e06121b8565b036115d357604051627eeac760e11b815284906001600160a01b0388169062fdd58e90611513908b908a906004016124db565b602060405180830381865afa158015611530573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155491906124a8565b101580156115cc575060405163e985e9c560e01b81526001600160a01b0387169063e985e9c59061158b908a9086906004016124c1565b602060405180830381865afa1580156115a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cc919061232e565b905061175b565b60008360028111156115e7576115e76121b8565b0361175b576040516331a9108f60e11b8152600481018690526001600160a01b038089169190881690636352211e90602401602060405180830381865afa158015611636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165a91906124f4565b6001600160a01b0316148015611758575060405163020604bf60e21b8152600481018690526001600160a01b03808416919088169063081812fc90602401602060405180830381865afa1580156116b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d991906124f4565b6001600160a01b03161480611758575060405163e985e9c560e01b81526001600160a01b0387169063e985e9c590611717908a9086906004016124c1565b602060405180830381865afa158015611734573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611758919061232e565b90505b806117bb5760405162461bcd60e51b815260206004820152602a60248201527f4d61726b6574706c6163653a206e6f74206f776e6572206f7220617070726f7660448201526932b2103a37b5b2b7399760b11b6064820152608401610226565b50505050505050565b6000806000306001600160a01b031663d45573f66040518163ffffffff1660e01b81526004016040805180830381865afa158015611806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182a9190612511565b9092509050600061271061184261ffff841688612552565b61184c9190612569565b905061185c878a85846000611b1e565b611866818761236d565b60c08601516020870151604051637a99dc0160e11b81526001600160a01b0390921660048301526024820152604481018890529094506000935083925030915063f533b802906064016000604051808303816000875af11580156118ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118f6919081019061261d565b8151919350915080156119b05760008060005b838110156119ac57858181518110611923576119236123e4565b6020026020010151915084818151811061193f5761193f6123e4565b60200260200101519250828710156119915760405162461bcd60e51b815260206004820152601560248201527466656573206578636565642074686520707269636560581b6044820152606401610226565b61199f8a8d84866000611b1e565b9582900395600101611909565b5050505b5050506119c1848787846000611b1e565b505050505050565b600181610100015160028111156119e2576119e26121b8565b03611a765760c08101516020820151604051637921219560e11b81526001600160a01b038781166004830152868116602483015260448201929092526064810185905260a06084820152600060a482015291169063f242432a9060c401600060405180830381600087803b158015611a5957600080fd5b505af1158015611a6d573d6000803e3d6000fd5b50505050611b18565b60008161010001516002811115611a8f57611a8f6121b8565b03611b185760c08101516020820151604051635c46a7ef60e11b81526001600160a01b03878116600483015286811660248301526044820192909252608060648201526000608482015291169063b88d4fde9060a401600060405180830381600087803b158015611aff57600080fd5b505af1158015611b13573d6000803e3d6000fd5b505050505b50505050565b8115611c6c5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03861601611c6057306001600160a01b03851603611bc357604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015611b9b57600080fd5b505af1158015611baf573d6000803e3d6000fd5b50505050611bbe838383611c73565b611c6c565b306001600160a01b03841603611c5557348214611bfc576040516303e085f960e01b815234600482015260248101839052604401610226565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015611c3757600080fd5b505af1158015611c4b573d6000803e3d6000fd5b5050505050611c6c565b611bbe838383611c73565b611c6c85858585611d38565b5050505050565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114611cc0576040519150601f19603f3d011682016040523d82523d6000602084013e611cc5565b606091505b5050905080611b1857816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b158015611d0957600080fd5b505af1158015611d1d573d6000803e3d6000fd5b50611b18935050506001600160a01b03841690508585611d90565b816001600160a01b0316836001600160a01b03160315611b1857306001600160a01b03841603611d7b57611d766001600160a01b0385168383611d90565b611b18565b611b186001600160a01b038516848484611deb565b611de68363a9059cbb60e01b8484604051602401611daf9291906124db565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611e23565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052611b189085906323b872dd60e01b90608401611daf565b6000611e78826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611ef59092919063ffffffff16565b805190915015611de65780806020019051810190611e96919061232e565b611de65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610226565b60606114c1848460008585600080866001600160a01b03168587604051611f1c9190612705565b60006040518083038185875af1925050503d8060008114611f59576040519150601f19603f3d011682016040523d82523d6000602084013e611f5e565b606091505b5091509150611f6f87838387611f7a565b979650505050505050565b60608315611fe9578251600003611fe2576001600160a01b0385163b611fe25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610226565b50816114c1565b6114c18383815115611ffe5781518083602001fd5b8060405162461bcd60e51b81526004016102269190612721565b604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000600281111561208a5761208a6121b8565b81526020016000905290565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156120d4576120d4612096565b604052919050565b6001600160a01b03811681146120f157600080fd5b50565b600060c0828403121561210657600080fd5b60405160c081018181106001600160401b038211171561212857612128612096565b6040528235612136816120dc565b808252506020830135602082015260408301356040820152606083013561215c816120dc565b60608201526080838101359082015260a0928301359281019290925250919050565b6001600160a01b03169052565b6001600160a01b0391909116815260200190565b6000602082840312156121b157600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600381106121de576121de6121b8565b9052565b600481106121de576121de6121b8565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015161223060a084018261217e565b5060c081015161224360c084018261217e565b5060e081015161225660e084018261217e565b506101008082015161226a828501826121ce565b505061012080820151611b18828501826121e2565b61014081016113aa82846121f2565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b600080604083850312156122d057600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156123225761230e8385516121f2565b9284019261014092909201916001016122fb565b50909695505050505050565b60006020828403121561234057600080fd5b8151801515811461235057600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156113aa576113aa612357565b6000808585111561239057600080fd5b8386111561239d57600080fd5b5050820193919092039150565b6020808252600d908201526c696e76616c69642072616e676560981b604082015260600190565b808201808211156113aa576113aa612357565b634e487b7160e01b600052603260045260246000fd5b60006001820161240c5761240c612357565b5060010190565b6020808252601b908201527a26b0b935b2ba383630b1b29d1034b73b30b634b21037b33332b91760291b604082015260600190565b6020808252602b908201527f4d61726b6574706c6163653a20696e73756666696369656e742063757272656e60408201526a31bc903130b630b731b29760a91b606082015260800190565b6001600160e01b031991909116815260200190565b6000602082840312156124ba57600080fd5b5051919050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b60006020828403121561250657600080fd5b8151612350816120dc565b6000806040838503121561252457600080fd5b825161252f816120dc565b602084015190925061ffff8116811461254757600080fd5b809150509250929050565b80820281158282048414176113aa576113aa612357565b60008261258657634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160401b038211156125a4576125a4612096565b5060051b60200190565b600082601f8301126125bf57600080fd5b815160206125d46125cf8361258b565b6120ac565b8083825260208201915060208460051b8701019350868411156125f657600080fd5b602086015b8481101561261257805183529183019183016125fb565b509695505050505050565b6000806040838503121561263057600080fd5b82516001600160401b038082111561264757600080fd5b818501915085601f83011261265b57600080fd5b8151602061266b6125cf8361258b565b82815260059290921b8401810191818101908984111561268a57600080fd5b948201945b838610156126b15785516126a2816120dc565b8252948201949082019061268f565b918801519196509093505050808211156126ca57600080fd5b506126d7858286016125ae565b9150509250929050565b60005b838110156126fc5781810151838201526020016126e4565b50506000910152565b600082516127178184602087016126e1565b9190910192915050565b60208152600082518060208401526127408160408501602087016126e1565b601f01601f1916919091016040019291505056fea2646970667358221220ed55a6d42ce15cca6e740f72bad9b5bdeb98f4ae76555a6668609e617d057d4064736f6c63430008170033";

type OffersLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OffersLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OffersLogic__factory extends ContractFactory {
  constructor(...args: OffersLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OffersLogic> {
    return super.deploy(overrides || {}) as Promise<OffersLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OffersLogic {
    return super.attach(address) as OffersLogic;
  }
  override connect(signer: Signer): OffersLogic__factory {
    return super.connect(signer) as OffersLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OffersLogicInterface {
    return new utils.Interface(_abi) as OffersLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OffersLogic {
    return new Contract(address, _abi, signerOrProvider) as OffersLogic;
  }
}
