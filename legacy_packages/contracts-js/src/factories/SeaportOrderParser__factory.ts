/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeaportOrderParser,
  SeaportOrderParserInterface,
} from "../SeaportOrderParser";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
];

const _bytecode =
  "0x61014060405234801561001157600080fd5b5061001a610033565b610120526101005260e05260c05260a0526080526101af565b6000808080808061005e60408051808201909152600781526614d9585c1bdc9d60ca1b602082015290565b80519060200120955060405180604001604052806003815260200162312e3560e81b81525080519060200120945060006040518060a00160405280606a81526020016103d3606a9139905060006040518060c0016040528060848152602001610229608491399050600060405180610100016040528060d481526020016102ff60d4913990506040518060800160405280605281526020016102ad605291398051906020012096508280519060200120955081805190602001209450600081838560405160200161013193929190610188565b60405160208183030381529060405290508080519060200120945050505050909192939495565b6000815160005b81811015610179576020818501810151868301520161015f565b50600093019283525090919050565b60006101a66101a061019a8488610158565b86610158565b84610158565b95945050505050565b60805160a05160c05160e0516101005161012051603f6101ea600039600050506000505060005050600050506000505060005050603f6000f3fe6080604052600080fdfea264697066735822122074b9644a92d4e4afa8cf2df7a9155e74ce4daca87bef714684d9e3947bde265c64736f6c63430008170033436f6e73696465726174696f6e4974656d2875696e7438206974656d547970652c6164647265737320746f6b656e2c75696e74323536206964656e7469666965724f7243726974657269612c75696e74323536207374617274416d6f756e742c75696e7432353620656e64416d6f756e742c6164647265737320726563697069656e7429454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374294f72646572436f6d706f6e656e74732861646472657373206f6666657265722c61646472657373207a6f6e652c4f666665724974656d5b5d206f666665722c436f6e73696465726174696f6e4974656d5b5d20636f6e73696465726174696f6e2c75696e7438206f72646572547970652c75696e7432353620737461727454696d652c75696e7432353620656e6454696d652c62797465733332207a6f6e65486173682c75696e743235362073616c742c6279746573333220636f6e647569744b65792c75696e7432353620636f756e746572294f666665724974656d2875696e7438206974656d547970652c6164647265737320746f6b656e2c75696e74323536206964656e7469666965724f7243726974657269612c75696e74323536207374617274416d6f756e742c75696e7432353620656e64416d6f756e7429";

type SeaportOrderParserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SeaportOrderParserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SeaportOrderParser__factory extends ContractFactory {
  constructor(...args: SeaportOrderParserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeaportOrderParser> {
    return super.deploy(overrides || {}) as Promise<SeaportOrderParser>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SeaportOrderParser {
    return super.attach(address) as SeaportOrderParser;
  }
  override connect(signer: Signer): SeaportOrderParser__factory {
    return super.connect(signer) as SeaportOrderParser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeaportOrderParserInterface {
    return new utils.Interface(_abi) as SeaportOrderParserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeaportOrderParser {
    return new Contract(address, _abi, signerOrProvider) as SeaportOrderParser;
  }
}
