/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ForwarderEOAOnly,
  ForwarderEOAOnlyInterface,
} from "../ForwarderEOAOnly";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "req",
        type: "tuple",
        internalType: "struct MinimalForwarderEOAOnly.ForwardRequest",
        components: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getNonce",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verify",
    inputs: [
      {
        name: "req",
        type: "tuple",
        internalType: "struct MinimalForwarderEOAOnly.ForwardRequest",
        components: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
];

const _bytecode =
  "0x61014060405234801561001157600080fd5b50604080518082018252600f81526e23a9a73b19102337b93bb0b93232b960891b602080830191825283518085019094526005845264302e302e3160d81b908401528151902060e08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118856101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100fa8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c052610120525061010f92505050565b60805160a05160c05160e0516101005161012051610a3861015e6000396000610504015260006105530152600061052e01526000610487015260006104b1015260006104db0152610a386000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f6100543660046107e8565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b610095610090366004610818565b6100d3565b6040516100799291906108da565b3480156100af57600080fd5b506100c36100be366004610818565b6102a5565b6040519015158152602001610079565b600060603332146101155760405162461bcd60e51b81526020600482015260076024820152666e6f7420454f4160c81b60448201526064015b60405180910390fd5b6101208585856102a5565b6101875760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f6573604482015271081b9bdd081b585d18da081c995c5d595cdd60721b606482015260840161010c565b61019660808601356001610916565b6000806101a660208901896107e8565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101e091906107e8565b6001600160a01b03166060880135604089013561020060a08b018b610937565b61020d60208d018d6107e8565b60405160200161021f9392919061097d565b60408051601f19818403018152908290526102399161099e565b600060405180830381858888f193505050503d8060008114610277576040519150601f19603f3d011682016040523d82523d6000602084013e61027c565b606091505b509092509050610291603f60608901356109ba565b5a1161029957fe5b90969095509350505050565b6000806103b884848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103b292507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e489150610315905060208a018a6107e8565b61032560408b0160208c016107e8565b60408b013560608c013560808d013561034160a08f018f610937565b60405161034f9291906109dc565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e08101919091526101000160405160208183030381529060405280519060200120610423565b90610456565b905060808501356000806103cf60208901896107e8565b6001600160a01b03166001600160a01b031681526020019081526020016000205414801561041a575061040560208601866107e8565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061045061043061047a565b8360405161190160f01b8152600281019290925260228201526042902090565b92915050565b600080600061046585856105a1565b91509150610472816105e6565b509392505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156104d357507f000000000000000000000000000000000000000000000000000000000000000046145b156104fd57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008082516041036105d75760208301516040840151606085015160001a6105cb8782858561072e565b945094505050506105df565b506000905060025b9250929050565b60008160048111156105fa576105fa6109ec565b036106025750565b6001816004811115610616576106166109ec565b0361065e5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161010c565b6002816004811115610672576106726109ec565b036106bf5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161010c565b60038160048111156106d3576106d36109ec565b0361072b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161010c565b50565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561075b57506000905060036107df565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156107af573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166107d8576000600192509250506107df565b9150600090505b94509492505050565b6000602082840312156107fa57600080fd5b81356001600160a01b038116811461081157600080fd5b9392505050565b60008060006040848603121561082d57600080fd5b83356001600160401b038082111561084457600080fd5b9085019060c0828803121561085857600080fd5b9093506020850135908082111561086e57600080fd5b818601915086601f83011261088257600080fd5b81358181111561089157600080fd5b8760208285010111156108a357600080fd5b6020830194508093505050509250925092565b60005b838110156108d15781810151838201526020016108b9565b50506000910152565b821515815260406020820152600082518060408401526109018160608501602087016108b6565b601f01601f1916919091016060019392505050565b8082018082111561045057634e487b7160e01b600052601160045260246000fd5b6000808335601e1984360301811261094e57600080fd5b8301803591506001600160401b0382111561096857600080fd5b6020019150368190038213156105df57600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b600082516109b08184602087016108b6565b9190910192915050565b6000826109d757634e487b7160e01b600052601260045260246000fd5b500490565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220b6116cc5f48606d158071948b0d48ccd21dff8354f4f5084b31c8d0bb8a1ca9364736f6c63430008170033";

type ForwarderEOAOnlyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForwarderEOAOnlyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ForwarderEOAOnly__factory extends ContractFactory {
  constructor(...args: ForwarderEOAOnlyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ForwarderEOAOnly> {
    return super.deploy(overrides || {}) as Promise<ForwarderEOAOnly>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ForwarderEOAOnly {
    return super.attach(address) as ForwarderEOAOnly;
  }
  override connect(signer: Signer): ForwarderEOAOnly__factory {
    return super.connect(signer) as ForwarderEOAOnly__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForwarderEOAOnlyInterface {
    return new utils.Interface(_abi) as ForwarderEOAOnlyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ForwarderEOAOnly {
    return new Contract(address, _abi, signerOrProvider) as ForwarderEOAOnly;
  }
}
