/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IContractDeployer,
  IContractDeployerInterface,
} from "../IContractDeployer";

const _abi = [
  {
    type: "function",
    name: "deployInstance",
    inputs: [
      {
        name: "publisher",
        type: "address",
        internalType: "address",
      },
      {
        name: "contractBytecode",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "constructorArgs",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "publishMetadataUri",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "deployedAddress",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deployInstanceProxy",
    inputs: [
      {
        name: "publisher",
        type: "address",
        internalType: "address",
      },
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "initializeData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "publishMetadataUri",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "deployedAddress",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getContractDeployer",
    inputs: [
      {
        name: "_contract",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "ContractDeployed",
    inputs: [
      {
        name: "deployer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "publisher",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "deployedContract",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "isPaused",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
];

export class IContractDeployer__factory {
  static readonly abi = _abi;
  static createInterface(): IContractDeployerInterface {
    return new utils.Interface(_abi) as IContractDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IContractDeployer {
    return new Contract(address, _abi, signerOrProvider) as IContractDeployer;
  }
}
