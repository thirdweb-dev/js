/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPackVRFDirect,
  IPackVRFDirectInterface,
} from "../IPackVRFDirect";

const _abi = [
  {
    type: "function",
    name: "canClaimRewards",
    inputs: [
      {
        name: "_opener",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claimRewards",
    inputs: [],
    outputs: [
      {
        name: "rewardUnits",
        type: "tuple[]",
        internalType: "struct ITokenBundle.Token[]",
        components: [
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenType",
            type: "uint8",
            internalType: "enum ITokenBundle.TokenType",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "totalAmount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createPack",
    inputs: [
      {
        name: "contents",
        type: "tuple[]",
        internalType: "struct ITokenBundle.Token[]",
        components: [
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenType",
            type: "uint8",
            internalType: "enum ITokenBundle.TokenType",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "totalAmount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "numOfRewardUnits",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "packUri",
        type: "string",
        internalType: "string",
      },
      {
        name: "openStartTimestamp",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "amountDistributedPerOpen",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "packId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "packTotalSupply",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "openPack",
    inputs: [
      {
        name: "packId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amountToOpen",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "requestId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "openPackAndClaimRewards",
    inputs: [
      {
        name: "_packId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_amountToOpen",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_callBackGasLimit",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "PackCreated",
    inputs: [
      {
        name: "packId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "recipient",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "totalPacksCreated",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PackOpenRequested",
    inputs: [
      {
        name: "opener",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "packId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "amountToOpen",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "requestId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PackOpened",
    inputs: [
      {
        name: "packId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "opener",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "numOfPacksOpened",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "rewardUnitsDistributed",
        type: "tuple[]",
        indexed: false,
        internalType: "struct ITokenBundle.Token[]",
        components: [
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenType",
            type: "uint8",
            internalType: "enum ITokenBundle.TokenType",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "totalAmount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PackRandomnessFulfilled",
    inputs: [
      {
        name: "packId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "requestId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
];

export class IPackVRFDirect__factory {
  static readonly abi = _abi;
  static createInterface(): IPackVRFDirectInterface {
    return new utils.Interface(_abi) as IPackVRFDirectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPackVRFDirect {
    return new Contract(address, _abi, signerOrProvider) as IPackVRFDirect;
  }
}
