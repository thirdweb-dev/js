/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReentrancyGuardInit,
  ReentrancyGuardInitInterface,
} from "../ReentrancyGuardInit";

const _abi = [
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212201319c1e8a13ba7e81199960b90c82cb81011d302b2a6fcc87a7dfb2cb3e8a2d864736f6c63430008170033";

type ReentrancyGuardInitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReentrancyGuardInitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReentrancyGuardInit__factory extends ContractFactory {
  constructor(...args: ReentrancyGuardInitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReentrancyGuardInit> {
    return super.deploy(overrides || {}) as Promise<ReentrancyGuardInit>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReentrancyGuardInit {
    return super.attach(address) as ReentrancyGuardInit;
  }
  override connect(signer: Signer): ReentrancyGuardInit__factory {
    return super.connect(signer) as ReentrancyGuardInit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReentrancyGuardInitInterface {
    return new utils.Interface(_abi) as ReentrancyGuardInitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReentrancyGuardInit {
    return new Contract(address, _abi, signerOrProvider) as ReentrancyGuardInit;
  }
}
