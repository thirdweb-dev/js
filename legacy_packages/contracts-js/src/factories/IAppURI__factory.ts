/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IAppURI, IAppURIInterface } from "../IAppURI";

const _abi = [
  {
    type: "function",
    name: "appURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setAppURI",
    inputs: [
      {
        name: "_uri",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AppURIUpdated",
    inputs: [
      {
        name: "prevURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "newURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
];

export class IAppURI__factory {
  static readonly abi = _abi;
  static createInterface(): IAppURIInterface {
    return new utils.Interface(_abi) as IAppURIInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAppURI {
    return new Contract(address, _abi, signerOrProvider) as IAppURI;
  }
}
