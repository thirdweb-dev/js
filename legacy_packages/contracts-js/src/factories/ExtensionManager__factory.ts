/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ExtensionManager,
  ExtensionManagerInterface,
} from "../ExtensionManager";

const _abi = [
  {
    type: "function",
    name: "_disableFunctionInExtension",
    inputs: [
      {
        name: "_extensionName",
        type: "string",
        internalType: "string",
      },
      {
        name: "_functionSelector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addExtension",
    inputs: [
      {
        name: "_extension",
        type: "tuple",
        internalType: "struct IExtension.Extension",
        components: [
          {
            name: "metadata",
            type: "tuple",
            internalType: "struct IExtension.ExtensionMetadata",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "metadataURI",
                type: "string",
                internalType: "string",
              },
              {
                name: "implementation",
                type: "address",
                internalType: "address",
              },
            ],
          },
          {
            name: "functions",
            type: "tuple[]",
            internalType: "struct IExtension.ExtensionFunction[]",
            components: [
              {
                name: "functionSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "functionSignature",
                type: "string",
                internalType: "string",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "disableFunctionInExtension",
    inputs: [
      {
        name: "_extensionName",
        type: "string",
        internalType: "string",
      },
      {
        name: "_functionSelector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "enableFunctionInExtension",
    inputs: [
      {
        name: "_extensionName",
        type: "string",
        internalType: "string",
      },
      {
        name: "_function",
        type: "tuple",
        internalType: "struct IExtension.ExtensionFunction",
        components: [
          {
            name: "functionSelector",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "functionSignature",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllExtensions",
    inputs: [],
    outputs: [
      {
        name: "allExtensions",
        type: "tuple[]",
        internalType: "struct IExtension.Extension[]",
        components: [
          {
            name: "metadata",
            type: "tuple",
            internalType: "struct IExtension.ExtensionMetadata",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "metadataURI",
                type: "string",
                internalType: "string",
              },
              {
                name: "implementation",
                type: "address",
                internalType: "address",
              },
            ],
          },
          {
            name: "functions",
            type: "tuple[]",
            internalType: "struct IExtension.ExtensionFunction[]",
            components: [
              {
                name: "functionSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "functionSignature",
                type: "string",
                internalType: "string",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getExtension",
    inputs: [
      {
        name: "extensionName",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IExtension.Extension",
        components: [
          {
            name: "metadata",
            type: "tuple",
            internalType: "struct IExtension.ExtensionMetadata",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "metadataURI",
                type: "string",
                internalType: "string",
              },
              {
                name: "implementation",
                type: "address",
                internalType: "address",
              },
            ],
          },
          {
            name: "functions",
            type: "tuple[]",
            internalType: "struct IExtension.ExtensionFunction[]",
            components: [
              {
                name: "functionSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "functionSignature",
                type: "string",
                internalType: "string",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMetadataForFunction",
    inputs: [
      {
        name: "functionSelector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IExtension.ExtensionMetadata",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "metadataURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "implementation",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeExtension",
    inputs: [
      {
        name: "_extensionName",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "replaceExtension",
    inputs: [
      {
        name: "_extension",
        type: "tuple",
        internalType: "struct IExtension.Extension",
        components: [
          {
            name: "metadata",
            type: "tuple",
            internalType: "struct IExtension.ExtensionMetadata",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "metadataURI",
                type: "string",
                internalType: "string",
              },
              {
                name: "implementation",
                type: "address",
                internalType: "address",
              },
            ],
          },
          {
            name: "functions",
            type: "tuple[]",
            internalType: "struct IExtension.ExtensionFunction[]",
            components: [
              {
                name: "functionSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "functionSignature",
                type: "string",
                internalType: "string",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ExtensionAdded",
    inputs: [
      {
        name: "name",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "extension",
        type: "tuple",
        indexed: false,
        internalType: "struct IExtension.Extension",
        components: [
          {
            name: "metadata",
            type: "tuple",
            internalType: "struct IExtension.ExtensionMetadata",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "metadataURI",
                type: "string",
                internalType: "string",
              },
              {
                name: "implementation",
                type: "address",
                internalType: "address",
              },
            ],
          },
          {
            name: "functions",
            type: "tuple[]",
            internalType: "struct IExtension.ExtensionFunction[]",
            components: [
              {
                name: "functionSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "functionSignature",
                type: "string",
                internalType: "string",
              },
            ],
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ExtensionRemoved",
    inputs: [
      {
        name: "name",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "extension",
        type: "tuple",
        indexed: false,
        internalType: "struct IExtension.Extension",
        components: [
          {
            name: "metadata",
            type: "tuple",
            internalType: "struct IExtension.ExtensionMetadata",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "metadataURI",
                type: "string",
                internalType: "string",
              },
              {
                name: "implementation",
                type: "address",
                internalType: "address",
              },
            ],
          },
          {
            name: "functions",
            type: "tuple[]",
            internalType: "struct IExtension.ExtensionFunction[]",
            components: [
              {
                name: "functionSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "functionSignature",
                type: "string",
                internalType: "string",
              },
            ],
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ExtensionReplaced",
    inputs: [
      {
        name: "name",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "extension",
        type: "tuple",
        indexed: false,
        internalType: "struct IExtension.Extension",
        components: [
          {
            name: "metadata",
            type: "tuple",
            internalType: "struct IExtension.ExtensionMetadata",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "metadataURI",
                type: "string",
                internalType: "string",
              },
              {
                name: "implementation",
                type: "address",
                internalType: "address",
              },
            ],
          },
          {
            name: "functions",
            type: "tuple[]",
            internalType: "struct IExtension.ExtensionFunction[]",
            components: [
              {
                name: "functionSelector",
                type: "bytes4",
                internalType: "bytes4",
              },
              {
                name: "functionSignature",
                type: "string",
                internalType: "string",
              },
            ],
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FunctionDisabled",
    inputs: [
      {
        name: "name",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "functionSelector",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
      {
        name: "extMetadata",
        type: "tuple",
        indexed: false,
        internalType: "struct IExtension.ExtensionMetadata",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "metadataURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "implementation",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FunctionEnabled",
    inputs: [
      {
        name: "name",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "functionSelector",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
      {
        name: "extFunction",
        type: "tuple",
        indexed: false,
        internalType: "struct IExtension.ExtensionFunction",
        components: [
          {
            name: "functionSelector",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "functionSignature",
            type: "string",
            internalType: "string",
          },
        ],
      },
      {
        name: "extMetadata",
        type: "tuple",
        indexed: false,
        internalType: "struct IExtension.ExtensionMetadata",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "metadataURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "implementation",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    anonymous: false,
  },
];

export class ExtensionManager__factory {
  static readonly abi = _abi;
  static createInterface(): ExtensionManagerInterface {
    return new utils.Interface(_abi) as ExtensionManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExtensionManager {
    return new Contract(address, _abi, signerOrProvider) as ExtensionManager;
  }
}
