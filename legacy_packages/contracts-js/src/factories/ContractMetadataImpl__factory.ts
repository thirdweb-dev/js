/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ContractMetadataImpl,
  ContractMetadataImplInterface,
} from "../ContractMetadataImpl";

const _abi = [
  {
    type: "function",
    name: "contractURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setContractURI",
    inputs: [
      {
        name: "_uri",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ContractURIUpdated",
    inputs: [
      {
        name: "prevURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "newURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610659806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063938e3d7b1461003b578063e8a3d48514610050575b600080fd5b61004e610049366004610379565b61006e565b005b6100586100c3565b604051610065919061046f565b60405180910390f35b61007661015b565b6100b75760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640160405180910390fd5b6100c0816101df565b50565b60606100cd6102c6565b80546100d890610489565b80601f016020809104026020016040519081016040528092919081815260200182805461010490610489565b80156101515780601f1061012657610100808354040283529160200191610151565b820191906000526020600020905b81548152906001019060200180831161013457829003601f168201915b5050505050905090565b6000306391d148548261016c6102ea565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b03166024820152604401602060405180830381865afa1580156101b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101da91906104c3565b905090565b60006101e96102c6565b80546101f490610489565b80601f016020809104026020016040519081016040528092919081815260200182805461022090610489565b801561026d5780601f106102425761010080835404028352916020019161026d565b820191906000526020600020905b81548152906001019060200180831161025057829003601f168201915b505050505090508161027d6102c6565b906102889082610536565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516102ba9291906105f5565b60405180910390a15050565b7f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da90090565b60405163572b6c0560e01b8152336004820152600090309063572b6c0590602401602060405180830381865afa158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c91906104c3565b1561035e575060131936013560601c90565b503390565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561038b57600080fd5b81356001600160401b03808211156103a257600080fd5b818401915084601f8301126103b657600080fd5b8135818111156103c8576103c8610363565b604051601f8201601f19908116603f011681019083821181831017156103f0576103f0610363565b8160405282815287602084870101111561040957600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b8181101561044f57602081850181015186830182015201610433565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006104826020830184610429565b9392505050565b600181811c9082168061049d57607f821691505b6020821081036104bd57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156104d557600080fd5b8151801515811461048257600080fd5b601f821115610531576000816000526020600020601f850160051c8101602086101561050e5750805b601f850160051c820191505b8181101561052d5782815560010161051a565b5050505b505050565b81516001600160401b0381111561054f5761054f610363565b6105638161055d8454610489565b846104e5565b602080601f83116001811461059857600084156105805750858301515b600019600386901b1c1916600185901b17855561052d565b600085815260208120601f198616915b828110156105c7578886015182559484019460019091019084016105a8565b50858210156105e55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006106086040830185610429565b828103602084015261061a8185610429565b9594505050505056fea2646970667358221220ba8893e9f5f4919fd2e583821cf7995963754cb7daff7b97cafee4d1a855798864736f6c63430008170033";

type ContractMetadataImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractMetadataImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractMetadataImpl__factory extends ContractFactory {
  constructor(...args: ContractMetadataImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractMetadataImpl> {
    return super.deploy(overrides || {}) as Promise<ContractMetadataImpl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractMetadataImpl {
    return super.attach(address) as ContractMetadataImpl;
  }
  override connect(signer: Signer): ContractMetadataImpl__factory {
    return super.connect(signer) as ContractMetadataImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractMetadataImplInterface {
    return new utils.Interface(_abi) as ContractMetadataImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractMetadataImpl {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ContractMetadataImpl;
  }
}
