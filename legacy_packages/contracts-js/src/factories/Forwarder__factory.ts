/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Forwarder, ForwarderInterface } from "../Forwarder";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "eip712Domain",
    inputs: [],
    outputs: [
      {
        name: "fields",
        type: "bytes1",
        internalType: "bytes1",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "version",
        type: "string",
        internalType: "string",
      },
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "verifyingContract",
        type: "address",
        internalType: "address",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "extensions",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "req",
        type: "tuple",
        internalType: "struct Forwarder.ForwardRequest",
        components: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getNonce",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verify",
    inputs: [
      {
        name: "req",
        type: "tuple",
        internalType: "struct Forwarder.ForwardRequest",
        components: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "EIP712DomainChanged",
    inputs: [],
    anonymous: false,
  },
  {
    type: "error",
    name: "InvalidShortString",
    inputs: [],
  },
  {
    type: "error",
    name: "StringTooLong",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604080518082018252600f81526e23a9a73b19102337b93bb0b93232b960891b60208083019190915282518084019093526005835264302e302e3160d81b90830152906200006382600062000111565b610120526200007481600162000111565b61014052815160208084019190912060e052815190820120610100524660a0526200010260e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526200037f565b6000602083511015620001315762000129836200014a565b905062000144565b816200013e84826200023d565b5060ff90505b92915050565b600080829050601f8151111562000181578260405163305a27a960e01b815260040162000178919062000309565b60405180910390fd5b80516200018e826200035a565b179392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001c157607f821691505b602082108103620001e257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000238576000816000526020600020601f850160051c81016020861015620002135750805b601f850160051c820191505b8181101562000234578281556001016200021f565b5050505b505050565b81516001600160401b0381111562000259576200025962000196565b62000271816200026a8454620001ac565b84620001e8565b602080601f831160018114620002a95760008415620002905750858301515b600019600386901b1c1916600185901b17855562000234565b600085815260208120601f198616915b82811015620002da57888601518255948401946001909101908401620002b9565b5085821015620002f95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352835180602085015260005b8181101562000339578581018301518582016040015282016200031b565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620001e25760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051610e33620003da60003960006103670152600061033d0152600061074d0152600061072501526000610680015260006106aa015260006106d40152610e336000f3fe60806040526004361061003f5760003560e01c80632d0335ab1461004457806347153f821461008d57806384b0196e146100ae578063bf5d3bdb146100d6575b600080fd5b34801561005057600080fd5b5061007a61005f366004610a12565b6001600160a01b031660009081526002602052604090205490565b6040519081526020015b60405180910390f35b6100a061009b366004610a42565b610106565b604051610084929190610b30565b3480156100ba57600080fd5b506100c361032f565b6040516100849796959493929190610b53565b3480156100e257600080fd5b506100f66100f1366004610a42565b6103b7565b6040519015158152602001610084565b600060606101158585856103b7565b6101815760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f6573604482015271081b9bdd081b585d18da081c995c5d595cdd60721b60648201526084015b60405180910390fd5b61019060808601356001610bec565b600260006101a16020890189610a12565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101db9190610a12565b6001600160a01b0316606088013560408901356101fb60a08b018b610c0d565b61020860208d018d610a12565b60405160200161021a93929190610c53565b60408051601f198184030181529082905261023491610c74565b600060405180830381858888f193505050503d8060008114610272576040519150601f19603f3d011682016040523d82523d6000602084013e610277565b606091505b509150915081610306576044815110156102d35760405162461bcd60e51b815260206004820152601d60248201527f5472616e73616374696f6e2072657665727465642073696c656e746c790000006044820152606401610178565b600481019050808060200190518101906102ed9190610ca6565b60405162461bcd60e51b81526004016101789190610d52565b610315603f6060890135610d65565b5a1161032357610323610d87565b90969095509350505050565b6000606080828080836103627f000000000000000000000000000000000000000000000000000000000000000083610536565b61038d7f00000000000000000000000000000000000000000000000000000000000000006001610536565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6000806104ca84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104c492507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e489150610427905060208a018a610a12565b61043760408b0160208c01610a12565b60408b013560608c013560808d013561045360a08f018f610c0d565b604051610461929190610d9d565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206105e3565b90610610565b90506080850135600260006104e26020890189610a12565b6001600160a01b03166001600160a01b031681526020019081526020016000205414801561052d57506105186020860186610a12565b6001600160a01b0316816001600160a01b0316145b95945050505050565b606060ff83146105505761054983610634565b90506105dd565b81805461055c90610dad565b80601f016020809104026020016040519081016040528092919081815260200182805461058890610dad565b80156105d55780601f106105aa576101008083540402835291602001916105d5565b820191906000526020600020905b8154815290600101906020018083116105b857829003601f168201915b505050505090505b92915050565b60006105dd6105f0610673565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600061061f85856107a3565b9150915061062c816107e8565b509392505050565b6060600061064183610930565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156106cc57507f000000000000000000000000000000000000000000000000000000000000000046145b156106f657507f000000000000000000000000000000000000000000000000000000000000000090565b61079e604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b905090565b60008082516041036107d95760208301516040840151606085015160001a6107cd87828585610958565b945094505050506107e1565b506000905060025b9250929050565b60008160048111156107fc576107fc610de7565b036108045750565b600181600481111561081857610818610de7565b036108605760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610178565b600281600481111561087457610874610de7565b036108c15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610178565b60038160048111156108d5576108d5610de7565b0361092d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610178565b50565b600060ff8216601f8111156105dd57604051632cd44ac360e21b815260040160405180910390fd5b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156109855750600090506003610a09565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156109d9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610a0257600060019250925050610a09565b9150600090505b94509492505050565b600060208284031215610a2457600080fd5b81356001600160a01b0381168114610a3b57600080fd5b9392505050565b600080600060408486031215610a5757600080fd5b83356001600160401b0380821115610a6e57600080fd5b9085019060c08288031215610a8257600080fd5b90935060208501359080821115610a9857600080fd5b818601915086601f830112610aac57600080fd5b813581811115610abb57600080fd5b876020828501011115610acd57600080fd5b6020830194508093505050509250925092565b60005b83811015610afb578181015183820152602001610ae3565b50506000910152565b60008151808452610b1c816020860160208601610ae0565b601f01601f19169290920160200192915050565b8215158152604060208201526000610b4b6040830184610b04565b949350505050565b60ff60f81b881681526000602060e06020840152610b7460e084018a610b04565b8381036040850152610b86818a610b04565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015610bda57835183529284019291840191600101610bbe565b50909c9b505050505050505050505050565b808201808211156105dd57634e487b7160e01b600052601160045260246000fd5b6000808335601e19843603018112610c2457600080fd5b8301803591506001600160401b03821115610c3e57600080fd5b6020019150368190038213156107e157600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b60008251610c86818460208701610ae0565b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610cb857600080fd5b81516001600160401b0380821115610ccf57600080fd5b818401915084601f830112610ce357600080fd5b815181811115610cf557610cf5610c90565b604051601f8201601f19908116603f01168101908382118183101715610d1d57610d1d610c90565b81604052828152876020848701011115610d3657600080fd5b610d47836020830160208801610ae0565b979650505050505050565b602081526000610a3b6020830184610b04565b600082610d8257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052600160045260246000fd5b8183823760009101908152919050565b600181811c90821680610dc157607f821691505b602082108103610de157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122075e4169afb651a2e4fa04c99f93d2edbdb4a5cc3b07548312f05db05d759756d64736f6c63430008170033";

type ForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Forwarder__factory extends ContractFactory {
  constructor(...args: ForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Forwarder> {
    return super.deploy(overrides || {}) as Promise<Forwarder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Forwarder {
    return super.attach(address) as Forwarder;
  }
  override connect(signer: Signer): Forwarder__factory {
    return super.connect(signer) as Forwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForwarderInterface {
    return new utils.Interface(_abi) as ForwarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Forwarder {
    return new Contract(address, _abi, signerOrProvider) as Forwarder;
  }
}
