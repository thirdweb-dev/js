/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MetaTx, MetaTxInterface } from "../MetaTx";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "trustedForwarder",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isTrustedForwarder",
    inputs: [
      {
        name: "forwarder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102bf3803806102bf83398101604081905261002f916100ea565b8060005b81518110156100b05760017f82aadcdf5bea62fd30615b6c0754b644e71b6c1e8c55b71bb927ad005b504f006000016000848481518110610076576100766101ae565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610033565b5050506101c4565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146100e557600080fd5b919050565b600060208083850312156100fd57600080fd5b82516001600160401b038082111561011457600080fd5b818501915085601f83011261012857600080fd5b81518181111561013a5761013a6100b8565b8060051b604051601f19603f8301168101818110858211171561015f5761015f6100b8565b60405291825284820192508381018501918883111561017d57600080fd5b938501935b828510156101a257610193856100ce565b84529385019392850192610182565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60ed806101d26000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063572b6c0514602d575b600080fd5b607560383660046089565b6001600160a01b031660009081527f82aadcdf5bea62fd30615b6c0754b644e71b6c1e8c55b71bb927ad005b504f00602052604090205460ff1690565b604051901515815260200160405180910390f35b600060208284031215609a57600080fd5b81356001600160a01b038116811460b057600080fd5b939250505056fea2646970667358221220eff1a985c37134ec9fdc0e916eeb7180bf3b96fbb2a7ea8e6bc100e914234ad364736f6c63430008170033";

type MetaTxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetaTxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetaTx__factory extends ContractFactory {
  constructor(...args: MetaTxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    trustedForwarder: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaTx> {
    return super.deploy(trustedForwarder, overrides || {}) as Promise<MetaTx>;
  }
  override getDeployTransaction(
    trustedForwarder: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(trustedForwarder, overrides || {});
  }
  override attach(address: string): MetaTx {
    return super.attach(address) as MetaTx;
  }
  override connect(signer: Signer): MetaTx__factory {
    return super.connect(signer) as MetaTx__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaTxInterface {
    return new utils.Interface(_abi) as MetaTxInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MetaTx {
    return new Contract(address, _abi, signerOrProvider) as MetaTx;
  }
}
