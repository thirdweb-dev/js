/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Base, ERC20BaseInterface } from "../ERC20Base";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_defaultAdmin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
      {
        name: "_symbol",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "DOMAIN_SEPARATOR",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "burnFrom",
    inputs: [
      {
        name: "_account",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "contractURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decreaseAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "subtractedValue",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "increaseAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "addedValue",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mintTo",
    inputs: [
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nonces",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "permit",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "deadline",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "v",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "r",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "s",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setContractURI",
    inputs: [
      {
        name: "_uri",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOwner",
    inputs: [
      {
        name: "_newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContractURIUpdated",
    inputs: [
      {
        name: "prevURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "newURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnerUpdated",
    inputs: [
      {
        name: "prevOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokensMinted",
    inputs: [
      {
        name: "mintedTo",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "quantityMinted",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ContractMetadataUnauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableUnauthorized",
    inputs: [],
  },
];

const _bytecode =
  "0x6101006040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b506040516200214f3803806200214f8339810160408190526200005991620002f4565b8181818160056200006b83826200040f565b5060066200007a82826200040f565b50504660a052503060c0526200008f620000a9565b60805250620000a090508362000140565b505050620004db565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620000d662000192565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b606060058054620001a3906200037e565b80601f0160208091040260200160405190810160405280929190818152602001828054620001d1906200037e565b8015620002225780601f10620001f65761010080835404028352916020019162000222565b820191906000526020600020905b8154815290600101906020018083116200020457829003601f168201915b5050505050905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200025457600080fd5b81516001600160401b03808211156200027157620002716200022c565b604051601f8301601f19908116603f011681019082821181831017156200029c576200029c6200022c565b8160405283815260209250866020858801011115620002ba57600080fd5b600091505b83821015620002de5785820183015181830184015290820190620002bf565b6000602085830101528094505050505092915050565b6000806000606084860312156200030a57600080fd5b83516001600160a01b03811681146200032257600080fd5b60208501519093506001600160401b03808211156200034057600080fd5b6200034e8783880162000242565b935060408601519150808211156200036557600080fd5b50620003748682870162000242565b9150509250925092565b600181811c908216806200039357607f821691505b602082108103620003b457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200040a576000816000526020600020601f850160051c81016020861015620003e55750805b601f850160051c820191505b818110156200040657828155600101620003f1565b5050505b505050565b81516001600160401b038111156200042b576200042b6200022c565b62000443816200043c84546200037e565b84620003ba565b602080601f8311600181146200047b5760008415620004625750858301515b600019600386901b1c1916600185901b17855562000406565b600085815260208120601f198616915b82811015620004ac578886015182559484019460019091019084016200048b565b5085821015620004cb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e051611c3a62000515600039600061090b015260006103d8015260006104020152600061042c0152611c3a6000f3fe608060405234801561001057600080fd5b50600436106101125760003560e01c806306fdde0314610117578063095ea7b31461013557806313af40351461015857806318160ddd1461016d57806323b872dd1461017f578063313ce567146101925780633644e515146101a157806339509351146101a957806342966c68146101bc578063449a52f8146101cf57806370a08231146101e257806379cc6790146101f55780637ecebe00146102085780638da5cb5b1461021b578063938e3d7b1461023b57806395d89b411461024e578063a457c2d714610256578063a9059cbb14610269578063ac9650d81461027c578063d505accf1461029c578063dd62ed3e146102af578063e8a3d485146102c2575b600080fd5b61011f6102ca565b60405161012c9190611621565b60405180910390f35b610148610143366004611650565b61035c565b604051901515815260200161012c565b61016b61016636600461167a565b610376565b005b6004545b60405190815260200161012c565b61014861018d366004611695565b6103a7565b6040516012815260200161012c565b6101716103cb565b6101486101b7366004611650565b61045b565b61016b6101ca3660046116d1565b61049a565b61016b6101dd366004611650565b6104d5565b6101716101f036600461167a565b610578565b61016b610203366004611650565b610593565b61017161021636600461167a565b610648565b610223610666565b6040516001600160a01b03909116815260200161012c565b61016b610249366004611700565b610675565b61011f6106a3565b610148610264366004611650565b6106b2565b610148610277366004611650565b610744565b61028f61028a3660046117b0565b610752565b60405161012c9190611824565b61016b6102aa366004611888565b6108b7565b6101716102bd3660046118fb565b610a3d565b61011f610a68565b6060600580546102d99061192e565b80601f01602080910402602001604051908101604052809291908181526020018280546103059061192e565b80156103525780601f1061032757610100808354040283529160200191610352565b820191906000526020600020905b81548152906001019060200180831161033557829003601f168201915b5050505050905090565b60003361036a818585610af6565b60019150505b92915050565b61037e610c1a565b61039b576040516316ccb9cb60e11b815260040160405180910390fd5b6103a481610c3d565b50565b6000336103b5858285610c8f565b6103c0858585610d09565b506001949350505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561042457507f000000000000000000000000000000000000000000000000000000000000000046145b1561044e57507f000000000000000000000000000000000000000000000000000000000000000090565b610456610ec5565b905090565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919061036a9082908690610495908790611978565b610af6565b806104a433610578565b10156104cb5760405162461bcd60e51b81526004016104c29061198b565b60405180910390fd5b6103a43382610f5a565b6104dd610c1a565b6105235760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b60448201526064016104c2565b8060000361056a5760405162461bcd60e51b815260206004820152601460248201527326b4b73a34b733903d32b937903a37b5b2b7399760611b60448201526064016104c2565b6105748282611096565b5050565b6001600160a01b031660009081526002602052604090205490565b61059b610c1a565b6105e15760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a3790313ab9371760491b60448201526064016104c2565b806105eb83610578565b10156106095760405162461bcd60e51b81526004016104c29061198b565b6000816106168433610a3d565b61062091906119b7565b905061062e83336000610af6565b610639833383610af6565b6106438383610f5a565b505050565b6001600160a01b038116600090815260076020526040812054610370565b6001546001600160a01b031690565b61067d610c1a565b61069a57604051639f7f092560e01b815260040160405180910390fd5b6103a481611163565b6060600680546102d99061192e565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909190838110156107375760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104c2565b6103c08286868403610af6565b60003361036a818585610d09565b6060816001600160401b0381111561076c5761076c6116ea565b60405190808252806020026020018201604052801561079f57816020015b606081526020019060019003908161078a5790505b509050336000805b848110156108ae57811561082657610804308787848181106107cb576107cb6119ca565b90506020028101906107dd91906119e0565b866040516020016107f093929190611a2d565b60405160208183030381529060405261123e565b848281518110610816576108166119ca565b60200260200101819052506108a6565b6108883087878481811061083c5761083c6119ca565b905060200281019061084e91906119e0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061123e92505050565b84828151811061089a5761089a6119ca565b60200260200101819052505b6001016107a7565b50505092915050565b834211156109075760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104c2565b60007f00000000000000000000000000000000000000000000000000000000000000008888886109368c61126a565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006109b36109936103cb565b8360405161190160f01b8152600281019290925260228201526042902090565b905060006109c382878787611292565b9050896001600160a01b0316816001600160a01b031614610a265760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104c2565b610a318a8a8a610af6565b50505050505050505050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b60008054610a759061192e565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa19061192e565b8015610aee5780601f10610ac357610100808354040283529160200191610aee565b820191906000526020600020905b815481529060010190602001808311610ad157829003601f168201915b505050505081565b6001600160a01b038316610b585760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104c2565b6001600160a01b038216610bb95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104c2565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610c24610666565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6000610c9b8484610a3d565b90506000198114610d035781811015610cf65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104c2565b610d038484848403610af6565b50505050565b6001600160a01b038316610d6d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104c2565b6001600160a01b038216610dcf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104c2565b6001600160a01b03831660009081526002602052604090205481811015610e475760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104c2565b6001600160a01b03808516600090815260026020526040808220858503905591851681529081208054849290610e7e908490611978565b92505081905550826001600160a01b0316846001600160a01b0316600080516020611be583398151915284604051610eb891815260200190565b60405180910390a3610d03565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610ef06102ca565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b038216610fba5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104c2565b6001600160a01b0382166000908152600260205260409020548181101561102e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104c2565b6001600160a01b038316600090815260026020526040812083830390556004805484929061105d9084906119b7565b90915550506040518281526000906001600160a01b03851690600080516020611be58339815191529060200160405180910390a3505050565b6001600160a01b0382166110ec5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104c2565b80600460008282546110fe9190611978565b90915550506001600160a01b0382166000908152600260205260408120805483929061112b908490611978565b90915550506040518181526001600160a01b03831690600090600080516020611be58339815191529060200160405180910390a35050565b60008080546111719061192e565b80601f016020809104026020016040519081016040528092919081815260200182805461119d9061192e565b80156111ea5780601f106111bf576101008083540402835291602001916111ea565b820191906000526020600020905b8154815290600101906020018083116111cd57829003601f168201915b5050505050905081600090816112009190611a9e565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611232929190611b5d565b60405180910390a15050565b60606112638383604051806060016040528060278152602001611bbe602791396112bc565b9392505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b60008060006112a387878787611334565b915091506112b0816113ee565b5090505b949350505050565b6060600080856001600160a01b0316856040516112d99190611b8b565b600060405180830381855af49150503d8060008114611314576040519150601f19603f3d011682016040523d82523d6000602084013e611319565b606091505b509150915061132a86838387611533565b9695505050505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561136157506000905060036113e5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156113b5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166113de576000600192509250506113e5565b9150600090505b94509492505050565b600081600481111561140257611402611ba7565b0361140a5750565b600181600481111561141e5761141e611ba7565b036114665760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016104c2565b600281600481111561147a5761147a611ba7565b036114c75760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104c2565b60038160048111156114db576114db611ba7565b036103a45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104c2565b606083156115a257825160000361159b576001600160a01b0385163b61159b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104c2565b50816112b4565b6112b483838151156115b75781518083602001fd5b8060405162461bcd60e51b81526004016104c29190611621565b60005b838110156115ec5781810151838201526020016115d4565b50506000910152565b6000815180845261160d8160208601602086016115d1565b601f01601f19169290920160200192915050565b60208152600061126360208301846115f5565b80356001600160a01b038116811461164b57600080fd5b919050565b6000806040838503121561166357600080fd5b61166c83611634565b946020939093013593505050565b60006020828403121561168c57600080fd5b61126382611634565b6000806000606084860312156116aa57600080fd5b6116b384611634565b92506116c160208501611634565b9150604084013590509250925092565b6000602082840312156116e357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561171257600080fd5b81356001600160401b038082111561172957600080fd5b818401915084601f83011261173d57600080fd5b81358181111561174f5761174f6116ea565b604051601f8201601f19908116603f01168101908382118183101715611777576117776116ea565b8160405282815287602084870101111561179057600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080602083850312156117c357600080fd5b82356001600160401b03808211156117da57600080fd5b818501915085601f8301126117ee57600080fd5b8135818111156117fd57600080fd5b8660208260051b850101111561181257600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561187b57603f198886030184526118698583516115f5565b9450928501929085019060010161184d565b5092979650505050505050565b600080600080600080600060e0888a0312156118a357600080fd5b6118ac88611634565b96506118ba60208901611634565b95506040880135945060608801359350608088013560ff811681146118de57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561190e57600080fd5b61191783611634565b915061192560208401611634565b90509250929050565b600181811c9082168061194257607f821691505b60208210810361128c57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561037057610370611962565b6020808252601290820152716e6f7420656e6f7567682062616c616e636560701b604082015260600190565b8181038181111561037057610370611962565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126119f757600080fd5b8301803591506001600160401b03821115611a1157600080fd5b602001915036819003821315611a2657600080fd5b9250929050565b8284823760609190911b6001600160601b0319169101908152601401919050565b601f821115610643576000816000526020600020601f850160051c81016020861015611a775750805b601f850160051c820191505b81811015611a9657828155600101611a83565b505050505050565b81516001600160401b03811115611ab757611ab76116ea565b611acb81611ac5845461192e565b84611a4e565b602080601f831160018114611b005760008415611ae85750858301515b600019600386901b1c1916600185901b178555611a96565b600085815260208120601f198616915b82811015611b2f57888601518255948401946001909101908401611b10565b5085821015611b4d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611b7060408301856115f5565b8281036020840152611b8281856115f5565b95945050505050565b60008251611b9d8184602087016115d1565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220d2bdfebbe82d0d7618865c1d05f5be946b44b41573835d9fe395f135f6ba241864736f6c63430008170033";

type ERC20BaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20BaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Base__factory extends ContractFactory {
  constructor(...args: ERC20BaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _defaultAdmin: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Base> {
    return super.deploy(
      _defaultAdmin,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<ERC20Base>;
  }
  override getDeployTransaction(
    _defaultAdmin: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _defaultAdmin,
      _name,
      _symbol,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Base {
    return super.attach(address) as ERC20Base;
  }
  override connect(signer: Signer): ERC20Base__factory {
    return super.connect(signer) as ERC20Base__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20BaseInterface {
    return new utils.Interface(_abi) as ERC20BaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Base {
    return new Contract(address, _abi, signerOrProvider) as ERC20Base;
  }
}
