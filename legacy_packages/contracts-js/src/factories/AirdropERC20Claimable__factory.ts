/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AirdropERC20Claimable,
  AirdropERC20ClaimableInterface,
} from "../AirdropERC20Claimable";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "airdropTokenAddress",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "availableAmount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claim",
    inputs: [
      {
        name: "_receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "_quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_proofs",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
      {
        name: "_proofMaxQuantityForWallet",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "expirationTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_trustedForwarders",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_tokenOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_airdropTokenAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_airdropAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_expirationTimestamp",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_openClaimLimitPerWallet",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_merkleRoot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isTrustedForwarder",
    inputs: [
      {
        name: "forwarder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "merkleRoot",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "openClaimLimitPerWallet",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "supplyClaimedByWallet",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verifyClaim",
    inputs: [
      {
        name: "_claimer",
        type: "address",
        internalType: "address",
      },
      {
        name: "_quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_proofs",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
      {
        name: "_proofMaxQuantityForWallet",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokensClaimed",
    inputs: [
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "quantityClaimed",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6110a8806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c8063097b3cdb146100a95780630ce56cac146100be5780632eb4a7ab146100f15780633b4b57b0146100fa5780633fb9baee1461010d578063572b6c051461011657806391f7cfb9146101395780639f43ddd214610142578063a3e676101461014b578063a7eae9ae14610176578063ac9650d814610189578063b73e0e8b146101a9575b600080fd5b6100bc6100b7366004610c4d565b6101bc565b005b6100de6100cc366004610cae565b609d6020526000908152604090205481565b6040519081526020015b60405180910390f35b6100de609c5481565b6100bc610108366004610c4d565b61037c565b6100de609b5481565b610129610124366004610cae565b61040c565b60405190151581526020016100e8565b6100de60995481565b6100de609a5481565b60985461015e906001600160a01b031681565b6040516001600160a01b0390911681526020016100e8565b6100bc610184366004610cdf565b61042a565b61019c610197366004610dea565b610596565b6040516100e89190610e7b565b60975461015e906001600160a01b031681565b609c546000901561021357609c546040516001600160601b0319606089901b1660208201526034810184905261020f91869186919060540160405160208183030381529060405280519060200120610713565b5090505b6001600160a01b0386166000908152609d6020526040902054856102755760405162461bcd60e51b8152602060048201526014602482015273436c61696d696e67207a65726f20746f6b656e7360601b60448201526064015b60405180910390fd5b6099548611156102c35760405162461bcd60e51b815260206004820152601960248201527832bc31b2b2b2399030bb30b4b630b13632903a37b5b2b7399760391b604482015260640161026c565b609a548015806102d257508042105b6103115760405162461bcd60e51b815260206004820152601060248201526f30b4b9323937b81032bc3834b932b21760811b604482015260640161026c565b60008361032057609b54610322565b845b90508061032f848a610ef5565b11156103715760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21038bab0b73a34ba3c9760791b604482015260640161026c565b505050505050505050565b61038461079e565b600061038e6107f7565b905061039d81868686866101bc565b6103a78686610806565b856001600160a01b03166103b96107f7565b6001600160a01b03167fa86305abc2db271df4609aa86a8d044bc11fb36939841bfdad6c1ab2b26e9471876040516103f391815260200190565b60405180910390a35061040560018055565b5050505050565b6001600160a01b031660009081526065602052604090205460ff1690565b600054610100900460ff161580801561044a5750600054600160ff909116105b8061046b575061045930610929565b15801561046b575060005460ff166001145b6104ce5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161026c565b6000805460ff1916600117905580156104f1576000805461ff0019166101001790555b6104f9610938565b61050288610969565b609880546001600160a01b03808a166001600160a01b03199283161790925560978054928916929091169190911790556099859055609a849055609b839055609c829055801561058c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6060816001600160401b038111156105b0576105b0610cc9565b6040519080825280602002602001820160405280156105e357816020015b60608152602001906001900390816105ce5790505b50905060006105f06107f7565b9050336001600160a01b038216141560005b848110156107095781156106815761065f3087878481811061062657610626610f08565b90506020028101906106389190610f1e565b8660405160200161064b93929190610f64565b6040516020818303038152906040526109a4565b84828151811061067157610671610f08565b6020026020010181905250610701565b6106e33087878481811061069757610697610f08565b90506020028101906106a99190610f1e565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109a492505050565b8482815181106106f5576106f5610f08565b60200260200101819052505b600101610602565b5050505b92915050565b6000808281805b8781101561078f5761072d600283610f85565b9150600089898381811061074357610743610f08565b9050602002013590508084116107685760008481526020829052604090209350610786565b60008181526020859052604090209350610783600184610ef5565b92505b5060010161071a565b50941496939550929350505050565b6002600154036107f05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161026c565b6002600155565b60006108016109d0565b905090565b80609d60006108136107f7565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546108429190610ef5565b92505081905550806099600082825461085b9190610f9c565b90915550506097546098546040516323b872dd60e01b81526001600160a01b0391821660048201528482166024820152604481018490529116906323b872dd906064016020604051808303816000875af11580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e19190610faf565b61091f5760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015260640161026c565b5050565b60018055565b6001600160a01b03163b151590565b600054610100900460ff1661095f5760405162461bcd60e51b815260040161026c90610fd1565b6109676109f2565b565b600054610100900460ff166109905760405162461bcd60e51b815260040161026c90610fd1565b610998610a19565b6109a181610a40565b50565b60606109c9838360405180606001604052806027815260200161104c60279139610ac5565b9392505050565b60006109db3361040c565b156109ed575060131936013560601c90565b503390565b600054610100900460ff166109235760405162461bcd60e51b815260040161026c90610fd1565b600054610100900460ff166109675760405162461bcd60e51b815260040161026c90610fd1565b600054610100900460ff16610a675760405162461bcd60e51b815260040161026c90610fd1565b60005b815181101561091f57600160656000848481518110610a8b57610a8b610f08565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610a6a565b6060600080856001600160a01b031685604051610ae2919061101c565b600060405180830381855af49150503d8060008114610b1d576040519150601f19603f3d011682016040523d82523d6000602084013e610b22565b606091505b5091509150610b3386838387610b3d565b9695505050505050565b60608315610baa578251600003610ba357610b5785610929565b610ba35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161026c565b5081610bb4565b610bb48383610bbc565b949350505050565b815115610bcc5781518083602001fd5b8060405162461bcd60e51b815260040161026c9190611038565b80356001600160a01b0381168114610bfd57600080fd5b919050565b60008083601f840112610c1457600080fd5b5081356001600160401b03811115610c2b57600080fd5b6020830191508360208260051b8501011115610c4657600080fd5b9250929050565b600080600080600060808688031215610c6557600080fd5b610c6e86610be6565b94506020860135935060408601356001600160401b03811115610c9057600080fd5b610c9c88828901610c02565b96999598509660600135949350505050565b600060208284031215610cc057600080fd5b6109c982610be6565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a031215610cfa57600080fd5b87356001600160401b0380821115610d1157600080fd5b818a0191508a601f830112610d2557600080fd5b8135602082821115610d3957610d39610cc9565b8160051b604051601f19603f83011681018181108682111715610d5e57610d5e610cc9565b60405292835281830193508481018201928e841115610d7c57600080fd5b948201945b83861015610da157610d9286610be6565b85529482019493820193610d81565b9b50610db090508c8201610be6565b995050505050610dc260408901610be6565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b60008060208385031215610dfd57600080fd5b82356001600160401b03811115610e1357600080fd5b610e1f85828601610c02565b90969095509350505050565b60005b83811015610e46578181015183820152602001610e2e565b50506000910152565b60008151808452610e67816020860160208601610e2b565b601f01601f19169290920160200192915050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b82811015610ed257603f19888603018452610ec0858351610e4f565b94509285019290850190600101610ea4565b5092979650505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561070d5761070d610edf565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610f3557600080fd5b8301803591506001600160401b03821115610f4f57600080fd5b602001915036819003821315610c4657600080fd5b8284823760609190911b6001600160601b0319169101908152601401919050565b808202811582820484141761070d5761070d610edf565b8181038181111561070d5761070d610edf565b600060208284031215610fc157600080fd5b815180151581146109c957600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000825161102e818460208701610e2b565b9190910192915050565b6020815260006109c96020830184610e4f56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122026b33320e9df29ffb466c5f5abf1ae86d9d7563e5940b459145df7b498c0b00c64736f6c63430008170033";

type AirdropERC20ClaimableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropERC20ClaimableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropERC20Claimable__factory extends ContractFactory {
  constructor(...args: AirdropERC20ClaimableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AirdropERC20Claimable> {
    return super.deploy(overrides || {}) as Promise<AirdropERC20Claimable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AirdropERC20Claimable {
    return super.attach(address) as AirdropERC20Claimable;
  }
  override connect(signer: Signer): AirdropERC20Claimable__factory {
    return super.connect(signer) as AirdropERC20Claimable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropERC20ClaimableInterface {
    return new utils.Interface(_abi) as AirdropERC20ClaimableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AirdropERC20Claimable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AirdropERC20Claimable;
  }
}
