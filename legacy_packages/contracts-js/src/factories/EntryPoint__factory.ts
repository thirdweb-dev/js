/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EntryPoint, EntryPointInterface } from "../EntryPoint";

const _abi = [
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "SIG_VALIDATION_FAILED",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_validateSenderAndPaymaster",
    inputs: [
      {
        name: "initCode",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "paymasterAndData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addStake",
    inputs: [
      {
        name: "unstakeDelaySec",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "depositTo",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "deposits",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "deposit",
        type: "uint112",
        internalType: "uint112",
      },
      {
        name: "staked",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "stake",
        type: "uint112",
        internalType: "uint112",
      },
      {
        name: "unstakeDelaySec",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "withdrawTime",
        type: "uint48",
        internalType: "uint48",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDepositInfo",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "info",
        type: "tuple",
        internalType: "struct IStakeManager.DepositInfo",
        components: [
          {
            name: "deposit",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "staked",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "stake",
            type: "uint112",
            internalType: "uint112",
          },
          {
            name: "unstakeDelaySec",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "withdrawTime",
            type: "uint48",
            internalType: "uint48",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNonce",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "key",
        type: "uint192",
        internalType: "uint192",
      },
    ],
    outputs: [
      {
        name: "nonce",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSenderAddress",
    inputs: [
      {
        name: "initCode",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getUserOpHash",
    inputs: [
      {
        name: "userOp",
        type: "tuple",
        internalType: "struct UserOperation",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "initCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callGasLimit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "verificationGasLimit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxFeePerGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxPriorityFeePerGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "paymasterAndData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "handleAggregatedOps",
    inputs: [
      {
        name: "opsPerAggregator",
        type: "tuple[]",
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        components: [
          {
            name: "userOps",
            type: "tuple[]",
            internalType: "struct UserOperation[]",
            components: [
              {
                name: "sender",
                type: "address",
                internalType: "address",
              },
              {
                name: "nonce",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "initCode",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "callData",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "callGasLimit",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "verificationGasLimit",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "preVerificationGas",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "maxFeePerGas",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "maxPriorityFeePerGas",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "paymasterAndData",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "signature",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "aggregator",
            type: "address",
            internalType: "contract IAggregator",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "beneficiary",
        type: "address",
        internalType: "address payable",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "handleOps",
    inputs: [
      {
        name: "ops",
        type: "tuple[]",
        internalType: "struct UserOperation[]",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "initCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callGasLimit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "verificationGasLimit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxFeePerGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxPriorityFeePerGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "paymasterAndData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "beneficiary",
        type: "address",
        internalType: "address payable",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "incrementNonce",
    inputs: [
      {
        name: "key",
        type: "uint192",
        internalType: "uint192",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "innerHandleOp",
    inputs: [
      {
        name: "callData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "opInfo",
        type: "tuple",
        internalType: "struct EntryPoint.UserOpInfo",
        components: [
          {
            name: "mUserOp",
            type: "tuple",
            internalType: "struct EntryPoint.MemoryUserOp",
            components: [
              {
                name: "sender",
                type: "address",
                internalType: "address",
              },
              {
                name: "nonce",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "callGasLimit",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "verificationGasLimit",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "preVerificationGas",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "paymaster",
                type: "address",
                internalType: "address",
              },
              {
                name: "maxFeePerGas",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "maxPriorityFeePerGas",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "userOpHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "prefund",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "contextOffset",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "preOpGas",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "context",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "actualGasCost",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "nonceSequenceNumber",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint192",
        internalType: "uint192",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "simulateHandleOp",
    inputs: [
      {
        name: "op",
        type: "tuple",
        internalType: "struct UserOperation",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "initCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callGasLimit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "verificationGasLimit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxFeePerGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxPriorityFeePerGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "paymasterAndData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
      {
        name: "targetCallData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "simulateValidation",
    inputs: [
      {
        name: "userOp",
        type: "tuple",
        internalType: "struct UserOperation",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "initCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callGasLimit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "verificationGasLimit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxFeePerGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxPriorityFeePerGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "paymasterAndData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unlockStake",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawStake",
    inputs: [
      {
        name: "withdrawAddress",
        type: "address",
        internalType: "address payable",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawTo",
    inputs: [
      {
        name: "withdrawAddress",
        type: "address",
        internalType: "address payable",
      },
      {
        name: "withdrawAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AccountDeployed",
    inputs: [
      {
        name: "userOpHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "factory",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "paymaster",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BeforeExecution",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "Deposited",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "totalDeposit",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SignatureAggregatorChanged",
    inputs: [
      {
        name: "aggregator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StakeLocked",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "totalStaked",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "unstakeDelaySec",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StakeUnlocked",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "withdrawTime",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StakeWithdrawn",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "withdrawAddress",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UserOperationEvent",
    inputs: [
      {
        name: "userOpHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "paymaster",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "nonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "success",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
      {
        name: "actualGasCost",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "actualGasUsed",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UserOperationRevertReason",
    inputs: [
      {
        name: "userOpHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "nonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "revertReason",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Withdrawn",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "withdrawAddress",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ExecutionResult",
    inputs: [
      {
        name: "preOpGas",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "paid",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "validAfter",
        type: "uint48",
        internalType: "uint48",
      },
      {
        name: "validUntil",
        type: "uint48",
        internalType: "uint48",
      },
      {
        name: "targetSuccess",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "targetResult",
        type: "bytes",
        internalType: "bytes",
      },
    ],
  },
  {
    type: "error",
    name: "FailedOp",
    inputs: [
      {
        name: "opIndex",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reason",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "SenderAddressResult",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "SignatureValidationFailed",
    inputs: [
      {
        name: "aggregator",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ValidationResult",
    inputs: [
      {
        name: "returnInfo",
        type: "tuple",
        internalType: "struct IEntryPoint.ReturnInfo",
        components: [
          {
            name: "preOpGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "prefund",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "sigFailed",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "validAfter",
            type: "uint48",
            internalType: "uint48",
          },
          {
            name: "validUntil",
            type: "uint48",
            internalType: "uint48",
          },
          {
            name: "paymasterContext",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "senderInfo",
        type: "tuple",
        internalType: "struct IStakeManager.StakeInfo",
        components: [
          {
            name: "stake",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "unstakeDelaySec",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "factoryInfo",
        type: "tuple",
        internalType: "struct IStakeManager.StakeInfo",
        components: [
          {
            name: "stake",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "unstakeDelaySec",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "paymasterInfo",
        type: "tuple",
        internalType: "struct IStakeManager.StakeInfo",
        components: [
          {
            name: "stake",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "unstakeDelaySec",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
  },
  {
    type: "error",
    name: "ValidationResultWithAggregation",
    inputs: [
      {
        name: "returnInfo",
        type: "tuple",
        internalType: "struct IEntryPoint.ReturnInfo",
        components: [
          {
            name: "preOpGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "prefund",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "sigFailed",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "validAfter",
            type: "uint48",
            internalType: "uint48",
          },
          {
            name: "validUntil",
            type: "uint48",
            internalType: "uint48",
          },
          {
            name: "paymasterContext",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "senderInfo",
        type: "tuple",
        internalType: "struct IStakeManager.StakeInfo",
        components: [
          {
            name: "stake",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "unstakeDelaySec",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "factoryInfo",
        type: "tuple",
        internalType: "struct IStakeManager.StakeInfo",
        components: [
          {
            name: "stake",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "unstakeDelaySec",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "paymasterInfo",
        type: "tuple",
        internalType: "struct IStakeManager.StakeInfo",
        components: [
          {
            name: "stake",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "unstakeDelaySec",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "aggregatorInfo",
        type: "tuple",
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        components: [
          {
            name: "aggregator",
            type: "address",
            internalType: "address",
          },
          {
            name: "stakeInfo",
            type: "tuple",
            internalType: "struct IStakeManager.StakeInfo",
            components: [
              {
                name: "stake",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "unstakeDelaySec",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
        ],
      },
    ],
  },
];

const _bytecode =
  "0x60a0604052604051620000129062000055565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b03166080523480156200004957600080fd5b50600160025562000063565b6102538062003f4583390190565b608051613ebf62000086600039600081816112110152612ccd0152613ebf6000f3fe6080604052600436106100f35760003560e01c80630396cb60146101085780630bd28e3b1461011b5780631b2e01b81461013b5780631d732756146101865780631fad948c146101a6578063205c2878146101c657806335567e1a146101e65780634b1d7cf5146102065780635287ce121461022657806370a08231146103425780638f41ec5a14610362578063957122ab146103775780639b249f6914610397578063a6193531146103b7578063b760faf9146103d7578063bb9fe6bf146103ea578063c23a5cea146103ff578063d6383f941461041f578063ee2194231461043f578063fc7e286d1461045f57600080fd5b366101035761010133610513565b005b600080fd5b610101610116366004612fd8565b61057a565b34801561012757600080fd5b5061010161013636600461301a565b6107f9565b34801561014757600080fd5b50610173610156366004613055565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561019257600080fd5b506101736101a136600461324f565b610830565b3480156101b257600080fd5b506101016101c1366004613358565b61099d565b3480156101d257600080fd5b506101016101e13660046133ae565b610b19565b3480156101f257600080fd5b50610173610201366004613055565b610c89565b34801561021257600080fd5b50610101610221366004613358565b610ccf565b34801561023257600080fd5b506102ea6102413660046133da565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b031660009081526020818152604091829020825160a08101845281546001600160701b038082168352600160701b820460ff16151594830194909452600160781b90049092169282019290925260019091015463ffffffff81166060830152600160201b900465ffffffffffff16608082015290565b6040805182516001600160701b03908116825260208085015115159083015283830151169181019190915260608083015163ffffffff169082015260809182015165ffffffffffff169181019190915260a00161017d565b34801561034e57600080fd5b5061017361035d3660046133da565b6110dc565b34801561036e57600080fd5b50610173600181565b34801561038357600080fd5b506101016103923660046133f7565b611100565b3480156103a357600080fd5b506101016103b236600461347b565b6111f7565b3480156103c357600080fd5b506101736103d23660046134d5565b6112a8565b6101016103e53660046133da565b610513565b3480156103f657600080fd5b506101016112ea565b34801561040b57600080fd5b5061010161041a3660046133da565b611411565b34801561042b57600080fd5b5061010161043a366004613509565b611635565b34801561044b57600080fd5b5061010161045a3660046134d5565b611730565b34801561046b57600080fd5b506104cd61047a3660046133da565b600060208190529081526040902080546001909101546001600160701b0380831692600160701b810460ff1692600160781b9091049091169063ffffffff811690600160201b900465ffffffffffff1685565b604080516001600160701b0396871681529415156020860152929094169183019190915263ffffffff16606082015265ffffffffffff909116608082015260a00161017d565b61051d81346118f7565b6001600160a01b03811660008181526020818152604091829020805492516001600160701b03909316835292917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491015b60405180910390a25050565b33600090815260208190526040902063ffffffff82166105de5760405162461bcd60e51b815260206004820152601a6024820152796d757374207370656369667920756e7374616b652064656c617960301b60448201526064015b60405180910390fd5b600181015463ffffffff908116908316101561063b5760405162461bcd60e51b815260206004820152601c60248201527b63616e6e6f7420646563726561736520756e7374616b652074696d6560201b60448201526064016105d5565b805460009061065b903490600160781b90046001600160701b0316613580565b9050600081116106a25760405162461bcd60e51b81526020600482015260126024820152711b9bc81cdd185ad9481cdc1958da599a595960721b60448201526064016105d5565b6001600160701b038111156106ea5760405162461bcd60e51b815260206004820152600e60248201526d7374616b65206f766572666c6f7760901b60448201526064016105d5565b6040805160a08101825283546001600160701b0390811682526001602080840182815286841685870190815263ffffffff808b16606088019081526000608089018181523380835296829052908a902098518954955194518916600160781b02600160781b600160e81b0319951515600160701b026001600160781b03199097169190991617949094179290921695909517865551949092018054925165ffffffffffff16600160201b026001600160501b0319909316949093169390931717905590517fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01906107ec908490879091825263ffffffff16602082015260400190565b60405180910390a2505050565b3360009081526001602090815260408083206001600160c01b0385168452909152812080549161082883613593565b919050555050565b6000805a905033301461087f5760405162461bcd60e51b81526020600482015260176024820152764141393220696e7465726e616c2063616c6c206f6e6c7960481b60448201526064016105d5565b8451604081015160608201518101611388015a10156108a95763deaddead60e01b60005260206000fd5b87516000901561093d5760006108c6846000015160008c86611993565b90508061093b5760006108da6108006119ab565b8051909150156109355784600001516001600160a01b03168a602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a20187602001518460405161092c9291906135fc565b60405180910390a35b60019250505b505b600088608001515a860301905061098f6000838b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508892506119d7915050565b9a9950505050505050505050565b6109a5611cce565b816000816001600160401b038111156109c0576109c061308a565b6040519080825280602002602001820160405280156109f957816020015b6109e6612f14565b8152602001906001900390816109de5790505b50905060005b82811015610a72576000828281518110610a1b57610a1b613615565b60200260200101519050600080610a56848a8a87818110610a3e57610a3e613615565b9050602002810190610a50919061362b565b85611d25565b91509150610a678483836000611f00565b5050506001016109ff565b506040516000907fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972908290a160005b83811015610afc57610af081888884818110610abf57610abf613615565b9050602002810190610ad1919061362b565b858481518110610ae357610ae3613615565b6020026020010151612096565b90910190600101610aa1565b50610b0784826121bd565b505050610b146001600255565b505050565b33600090815260208190526040902080546001600160701b0316821115610b7e5760405162461bcd60e51b8152602060048201526019602482015278576974686472617720616d6f756e7420746f6f206c6172676560381b60448201526064016105d5565b8054610b949083906001600160701b031661364c565b81546001600160701b0319166001600160701b039190911617815560405133907fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb90610be3908690869061365f565b60405180910390a26000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610c38576040519150601f19603f3d011682016040523d82523d6000602084013e610c3d565b606091505b5050905080610c835760405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b60448201526064016105d5565b50505050565b6001600160a01b03821660009081526001602090815260408083206001600160c01b038516845290915290819020549082901b67ffffffffffffffff1916175b92915050565b610cd7611cce565b816000805b82811015610e355736868683818110610cf757610cf7613615565b9050602002810190610d099190613678565b9050366000610d18838061368e565b90925090506000610d2f60408501602086016133da565b90506000196001600160a01b03821601610d855760405162461bcd60e51b815260206004820152601760248201527620a09c9b1034b73b30b634b21030b3b3b932b3b0ba37b960491b60448201526064016105d5565b6001600160a01b03811615610e19576001600160a01b03811663e3563a4f8484610db260408901896136d7565b6040518563ffffffff1660e01b8152600401610dd19493929190613882565b60006040518083038186803b158015610de957600080fd5b505afa925050508015610dfa575060015b610e19578060405163086a9f7560e41b81526004016105d591906138ff565b610e238287613580565b95505060019093019250610cdc915050565b506000816001600160401b03811115610e5057610e5061308a565b604051908082528060200260200182016040528015610e8957816020015b610e76612f14565b815260200190600190039081610e6e5790505b506040519091507fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f97290600090a16000805b84811015610f905736888883818110610ed557610ed5613615565b9050602002810190610ee79190613678565b9050366000610ef6838061368e565b90925090506000610f0d60408501602086016133da565b90508160005b81811015610f7e576000898981518110610f2f57610f2f613615565b60200260200101519050600080610f528b898987818110610a3e57610a3e613615565b91509150610f6284838389611f00565b8a610f6c81613593565b9b505060019093019250610f13915050565b505060019094019350610eba92505050565b50600080915060005b858110156110975736898983818110610fb457610fb4613615565b9050602002810190610fc69190613678565b9050610fd860408201602083016133da565b6001600160a01b03167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d60405160405180910390a236600061101a838061368e565b90925090508060005b81811015611086576110658885858481811061104157611041613615565b9050602002810190611053919061362b565b8b8b81518110610ae357610ae3613615565b61106f9088613580565b96508761107b81613593565b985050600101611023565b505060019093019250610f99915050565b506040516000907f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d908290a26110cd86826121bd565b5050505050610b146001600255565b6001600160a01b03166000908152602081905260409020546001600160701b031690565b8315801561111657506001600160a01b0383163b155b1561115f5760405162461bcd60e51b815260206004820152601960248201527810504c8c081858d8dbdd5b9d081b9bdd0819195c1b1bde5959603a1b60448201526064016105d5565b601481106111d55760006111766014828486613913565b61117f9161393d565b60601c9050803b6000036111d35760405162461bcd60e51b815260206004820152601b60248201527a10504ccc081c185e5b585cdd195c881b9bdd0819195c1b1bde5959602a1b60448201526064016105d5565b505b60405162461bcd60e51b815260206004820152600060248201526044016105d5565b604051632b870d1b60e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063570e1a3690611248908690869060040161396d565b6020604051808303816000875af1158015611267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128b9190613981565b905080604051633653dc0360e11b81526004016105d591906138ff565b60006112b3826122b1565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b3360009081526020819052604081206001810154909163ffffffff90911690036113435760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081cdd185ad95960b21b60448201526064016105d5565b8054600160701b900460ff1661138f5760405162461bcd60e51b8152602060048201526011602482015270616c726561647920756e7374616b696e6760781b60448201526064016105d5565b60018101546000906113a79063ffffffff164261399e565b60018301805465ffffffffffff60201b1916600160201b65ffffffffffff841690810291909117909155835460ff60701b1916845560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a9060200161056e565b3360009081526020819052604090208054600160781b90046001600160701b0316806114765760405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b60448201526064016105d5565b6001820154600160201b900465ffffffffffff166114d65760405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b65282920666972737400000060448201526064016105d5565b600182015442600160201b90910465ffffffffffff1611156115385760405162461bcd60e51b815260206004820152601b60248201527a5374616b65207769746864726177616c206973206e6f742064756560281b60448201526064016105d5565b6001820180546001600160501b03191690558154600160781b600160e81b031916825560405133907fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda39061158f908690859061365f565b60405180910390a26000836001600160a01b03168260405160006040518083038185875af1925050503d80600081146115e4576040519150601f19603f3d011682016040523d82523d6000602084013e6115e9565b606091505b5050905080610c835760405162461bcd60e51b81526020600482015260186024820152776661696c656420746f207769746864726177207374616b6560401b60448201526064016105d5565b61163d612f14565b611646856122ca565b60008061165560008885611d25565b91509150600061166583836123a4565b905061167043600052565b600061167e60008a87612096565b905061168943600052565b600060606001600160a01b038a16156116ff57896001600160a01b031689896040516116b69291906139c4565b6000604051808303816000865af19150503d80600081146116f3576040519150601f19603f3d011682016040523d82523d6000602084013e6116f8565b606091505b5090925090505b866080015183856020015186604001518585604051630116f59360e71b81526004016105d5969594939291906139d4565b611738612f14565b611741826122ca565b60008061175060008585611d25565b915091506000611767846000015160a0015161245d565b8451519091506000906117799061245d565b9050611783612f9e565b36600061179360408a018a6136d7565b9092509050600060148210156117aa5760006117c5565b6117b8601460008486613913565b6117c19161393d565b60601c5b90506117d08161245d565b935050505060006117e186866123a4565b9050600081600001519050600060016001600160a01b0316826001600160a01b031614905060006040518060c001604052808b6080015181526020018b6040015181526020018315158152602001856020015165ffffffffffff168152602001856040015165ffffffffffff16815260200161185e8c6060015190565b905290506001600160a01b0383161580159061188457506001600160a01b038316600114155b156118d65760006040518060400160405280856001600160a01b031681526020016118ae8661245d565b81525090508187878a84604051633ebb2d3960e21b81526004016105d5959493929190613a85565b8086868960405163e0cff05f60e01b81526004016105d59493929190613af1565b6001600160a01b038216600090815260208190526040812080549091906119289084906001600160701b0316613580565b90506001600160701b038111156119745760405162461bcd60e51b815260206004820152601060248201526f6465706f736974206f766572666c6f7760801b60448201526064016105d5565b81546001600160701b0319166001600160701b03919091161790555050565b6000806000845160208601878987f195945050505050565b60603d828111156119b95750815b604051602082018101604052818152816000602083013e9392505050565b6000805a8551909150600090816119ed826124a5565b60a08301519091506001600160a01b038116611a0c5782519350611bb3565b809350600088511115611bb357868202955060028a6002811115611a3257611a32613b36565b14611aa457606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a2340991611a6c908e908d908c90600401613b4c565b600060405180830381600088803b158015611a8657600080fd5b5087f1158015611a9a573d6000803e3d6000fd5b5050505050611bb3565b606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a2340991611ad9908e908d908c90600401613b4c565b600060405180830381600088803b158015611af357600080fd5b5087f193505050508015611b05575060015b611bb357611b11613b93565b806308c379a003611b6a5750611b25613baf565b80611b305750611b6c565b8b81604051602001611b429190613c38565b60408051601f1981840301815290829052631101335b60e11b82526105d592916004016135fc565b505b8a604051631101335b60e11b81526004016105d59181526040602082018190526012908201527110504d4c081c1bdcdd13dc081c995d995c9d60721b606082015260800190565b5a85038701965081870295508589604001511015611c1c578a604051631101335b60e11b81526004016105d591815260406020808301829052908201527f414135312070726566756e642062656c6f772061637475616c476173436f7374606082015260800190565b6040890151869003611c2e85826118f7565b6000808c6002811115611c4357611c43613b36565b1490508460a001516001600160a01b031685600001516001600160a01b03168c602001517f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f8860200151858d8f604051611cb6949392919093845291151560208401526040830152606082015260800190565b60405180910390a45050505050505095945050505050565b6002805403611d1f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105d5565b60028055565b60008060005a8451909150611d3a86826124d5565b611d43866112a8565b6020860152604081015160608201516080830151171760e087013517610100870135176001600160781b03811115611db85760405162461bcd60e51b815260206004820152601860248201527741413934206761732076616c756573206f766572666c6f7760401b60448201526064016105d5565b600080611dc4846125ce565b9050611dd28a8a8a8461261b565b85516020870151919950919350611de99190612838565b611e3c5789604051631101335b60e11b81526004016105d5918152604060208201819052601a90820152794141323520696e76616c6964206163636f756e74206e6f6e636560301b606082015260800190565b611e4543600052565b60a08401516060906001600160a01b031615611e6d57611e688b8b8b8587612885565b975090505b60005a87039050808b60a001351015611ed2578b604051631101335b60e11b81526004016105d5918152604060208201819052601e908201527f41413430206f76657220766572696669636174696f6e4761734c696d69740000606082015260800190565b60408a018390528160608b015260c08b01355a8803018a608001818152505050505050505050935093915050565b600080611f0c85612aa8565b91509150816001600160a01b0316836001600160a01b031614611f725785604051631101335b60e11b81526004016105d59181526040602082018190526014908201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b606082015260800190565b8015611fc45785604051631101335b60e11b81526004016105d591815260406020820181905260179082015276414132322065787069726564206f72206e6f742064756560481b606082015260800190565b6000611fcf85612aa8565b925090506001600160a01b0381161561202b5786604051631101335b60e11b81526004016105d59181526040602082018190526014908201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b606082015260800190565b811561208d5786604051631101335b60e11b81526004016105d59181526040602082018190526021908201527f41413332207061796d61737465722065787069726564206f72206e6f742064756060820152606560f81b608082015260a00190565b50505050505050565b6000805a905060006120a9846060015190565b905030631d7327566120be60608801886136d7565b87856040518563ffffffff1660e01b81526004016120df9493929190613c76565b6020604051808303816000875af192505050801561211a575060408051601f3d908101601f1916820190925261211791810190613d29565b60015b6121b157600060206000803e50600051632152215360e01b810161217c5786604051631101335b60e11b81526004016105d5918152604060208201819052600f908201526e41413935206f7574206f662067617360881b606082015260800190565b600085608001515a61218e908661364c565b6121989190613580565b90506121a88860028886856119d7565b945050506121b4565b92505b50509392505050565b6001600160a01b03821661220e5760405162461bcd60e51b81526020600482015260186024820152774141393020696e76616c69642062656e656669636961727960401b60448201526064016105d5565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461225b576040519150601f19603f3d011682016040523d82523d6000602084013e612260565b606091505b5050905080610b145760405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e65666963696172790060448201526064016105d5565b60006122bc82612afb565b805190602001209050919050565b3063957122ab6122dd60408401846136d7565b6122ea60208601866133da565b6122f86101208701876136d7565b6040518663ffffffff1660e01b8152600401612318959493929190613d42565b60006040518083038186803b15801561233057600080fd5b505afa925050508015612341575060015b6123a15761234d613b93565b806308c379a0036123955750612361613baf565b8061236c5750612397565b80511561239157600081604051631101335b60e11b81526004016105d59291906135fc565b5050565b505b3d6000803e3d6000fd5b50565b6123ac612fb8565b60006123b784612bce565b905060006123c484612bce565b82519091506001600160a01b0381166123db575080515b602080840151604080860151928501519085015191929165ffffffffffff8083169085161015612409578193505b8065ffffffffffff168365ffffffffffff161115612425578092505b5050604080516060810182526001600160a01b03909416845265ffffffffffff92831660208501529116908201529250505092915050565b612465612f9e565b6001600160a01b0390911660009081526020818152604090912080546001600160701b03600160781b9091041683526001015463ffffffff169082015290565b60c081015160e0820151600091908082036124c1575092915050565b6124cd82488301612c2a565b949350505050565b6124e260208301836133da565b6001600160a01b0316815260208083013590820152608080830135604083015260a0830135606083015260c0808401359183019190915260e08084013591830191909152610100830135908201523660006125416101208501856136d7565b909250905080156125c157601481101561259d5760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e644461746100000060448201526064016105d5565b6125ab601460008385613913565b6125b49161393d565b60601c60a0840152610c83565b600060a084015250505050565b60a081015160009081906001600160a01b03166125ec5760016125ef565b60035b60ff16905060008360800151828560600151028560400151010190508360c00151810292505050919050565b60008060005a8551805191925090612640898861263b60408c018c6136d7565b612c42565b60a082015161264e43600052565b60006001600160a01b038216612681576000612669846110dc565b905088811161267a5780890361267d565b60005b9150505b606084015160208a0151604051633a871cdd60e01b81526001600160a01b03861692633a871cdd9290916126bb918f918790600401613d78565b60206040518083038160008887f1935050505080156126f7575060408051601f3d908101601f191682019092526126f491810190613d29565b60015b61278157612703613b93565b806308c379a0036127345750612717613baf565b806127225750612736565b8b81604051602001611b429190613d9d565b505b8a604051631101335b60e11b81526004016105d5918152604060208201819052601690820152754141323320726576657274656420286f72204f4f472960501b606082015260800190565b95506001600160a01b038216612825576001600160a01b038316600090815260208190526040902080546001600160701b0316808a1115612808578c604051631101335b60e11b81526004016105d59181526040602082018190526017908201527610504c8c48191a591b89dd081c185e481c1c99599d5b99604a1b606082015260800190565b81546001600160701b031916908a90036001600160701b03161790555b5a85039650505050505094509492505050565b6001600160a01b038216600090815260016020908152604080832084821c80855292528220805484916001600160401b03831691908561287783613593565b909155501495945050505050565b825160608181015190916000918481116128e15760405162461bcd60e51b815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e4761730060448201526064016105d5565b60a08201516001600160a01b038116600090815260208190526040902080548784039291906001600160701b031689811015612969578c604051631101335b60e11b81526004016105d5918152604060208201819052601e908201527f41413331207061796d6173746572206465706f73697420746f6f206c6f770000606082015260800190565b8981038260000160006101000a8154816001600160701b0302191690836001600160701b03160217905550826001600160a01b031663f465c77e858e8e602001518e6040518563ffffffff1660e01b81526004016129c993929190613d78565b60006040518083038160008887f193505050508015612a0a57506040513d6000823e601f3d908101601f19168201604052612a079190810190613dd4565b60015b612a9457612a16613b93565b806308c379a003612a475750612a2a613baf565b80612a355750612a49565b8d81604051602001611b429190613e5f565b505b8c604051631101335b60e11b81526004016105d5918152604060208201819052601690820152754141333320726576657274656420286f72204f4f472960501b606082015260800190565b909e909d509b505050505050505050505050565b60008082600003612abe57506000928392509050565b6000612ac984612bce565b9050806040015165ffffffffffff16421180612af05750806020015165ffffffffffff1642105b905194909350915050565b6060813560208301356000612b1b612b1660408701876136d7565b612f01565b90506000612b2f612b1660608801886136d7565b9050608086013560a087013560c088013560e08901356101008a01356000612b5e612b166101208e018e6136d7565b604080516001600160a01b039c909c1660208d01528b81019a909a5260608b019890985250608089019590955260a088019390935260c087019190915260e08601526101008501526101208401526101408084019190915281518084039091018152610160909201905292915050565b612bd6612fb8565b8160a081901c65ffffffffffff8116600003612bf5575065ffffffffffff5b604080516060810182526001600160a01b03909316835260d09490941c602083015265ffffffffffff16928101929092525090565b6000818310612c395781612c3b565b825b9392505050565b8015610c83578251516001600160a01b0381163b15612cad5784604051631101335b60e11b81526004016105d5918152604060208201819052601f908201527f414131302073656e64657220616c726561647920636f6e737472756374656400606082015260800190565b835160600151604051632b870d1b60e11b81526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163570e1a369190612d05908890889060040161396d565b60206040518083038160008887f1158015612d24573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612d499190613981565b90506001600160a01b038116612da95785604051631101335b60e11b81526004016105d5918152604060208201819052601b908201527a4141313320696e6974436f6465206661696c6564206f72204f4f4760281b606082015260800190565b816001600160a01b0316816001600160a01b031614612e135785604051631101335b60e11b81526004016105d591815260406020808301829052908201527f4141313420696e6974436f6465206d7573742072657475726e2073656e646572606082015260800190565b806001600160a01b03163b600003612e765785604051631101335b60e11b81526004016105d591815260406020808301829052908201527f4141313520696e6974436f6465206d757374206372656174652073656e646572606082015260800190565b6000612e856014828688613913565b612e8e9161393d565b60601c9050826001600160a01b031686602001517fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d83896000015160a00151604051612ef09291906001600160a01b0392831681529116602082015260400190565b60405180910390a350505050505050565b6000604051828085833790209392505050565b6040518060a00160405280612f7960405180610100016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b604080516060810182526000808252602082018190529181019190915290565b600060208284031215612fea57600080fd5b813563ffffffff81168114612c3b57600080fd5b80356001600160c01b038116811461301557600080fd5b919050565b60006020828403121561302c57600080fd5b612c3b82612ffe565b6001600160a01b03811681146123a157600080fd5b803561301581613035565b6000806040838503121561306857600080fd5b823561307381613035565b915061308160208401612ffe565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60a081018181106001600160401b03821117156130bf576130bf61308a565b60405250565b61010081018181106001600160401b03821117156130bf576130bf61308a565b601f8201601f191681016001600160401b038111828210171561310a5761310a61308a565b6040525050565b60006001600160401b0382111561312a5761312a61308a565b50601f01601f191660200190565b600081830361018081121561314c57600080fd5b604051613158816130a0565b8092506101008083121561316b57600080fd5b6040519250613179836130c5565b6131828561304a565b8352602085013560208401526040850135604084015260608501356060840152608085013560808401526131b860a0860161304a565b60a084015260c085013560c084015260e085013560e084015282825280850135602083015250610120840135604082015261014084013560608201526101608401356080820152505092915050565b60008083601f84011261321957600080fd5b5081356001600160401b0381111561323057600080fd5b60208301915083602082850101111561324857600080fd5b9250929050565b6000806000806101c0858703121561326657600080fd5b84356001600160401b038082111561327d57600080fd5b818701915087601f83011261329157600080fd5b813561329c81613111565b6040516132a982826130e5565b8281528a60208487010111156132be57600080fd5b826020860160208301376000602084830101528098505050506132e48860208901613138565b94506101a08701359150808211156132fb57600080fd5b5061330887828801613207565b95989497509550505050565b60008083601f84011261332657600080fd5b5081356001600160401b0381111561333d57600080fd5b6020830191508360208260051b850101111561324857600080fd5b60008060006040848603121561336d57600080fd5b83356001600160401b0381111561338357600080fd5b61338f86828701613314565b90945092505060208401356133a381613035565b809150509250925092565b600080604083850312156133c157600080fd5b82356133cc81613035565b946020939093013593505050565b6000602082840312156133ec57600080fd5b8135612c3b81613035565b60008060008060006060868803121561340f57600080fd5b85356001600160401b038082111561342657600080fd5b61343289838a01613207565b90975095506020880135915061344782613035565b9093506040870135908082111561345d57600080fd5b5061346a88828901613207565b969995985093965092949392505050565b6000806020838503121561348e57600080fd5b82356001600160401b038111156134a457600080fd5b6134b085828601613207565b90969095509350505050565b600061016082840312156134cf57600080fd5b50919050565b6000602082840312156134e757600080fd5b81356001600160401b038111156134fd57600080fd5b6124cd848285016134bc565b6000806000806060858703121561351f57600080fd5b84356001600160401b038082111561353657600080fd5b613542888389016134bc565b95506020870135915061355482613035565b909350604086013590808211156132fb57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610cc957610cc961356a565b6000600182016135a5576135a561356a565b5060010190565b60005b838110156135c75781810151838201526020016135af565b50506000910152565b600081518084526135e88160208601602086016135ac565b601f01601f19169290920160200192915050565b8281526040602082015260006124cd60408301846135d0565b634e487b7160e01b600052603260045260246000fd5b6000823561015e1983360301811261364257600080fd5b9190910192915050565b81810381811115610cc957610cc961356a565b6001600160a01b03929092168252602082015260400190565b60008235605e1983360301811261364257600080fd5b6000808335601e198436030181126136a557600080fd5b8301803591506001600160401b038211156136bf57600080fd5b6020019150600581901b360382131561324857600080fd5b6000808335601e198436030181126136ee57600080fd5b8301803591506001600160401b0382111561370857600080fd5b60200191503681900382131561324857600080fd5b6000808335601e1984360301811261373457600080fd5b83016020810192503590506001600160401b0381111561375357600080fd5b80360382131561324857600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006101606137aa8461379d8561304a565b6001600160a01b03169052565b602083013560208501526137c1604084018461371d565b8260408701526137d48387018284613762565b925050506137e5606084018461371d565b85830360608701526137f8838284613762565b925050506080830135608085015260a083013560a085015260c083013560c085015260e083013560e085015261010080840135818601525061012061383f8185018561371d565b86840383880152613851848284613762565b93505050506101406138658185018561371d565b86840383880152613877848284613762565b979650505050505050565b6040808252810184905260006060600586901b830181019083018783805b898110156138e857868503605f190184528235368c900361015e190181126138c6578283fd5b6138d2868d830161378b565b95505060209384019392909201916001016138a0565b505050508281036020840152613877818587613762565b6001600160a01b0391909116815260200190565b6000808585111561392357600080fd5b8386111561393057600080fd5b5050820193919092039150565b6001600160601b031981358181169160148510156139655780818660140360031b1b83161692505b505092915050565b6020815260006124cd602083018486613762565b60006020828403121561399357600080fd5b8151612c3b81613035565b65ffffffffffff8181168382160190808211156139bd576139bd61356a565b5092915050565b8183823760009101908152919050565b868152856020820152600065ffffffffffff8087166040840152808616606084015250831515608083015260c060a0830152613a1360c08301846135d0565b98975050505050505050565b80518252602081015160208301526040810151151560408301526000606082015165ffffffffffff8082166060860152806080850151166080860152505060a082015160c060a08501526124cd60c08501826135d0565b80518252602090810151910152565b6000610140808352613a9981840189613a1f565b915050613aa96020830187613a76565b613ab66060830186613a76565b613ac360a0830185613a76565b82516001600160a01b031660e08301526020830151613ae6610100840182613a76565b509695505050505050565b60e081526000613b0460e0830187613a1f565b9050613b136020830186613a76565b613b206060830185613a76565b613b2d60a0830184613a76565b95945050505050565b634e487b7160e01b600052602160045260246000fd5b600060038510613b6c57634e487b7160e01b600052602160045260246000fd5b84825260606020830152613b8360608301856135d0565b9050826040830152949350505050565b600060033d1115613bac5760046000803e5060005160e01c5b90565b600060443d1015613bbd5790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715613bec57505050505090565b8285019150815181811115613c045750505050505090565b843d8701016020828501011115613c1e5750505050505090565b613c2d602082860101876130e5565b509095945050505050565b75020a09a98103837b9ba27b8103932bb32b93a32b21d160551b815260008251613c698160168501602087016135ac565b9190910160160192915050565b60006101c0808352613c8b8184018789613762565b9050845160018060a01b03808251166020860152602082015160408601526040820151606086015260608201516080860152608082015160a08601528060a08301511660c08601525060c081015160e085015260e08101516101008501525060208501516101208401526040850151610140840152606085015161016084015260808501516101808401528281036101a084015261387781856135d0565b600060208284031215613d3b57600080fd5b5051919050565b606081526000613d56606083018789613762565b6001600160a01b03861660208401528281036040840152613a13818587613762565b606081526000613d8b606083018661378b565b60208301949094525060400152919050565b6e020a09919903932bb32b93a32b21d1608d1b815260008251613dc781600f8501602087016135ac565b91909101600f0192915050565b60008060408385031215613de757600080fd5b82516001600160401b03811115613dfd57600080fd5b8301601f81018513613e0e57600080fd5b8051613e1981613111565b604051613e2682826130e5565b828152876020848601011115613e3b57600080fd5b613e4c8360208301602087016135ac565b6020969096015195979596505050505050565b6e020a09999903932bb32b93a32b21d1608d1b815260008251613dc781600f8501602087016135ac56fea26469706673582212208bd6fe6380e11a6862d8caa5910220bf38707be4defeb145f05418a6ea57bc7164736f6c63430008170033608060405234801561001057600080fd5b50610233806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e36600461011d565b610059565b604051610050919061018f565b60405180910390f35b60008061006960148285876101a3565b610072916101cd565b60601c90507f69164a0df9992ad714a1743f4bb075b0dcea5cd42298cf7d5abfc8e17799cf1a816040516100a6919061018f565b60405180910390a160006100bd84601481886101a3565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af1905060005193508061011457600093505b50505092915050565b6000806020838503121561013057600080fd5b823567ffffffffffffffff8082111561014857600080fd5b818501915085601f83011261015c57600080fd5b81358181111561016b57600080fd5b86602082850101111561017d57600080fd5b60209290920196919550909350505050565b6001600160a01b0391909116815260200190565b600080858511156101b357600080fd5b838611156101c057600080fd5b5050820193919092039150565b6001600160601b031981358181169160148510156101f55780818660140360031b1b83161692505b50509291505056fea26469706673582212204e9cfe12a915522569f0691d6f7cf8c2bc29ea2b3e17c39540545a264db33f0f64736f6c63430008170033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
