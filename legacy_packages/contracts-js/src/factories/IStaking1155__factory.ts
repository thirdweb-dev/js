/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IStaking1155, IStaking1155Interface } from "../IStaking1155";

const _abi = [
  {
    type: "function",
    name: "claimRewards",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getStakeInfo",
    inputs: [
      {
        name: "staker",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "_tokensStaked",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "_tokenAmounts",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "_totalRewards",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getStakeInfoForToken",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "staker",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "_tokensStaked",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_rewards",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "stake",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "RewardsClaimed",
    inputs: [
      {
        name: "staker",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "rewardAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokensStaked",
    inputs: [
      {
        name: "staker",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokensWithdrawn",
    inputs: [
      {
        name: "staker",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdatedDefaultRewardsPerUnitTime",
    inputs: [
      {
        name: "oldRewardsPerUnitTime",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newRewardsPerUnitTime",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdatedDefaultTimeUnit",
    inputs: [
      {
        name: "oldTimeUnit",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newTimeUnit",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdatedRewardsPerUnitTime",
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "oldRewardsPerUnitTime",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newRewardsPerUnitTime",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdatedTimeUnit",
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "oldTimeUnit",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newTimeUnit",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
];

export class IStaking1155__factory {
  static readonly abi = _abi;
  static createInterface(): IStaking1155Interface {
    return new utils.Interface(_abi) as IStaking1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IStaking1155 {
    return new Contract(address, _abi, signerOrProvider) as IStaking1155;
  }
}
