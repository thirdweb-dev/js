/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EvolvingNFTLogic,
  EvolvingNFTLogicInterface,
} from "../EvolvingNFTLogic";

const _abi = [
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claim",
    inputs: [
      {
        name: "_receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "_quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_currency",
        type: "address",
        internalType: "address",
      },
      {
        name: "_pricePerToken",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_allowlistProof",
        type: "tuple",
        internalType: "struct IDrop.AllowlistProof",
        components: [
          {
            name: "proof",
            type: "bytes32[]",
            internalType: "bytes32[]",
          },
          {
            name: "quantityLimitPerWallet",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pricePerToken",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "_data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "claimCondition",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "contractURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deleteSharedMetadata",
    inputs: [
      {
        name: "_id",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "explicitOwnershipOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "ownership",
        type: "tuple",
        internalType: "struct IERC721AUpgradeable.TokenOwnership",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "burned",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "extraData",
            type: "uint24",
            internalType: "uint24",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getActiveClaimConditionId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllSharedMetadata",
    inputs: [],
    outputs: [
      {
        name: "metadata",
        type: "tuple[]",
        internalType: "struct ISharedMetadataBatch.SharedMetadataWithId[]",
        components: [
          {
            name: "id",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "metadata",
            type: "tuple",
            internalType: "struct ISharedMetadataBatch.SharedMetadataInfo",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "description",
                type: "string",
                internalType: "string",
              },
              {
                name: "imageURI",
                type: "string",
                internalType: "string",
              },
              {
                name: "animationURI",
                type: "string",
                internalType: "string",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getApproved",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getClaimConditionById",
    inputs: [
      {
        name: "_conditionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "condition",
        type: "tuple",
        internalType: "struct IClaimCondition.ClaimCondition",
        components: [
          {
            name: "startTimestamp",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantityLimitPerWallet",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "pricePerToken",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "metadata",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDefaultRoyaltyInfo",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRoyaltyInfoForToken",
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSupplyClaimedByWallet",
    inputs: [
      {
        name: "_conditionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_claimer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "supplyClaimedByWallet",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isTrustedForwarder",
    inputs: [
      {
        name: "forwarder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nextTokenIdToClaim",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nextTokenIdToMint",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownerOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "primarySaleRecipient",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "royaltyInfo",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "salePrice",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "royaltyAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setClaimConditions",
    inputs: [
      {
        name: "_conditions",
        type: "tuple[]",
        internalType: "struct IClaimCondition.ClaimCondition[]",
        components: [
          {
            name: "startTimestamp",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantityLimitPerWallet",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "pricePerToken",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "metadata",
            type: "string",
            internalType: "string",
          },
        ],
      },
      {
        name: "_resetClaimEligibility",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setContractURI",
    inputs: [
      {
        name: "_uri",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDefaultRoyaltyInfo",
    inputs: [
      {
        name: "_royaltyRecipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "_royaltyBps",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOwner",
    inputs: [
      {
        name: "_newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPrimarySaleRecipient",
    inputs: [
      {
        name: "_saleRecipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRoyaltyInfoForToken",
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "_bps",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setSharedMetadata",
    inputs: [
      {
        name: "metadata",
        type: "tuple",
        internalType: "struct ISharedMetadataBatch.SharedMetadataInfo",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
          {
            name: "imageURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "animationURI",
            type: "string",
            internalType: "string",
          },
        ],
      },
      {
        name: "_id",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startTokenId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenURI",
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokensOfOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokensOfOwnerIn",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "start",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "stop",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalMinted",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "verifyClaim",
    inputs: [
      {
        name: "_conditionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_claimer",
        type: "address",
        internalType: "address",
      },
      {
        name: "_quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_currency",
        type: "address",
        internalType: "address",
      },
      {
        name: "_pricePerToken",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_allowlistProof",
        type: "tuple",
        internalType: "struct IDrop.AllowlistProof",
        components: [
          {
            name: "proof",
            type: "bytes32[]",
            internalType: "bytes32[]",
          },
          {
            name: "quantityLimitPerWallet",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pricePerToken",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "isOverride",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ClaimConditionsUpdated",
    inputs: [
      {
        name: "claimConditions",
        type: "tuple[]",
        indexed: false,
        internalType: "struct IClaimCondition.ClaimCondition[]",
        components: [
          {
            name: "startTimestamp",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantityLimitPerWallet",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "pricePerToken",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "metadata",
            type: "string",
            internalType: "string",
          },
        ],
      },
      {
        name: "resetEligibility",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ConsecutiveTransfer",
    inputs: [
      {
        name: "fromTokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "toTokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContractURIUpdated",
    inputs: [
      {
        name: "prevURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "newURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DefaultRoyalty",
    inputs: [
      {
        name: "newRoyaltyRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newRoyaltyBps",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnerUpdated",
    inputs: [
      {
        name: "prevOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PrimarySaleRecipientUpdated",
    inputs: [
      {
        name: "recipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoyaltyForToken",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "royaltyRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "royaltyBps",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SharedMetadataDeleted",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SharedMetadataUpdated",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "name",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "description",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "imageURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "animationURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokensClaimed",
    inputs: [
      {
        name: "claimConditionIndex",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "startTokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "quantityClaimed",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ApprovalCallerNotOwnerNorApproved",
    inputs: [],
  },
  {
    type: "error",
    name: "ApprovalQueryForNonexistentToken",
    inputs: [],
  },
  {
    type: "error",
    name: "BalanceQueryForZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "CurrencyTransferLibFailedNativeTransfer",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidQueryRange",
    inputs: [],
  },
  {
    type: "error",
    name: "MintERC2309QuantityExceedsLimit",
    inputs: [],
  },
  {
    type: "error",
    name: "MintToZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "MintZeroQuantity",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnerQueryForNonexistentToken",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnershipNotInitializedForExtraData",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferCallerNotOwnerNorApproved",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferFromIncorrectOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferToNonERC721ReceiverImplementer",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferToZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "URIQueryForNonexistentToken",
    inputs: [],
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506150e2806100206000396000f3fe6080604052600436106102075760003560e01c806374bc7db71161011457806374bc7db7146104f55780638462151c1461051557806384bb1e42146105425780638da5cb5b14610555578063938e3d7b1461056a57806395d89b411461058a57806399a2557a1461059f5780639bcf7a15146105bf578063a22cb465146105df578063a2309ff8146105ff578063acd083f81461037e578063ad1eefc514610614578063b24f2d3914610634578063b88d4fde14610649578063c23dc68f1461065c578063c68907de146106c8578063c87b56dd146106dd578063d637ed59146106fd578063e6798baa14610727578063e8a3d4851461073b578063e985e9c514610750578063fc3c2a731461077057600080fd5b806301ffc9a71461020c57806306fdde0314610241578063079fe40e14610263578063081812fc14610285578063095ea7b3146102a557806313af4035146102ba57806318160ddd146102da5780631ebb2422146102fd57806323a2902b1461031d57806323b872dd1461033d5780632a55205a146103505780633b1475a71461037e57806342842e0e1461039357806342966c68146103a65780634cc157df146103c6578063572b6c0514610408578063600dd5ea146104285780636352211e14610448578063696b0c1a146104685780636f4f2837146104885780636f8934f4146104a857806370a08231146104d5575b600080fd5b34801561021857600080fd5b5061022c610227366004613e4b565b610792565b60405190151581526020015b60405180910390f35b34801561024d57600080fd5b506102566107be565b6040516102389190613eb8565b34801561026f57600080fd5b50610278610859565b6040516102389190613ecb565b34801561029157600080fd5b506102786102a0366004613edf565b610872565b6102b86102b3366004613f0d565b6108b6565b005b3480156102c657600080fd5b506102b86102d5366004613f39565b6108c6565b3480156102e657600080fd5b506102ef6108ff565b604051908152602001610238565b34801561030957600080fd5b506102b8610318366004613edf565b61091f565b34801561032957600080fd5b5061022c610338366004613f6e565b610a46565b6102b861034b366004613feb565b610e15565b34801561035c57600080fd5b5061037061036b36600461402c565b610fd5565b60405161023892919061404e565b34801561038a57600080fd5b506102ef611012565b6102b86103a1366004613feb565b611021565b3480156103b257600080fd5b506102b86103c1366004613edf565b611041565b3480156103d257600080fd5b506103e66103e1366004613edf565b61104c565b604080516001600160a01b03909316835261ffff909116602083015201610238565b34801561041457600080fd5b5061022c610423366004613f39565b6110cf565b34801561043457600080fd5b506102b8610443366004613f0d565b6110ed565b34801561045457600080fd5b50610278610463366004613edf565b61111b565b34801561047457600080fd5b506102b8610483366004614067565b611126565b34801561049457600080fd5b506102b86104a3366004613f39565b611154565b3480156104b457600080fd5b506104c86104c3366004613edf565b611181565b60405161023891906140ab565b3480156104e157600080fd5b506102ef6104f0366004613f39565b6112e8565b34801561050157600080fd5b506102b8610510366004614126565b611347565b34801561052157600080fd5b50610535610530366004613f39565b6116bc565b60405161023891906141ab565b6102b86105503660046142ad565b6116eb565b34801561056157600080fd5b5061027861181b565b34801561057657600080fd5b506102b861058536600461433a565b611825565b34801561059657600080fd5b50610256611852565b3480156105ab57600080fd5b506105356105ba36600461436e565b61186a565b3480156105cb57600080fd5b506102b86105da3660046143a3565b611877565b3480156105eb57600080fd5b506102b86105fa3660046143ca565b6118a6565b34801561060b57600080fd5b506102ef611923565b34801561062057600080fd5b506102ef61062f366004614403565b611935565b34801561064057600080fd5b506103e6611968565b6102b8610657366004614428565b61199a565b34801561066857600080fd5b5061067c610677366004613edf565b6119db565b604051610238919081516001600160a01b031681526020808301516001600160401b03169082015260408083015115159082015260609182015162ffffff169181019190915260800190565b3480156106d457600080fd5b506102ef611a22565b3480156106e957600080fd5b506102566106f8366004613edf565b611ae1565b34801561070957600080fd5b50610712611d1e565b60408051928352602083019190915201610238565b34801561073357600080fd5b5060016102ef565b34801561074757600080fd5b50610256611d3f565b34801561075c57600080fd5b5061022c61076b366004614493565b611d54565b34801561077c57600080fd5b50610785611d91565b60405161023891906144c1565b600061079d826120dd565b806107b8575063152a902d60e11b6001600160e01b03198316145b92915050565b60606107c861212b565b60020180546107d690614599565b80601f016020809104026020016040519081016040528092919081815260200182805461080290614599565b801561084f5780601f106108245761010080835404028352916020019161084f565b820191906000526020600020905b81548152906001019060200180831161083257829003601f168201915b5050505050905090565b600061086361214f565b546001600160a01b0316919050565b600061087d82612159565b610891576108916333d1c03960e21b6121b7565b61089961212b565b60009283526006016020525060409020546001600160a01b031690565b6108c2828260016121c1565b5050565b6108ce612272565b6108f35760405162461bcd60e51b81526004016108ea906145cd565b60405180910390fd5b6108fc81612285565b50565b6000600161090b61212b565b6001015461091761212b565b540303919050565b6109276122f2565b6109435760405162461bcd60e51b81526004016108ea906145f5565b6109558161094f612320565b90612344565b6109bd5760405162461bcd60e51b815260206004820152603360248201527f5368617265644d6574616461746142617463683a20736861726564206d65746160448201527219185d1848191bd95cc81b9bdd08195e1a5cdd606a1b60648201526084016108ea565b6109c5612320565b6000828152600291909101602052604081208181559060018201816109ea8282613d76565b6109f8600183016000613d76565b610a06600283016000613d76565b610a14600383016000613d76565b50506040518392507f712288e92794be2ea9abed3c7b1b0c025de9f006b5dd43cc64d15f0a7c3210f59150600090a250565b600080610a51612357565b6000898152600291820160209081526040918290208251610100810184528154815260018201549281019290925292830154918101919091526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e084019190610ad390614599565b80601f0160208091040260200160405190810160405280929190818152602001828054610aff90614599565b8015610b4c5780601f10610b2157610100808354040283529160200191610b4c565b820191906000526020600020905b815481529060010190602001808311610b2f57829003601f168201915b50505091909252505050606081015160a082015160c08301516080840151939450919290919015610bfa57610bf6610b848780614644565b86608001518d8a602001358b604001358c6060016020810190610ba79190613f39565b6040516001600160601b0319606095861b811660208301526034820194909452605481019290925290921b16607482015260880160405160208183030381529060405280519060200120612361565b5094505b8415610c81578560200135600003610c125782610c18565b85602001355b9250600019866040013503610c2d5781610c33565b85604001355b9150600019866040013514158015610c6457506000610c586080880160608901613f39565b6001600160a01b031614155b610c6e5780610c7e565b610c7e6080870160608801613f39565b90505b6000610c8b612357565b60000160030160008d815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020549050816001600160a01b0316896001600160a01b0316141580610ce95750828814155b15610d295760405162461bcd60e51b815260206004820152601060248201526f2150726963654f7243757272656e637960801b60448201526064016108ea565b891580610d3e575083610d3c828c6146aa565b115b15610d745760405162461bcd60e51b81526004016108ea906020808252600490820152632151747960e01b604082015260600190565b84602001518a8660400151610d8991906146aa565b1115610dc45760405162461bcd60e51b815260206004820152600a602482015269214d6178537570706c7960b01b60448201526064016108ea565b8451421015610e065760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b60448201526064016108ea565b50505050509695505050505050565b6000610e20826123ec565b6001600160a01b039485169490915081168414610e4657610e4662a1148160e81b6121b7565b600080610e52846124ae565b91509150610e778187610e623390565b6001600160a01b039081169116811491141790565b610e9957610e858633611d54565b610e9957610e99632ce44b5f60e11b6121b7565b610ea686868660016124d6565b8015610eb157600082555b610eb961212b565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610ee561212b565b6001600160a01b03861660009081526005919091016020526040902080546001019055610f1685600160e11b612589565b610f1e61212b565b60008681526004919091016020526040812091909155600160e11b84169003610f945760018401610f4d61212b565b600082815260049190910160205260408120549003610f9257610f6e61212b565b548114610f925783610f7e61212b565b600083815260049190910160205260409020555b505b6001600160a01b03851684818860008051602061508d833981519152600080a480600003610fcc57610fcc633a954ecd60e21b6121b7565b50505050505050565b600080600080610fe48661104c565b90945084925061ffff169050612710610ffd82876146bd565b61100791906146ea565b925050509250929050565b600061101c61259e565b905090565b61103c8383836040518060200160405280600081525061199a565b505050565b6108fc8160016125ae565b600080600061105961271a565b600085815260019182016020908152604091829020825180840190935280546001600160a01b03168084529301549082015291501561109e57805160208201516110c5565b6110a661271a565b546001600160a01b03166110b861271a565b54600160a01b900461ffff165b9250925050915091565b6001600160a01b031660009081526033602052604090205460ff1690565b6110f5612272565b6111115760405162461bcd60e51b81526004016108ea906145cd565b6108c2828261273e565b60006107b8826123ec565b61112e6122f2565b61114a5760405162461bcd60e51b81526004016108ea906145f5565b6108c282826127f2565b61115c612272565b6111785760405162461bcd60e51b81526004016108ea906145cd565b6108fc81612970565b6111d560405180610100016040528060008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b03168152602001606081525090565b6111dd612357565b6000838152600291820160209081526040918290208251610100810184528154815260018201549281019290925292830154918101919091526003820154606082015260048201546080820152600582015460a082015260068201546001600160a01b031660c082015260078201805491929160e08401919061125f90614599565b80601f016020809104026020016040519081016040528092919081815260200182805461128b90614599565b80156112d85780601f106112ad576101008083540402835291602001916112d8565b820191906000526020600020905b8154815290600101906020018083116112bb57829003601f168201915b5050505050815250509050919050565b60006001600160a01b038216611308576113086323d3ad8160e21b6121b7565b6001600160401b0361131861212b565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b61134f612272565b61136b5760405162461bcd60e51b81526004016108ea906145cd565b6000611375612357565b5490506000611382612357565b60010154905081831561139c5761139982846146aa565b90505b846113a5612357565b60010155806113b2612357565b556000805b8681101561156d578015806113ef57508787828181106113d9576113d96146fe565b90506020028101906113eb9190614714565b3582105b6114205760405162461bcd60e51b815260206004820152600260248201526114d560f21b60448201526064016108ea565b600061142a612357565b600201600061143984876146aa565b815260200190815260200160002060020154905088888381811061145f5761145f6146fe565b90506020028101906114719190614714565b602001358111156114b95760405162461bcd60e51b81526020600482015260126024820152711b585e081cdd5c1c1b1e4818db185a5b595960721b60448201526064016108ea565b8888838181106114cb576114cb6146fe565b90506020028101906114dd9190614714565b6114e5612357565b60020160006114f485886146aa565b8152602001908152602001600020818161150e9190614890565b9050508061151a612357565b600201600061152985886146aa565b815260208101919091526040016000206002015588888381811061154f5761154f6146fe565b90506020028101906115619190614714565b359250506001016113b7565b5084156115eb57835b828110156115e557611586612357565b6000828152600291820160205260408120818155600181018290559182018190556003820181905560048201819055600582018190556006820180546001600160a01b03191690556115db6007830182613d76565b5050600101611576565b50611678565b8583111561167857855b8381101561167657611605612357565b600201600061161483866146aa565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810180546001600160a01b03191690559061166c6007830182613d76565b50506001016115f5565b505b7fbf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c030988787876040516116ab9392919061497c565b60405180910390a150505050505050565b6060600160006116ca61259e565b905060608183146116e3576116e0858484612a0d565b90505b949350505050565b60006116f5611a22565b905061170c81611703612b1d565b88888888610a46565b5085611716612357565b6000838152600291820160205260408120909101805490919061173a9084906146aa565b90915550869050611749612357565b600083815260039091016020526040812090611763612b1d565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461179291906146aa565b909155506117a590506000878787612b27565b60006117b18888612c13565b9050876001600160a01b03166117c5612b1d565b6001600160a01b0316837ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e848b604051611809929190918252602082015260400190565b60405180910390a45050505050505050565b6000610863612c29565b61182d612272565b6118495760405162461bcd60e51b81526004016108ea906145cd565b6108fc81612c33565b606061185c61212b565b60030180546107d690614599565b60606116e3848484612a0d565b61187f612272565b61189b5760405162461bcd60e51b81526004016108ea906145cd565b61103c838383612d1a565b806118af61212b565b336000818152600792909201602090815260408084206001600160a01b03881680865290835293819020805460ff19169515159590951790945592518415158152919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6000600161192f61259e565b03905090565b600061193f612357565b6000938452600301602090815260408085206001600160a01b0390941685529290525090205490565b60008061197361271a565b546001600160a01b031661198561271a565b549093600160a01b90910461ffff1692509050565b6119a5848484610e15565b6001600160a01b0383163b156119d5576119c184848484612dd7565b6119d5576119d56368d2bf6b60e11b6121b7565b50505050565b6119e3613db0565b60018210611a1d576119f361259e565b821015611a1d575b611a0482612eb9565b611a1457600019909101906119fb565b6107b882612ed9565b919050565b600080611a2d612357565b60010154611a39612357565b54611a4491906146aa565b90505b611a4f612357565b54811115611aaa57611a5f612357565b6002016000611a6f600184614a64565b8152602001908152602001600020600001544210611a9857611a92600182614a64565b91505090565b80611aa281614a77565b915050611a47565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b60448201526064016108ea565b6060611aec82612159565b611b1e5760405162461bcd60e51b815260206004820152600360248201526208525160ea1b60448201526064016108ea565b6000611b298361111b565b9050600080306001600160a01b031663a7145eb46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b909190614a8e565b90506001600160a01b03811615611c1557604051630d47875d60e41b81526001600160a01b0382169063d47875d090611bcd908690600401613ecb565b602060405180830381865afa158015611bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0e9190614aab565b9150611c7c565b604051630d47875d60e41b8152309063d47875d090611c38908690600401613ecb565b602060405180830381865afa158015611c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c799190614aab565b91505b6000611c8e611c89612320565b612f04565b9050600080805b8351811015611d07576000848281518110611cb257611cb26146fe565b602002602001015160001c9050868111158015611ccf5750828110155b15611cf457848281518110611ce657611ce66146fe565b602002602001015193508092505b50611d006001826146aa565b9050611c95565b50611d128289612f0f565b98975050505050505050565b600080611d29612357565b54611d32612357565b6001015490939092509050565b6060611d496131a4565b80546107d690614599565b6000611d5e61212b565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b60606000611da0611c89612320565b905080516001600160401b03811115611dbb57611dbb6141e3565b604051908082528060200260200182016040528015611df457816020015b611de1613dd7565b815260200190600190039081611dd95790505b50915060005b81518110156120d857611e0b612320565b6002016000838381518110611e2257611e226146fe565b602002602001015181526020019081526020016000206040518060400160405290816000820154815260200160018201604051806080016040529081600082018054611e6d90614599565b80601f0160208091040260200160405190810160405280929190818152602001828054611e9990614599565b8015611ee65780601f10611ebb57610100808354040283529160200191611ee6565b820191906000526020600020905b815481529060010190602001808311611ec957829003601f168201915b50505050508152602001600182018054611eff90614599565b80601f0160208091040260200160405190810160405280929190818152602001828054611f2b90614599565b8015611f785780601f10611f4d57610100808354040283529160200191611f78565b820191906000526020600020905b815481529060010190602001808311611f5b57829003601f168201915b50505050508152602001600282018054611f9190614599565b80601f0160208091040260200160405190810160405280929190818152602001828054611fbd90614599565b801561200a5780601f10611fdf5761010080835404028352916020019161200a565b820191906000526020600020905b815481529060010190602001808311611fed57829003601f168201915b5050505050815260200160038201805461202390614599565b80601f016020809104026020016040519081016040528092919081815260200182805461204f90614599565b801561209c5780601f106120715761010080835404028352916020019161209c565b820191906000526020600020905b81548152906001019060200180831161207f57829003601f168201915b505050505081525050815250508382815181106120bb576120bb6146fe565b60209081029190910101526120d16001826146aa565b9050611dfa565b505090565b60006301ffc9a760e01b6001600160e01b03198316148061210e57506380ac58cd60e01b6001600160e01b03198316145b806107b85750506001600160e01b031916635b5e139f60e01b1490565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090565b600061101c6131c8565b600081600111611a1d5761216b61212b565b54821015611a1d5760005b61217e61212b565b6000848152600491909101602052604081205491508190036121aa576121a383614a77565b9250612176565b600160e01b161592915050565b8060005260046000fd5b60006121cc8361111b565b90508180156121e45750336001600160a01b03821614155b15612207576121f38133611d54565b612207576122076367d9dca160e11b6121b7565b8361221061212b565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b600061101c8161228061322a565b613234565b600061228f612c29565b546001600160a01b03169050816122a4612c29565b80546001600160a01b0319166001600160a01b03928316179055604051838216918316907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600061101c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661228061322a565b7ff85ae2b98503142dac20c6561e88360cff7f1cb5634b6ad090b7f724e2f67a0090565b6000612350838361327e565b9392505050565b600061101c613371565b6000808281805b878110156123dd5761237b6002836146bd565b91506000898983818110612391576123916146fe565b9050602002013590508084116123b657600084815260208290526040902093506123d4565b600081815260208590526040902093506123d16001846146aa565b92505b50600101612368565b50941496939550929350505050565b60008160011161249e576123fe61212b565b60008381526004919091016020526040812054915081900361248b5761242261212b565b54821061243957612439636f96cda160e11b6121b7565b61244161212b565b60001990920160008181526004939093016020526040909220549050801561243957600160e01b811660000361247657919050565b612486636f96cda160e11b6121b7565b612439565b600160e01b811660000361249e57919050565b611a1d636f96cda160e11b6121b7565b60008060006124bb61212b565b60009485526006016020525050604090912080549092909150565b6124ef60008051602061502d8339815191526000613234565b15801561250457506001600160a01b03841615155b801561251857506001600160a01b03831615155b156119d55761253560008051602061502d83398151915285613234565b158015612557575061255560008051602061502d83398151915284613234565b155b156119d55760405162461bcd60e51b8152602060048201526002602482015261085560f21b60448201526064016108ea565b4260a01b176001600160a01b03919091161790565b60006125a861212b565b54919050565b60006125b9836123ec565b9050806000806125c8866124ae565b9150915084156125ff576125dd818433610e62565b6125ff576125eb8333611d54565b6125ff576125ff632ce44b5f60e11b6121b7565b61260d8360008860016124d6565b801561261857600082555b6001600160801b0361262861212b565b6001600160a01b038516600090815260059190910160205260409020805491909101905561265a83600360e01b612589565b61266261212b565b60008881526004919091016020526040812091909155600160e11b851690036126d8576001860161269161212b565b6000828152600491909101602052604081205490036126d6576126b261212b565b5481146126d657846126c261212b565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b0386169060008051602061508d833981519152908390a461270661212b565b600190810180549091019055505050505050565b7f8116a128b135962baae86382f90f26a5e28c4bb803b8888f92fd98e3bbbc6d0090565b6127108111156127605760405162461bcd60e51b81526004016108ea90614ac4565b8161276961271a565b80546001600160a01b0319166001600160a01b03929092169190911790558061279061271a565b805461ffff92909216600160a01b0261ffff60a01b199092169190911790556040518181526001600160a01b038316907f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb906020015b60405180910390a25050565b612804816127fe612320565b906133a2565b61286c5760405162461bcd60e51b815260206004820152603360248201527f5368617265644d6574616461746142617463683a20736861726564206d6574616044820152726461746120616c72656164792065786973747360681b60648201526084016108ea565b60405180604001604052808281526020018361288790614aed565b9052612891612320565b60008381526002919091016020908152604090912082518155908201518051600183019081906128c19082614ba3565b50602082015160018201906128d69082614ba3565b50604082015160028201906128eb9082614ba3565b50606082015160038201906129009082614ba3565b508493507f673b054ed092bdba91ed697666383bb8698a3524eb1312b6c0cd73b0ef509f8b9250612935915085905080614734565b6129426020870187614734565b61294f6040890189614734565b61295c60608b018b614734565b6040516127e6989796959493929190614c5c565b6001600160a01b0381166129ba5760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b60448201526064016108ea565b806129c361214f565b80546001600160a01b0319166001600160a01b03928316179055604051908216907f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6060818310612a2657612a26631960ccad60e11b6121b7565b6001831015612a3457600192505b6000612a3e61259e565b9050808310612a4b578092505b60606000612a58876112e8565b85871090810291508115612b09578187870311612a755786860391505b60405192506001820160051b83016040526000612a91886119db565b905060008160400151612aa2575080515b60005b612aae8a612ed9565b9250604083015160008114612ac65760009250612aeb565b835115612ad257835192505b8b831860601b612aeb576001820191508a8260051b8801525b5060018a019950888a1480612aff57508481145b15612aa557855250505b50909695505050505050565b505050505050565b600061101c61322a565b80600003612b6b573415612b665760405162461bcd60e51b81526020600482015260066024820152652156616c756560d01b60448201526064016108ea565b6119d5565b6000612b7782856146bd565b9050600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03851601612ba95750348114612bad565b5034155b80612bdf5760405162461bcd60e51b815260206004820152600260248201526110ab60f11b60448201526064016108ea565b60006001600160a01b03871615612bf65786612bfe565b612bfe610859565b9050610fcc85612c0c61322a565b83866133ae565b6000612c1d61259e565b90506107b883836133ef565b600061101c613409565b6000612c3d6131a4565b8054612c4890614599565b80601f0160208091040260200160405190810160405280929190818152602001828054612c7490614599565b8015612cc15780601f10612c9657610100808354040283529160200191612cc1565b820191906000526020600020905b815481529060010190602001808311612ca457829003601f168201915b5050505050905081612cd16131a4565b90612cdc9082614ba3565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051612d0e929190614cbc565b60405180910390a15050565b612710811115612d3c5760405162461bcd60e51b81526004016108ea90614ac4565b6040518060400160405280836001600160a01b0316815260200182815250612d6261271a565b600085815260019182016020908152604091829020845181546001600160a01b0319166001600160a01b0391821617825594820151930192909255518381529184169185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290612e0c903390899088908890600401614cea565b6020604051808303816000875af1925050508015612e47575060408051601f3d908101601f19168201909252612e4491810190614d27565b60015b612e9c573d808015612e75576040519150601f19603f3d011682016040523d82523d6000602084013e612e7a565b606091505b508051600003612e9457612e946368d2bf6b60e11b6121b7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6000612ec361212b565b6000928352600401602052506040902054151590565b612ee1613db0565b6107b8612eec61212b565b6000848152600491909101602052604090205461343a565b60606107b88261347d565b60606000612f1b612320565b6002016000858152602001908152602001600020600101604051806080016040529081600082018054612f4d90614599565b80601f0160208091040260200160405190810160405280929190818152602001828054612f7990614599565b8015612fc65780601f10612f9b57610100808354040283529160200191612fc6565b820191906000526020600020905b815481529060010190602001808311612fa957829003601f168201915b50505050508152602001600182018054612fdf90614599565b80601f016020809104026020016040519081016040528092919081815260200182805461300b90614599565b80156130585780601f1061302d57610100808354040283529160200191613058565b820191906000526020600020905b81548152906001019060200180831161303b57829003601f168201915b5050505050815260200160028201805461307190614599565b80601f016020809104026020016040519081016040528092919081815260200182805461309d90614599565b80156130ea5780601f106130bf576101008083540402835291602001916130ea565b820191906000526020600020905b8154815290600101906020018083116130cd57829003601f168201915b5050505050815260200160038201805461310390614599565b80601f016020809104026020016040519081016040528092919081815260200182805461312f90614599565b801561317c5780601f106131515761010080835404028352916020019161317c565b820191906000526020600020905b81548152906001019060200180831161315f57829003601f168201915b50505050508152505090506116e38160000151826020015183604001518460600151876134d9565b7f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da90090565b60008060ff196131f960017f52513acdf273074fe51c68a52514ea5eabc2d36eb91435d5799fc3f9adc30530614a64565b60405160200161320b91815260200190565b60408051601f1981840301815291905280516020909101201692915050565b600061101c613502565b60009182527f0a7b0f5c59907924802379ebe98cdc23e2ee7820f63d30126e10b3752010e500602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600081815260018301602052604081205480156133675760006132a2600183614a64565b85549091506000906132b690600190614a64565b905081811461331b5760008660000182815481106132d6576132d66146fe565b90600052602060002001549050808760000184815481106132f9576132f96146fe565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061332c5761332c614d44565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107b8565b60009150506107b8565b60008060ff196131f960017fbc63558797adc09ce5b77f3ca89acfccabdd075e03de61144467402677b956b2614a64565b60006123508383613524565b80156119d55773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038516016133e357612b668282613573565b6119d5848484846135eb565b6108c282826040518060200160405280600081525061363e565b60008060ff196131f960017ffa02b2ade2dba28b48a24f204a68d8c0005ca2ccfd58c765cdddd023319a9b3f614a64565b613442613db0565b6001600160a01b03821681526001600160401b0360a083901c166020820152600160e01b82161515604082015260e89190911c606082015290565b6060816000018054806020026020016040519081016040528092919081815260200182805480156134cd57602002820191906000526020600020905b8154815260200190600101908083116134b9575b50505050509050919050565b606060006134e785856136b7565b905060006134f788888487613744565b9050611d128161378a565b600061350d336110cf565b1561351f575060131936013560601c90565b503390565b600081815260018301602052604081205461356b575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107b8565b5060006107b8565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146135c0576040519150601f19603f3d011682016040523d82523d6000602084013e6135c5565b606091505b505090508061103c578282604051635fdc4ec160e11b81526004016108ea92919061404e565b816001600160a01b0316836001600160a01b031603156119d557306001600160a01b0384160361362957612b666001600160a01b03851683836137bb565b6119d56001600160a01b038516848484613811565b6136488383613849565b6001600160a01b0383163b1561103c57600061366261212b565b5490508281035b61367c6000868380600101945086612dd7565b613690576136906368d2bf6b60e11b6121b7565b81811061366957816136a061212b565b54146136b0576136b060006121b7565b5050505050565b815181516060911580159115159082906136ce5750805b156136fe5784846040516020016136e6929190614d76565b604051602081830303815290604052925050506107b8565b811561371557846040516020016136e69190614ded565b801561372c57836040516020016136e69190614e2d565b50506040805160208101909152600081529392505050565b6060846137508361392f565b858561375b8661392f565b8960405160200161377196959493929190614e75565b6040516020818303038152906040529050949350505050565b606061379582613a2f565b6040516020016137a59190614f8b565b6040516020818303038152906040529050919050565b61103c8363a9059cbb60e01b84846040516024016137da92919061404e565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613b81565b6040516001600160a01b03808516602483015283166044820152606481018290526119d59085906323b872dd60e01b906084016137da565b600061385361212b565b549050600082900361386f5761386f63b562e8dd60e01b6121b7565b61387c60008483856124d6565b61388c836001841460e11b612589565b61389461212b565b600083815260049190910160205260409020556001600160401b0182026138b961212b565b6001600160a01b03851660008181526005929092016020526040822080549093019092558190036138f3576138f3622e076360e81b6121b7565b818301825b8083600060008051602061508d833981519152600080a48181600101915081036138f8578161392561212b565b555061103c915050565b6060816000036139565750506040805180820190915260018152600360fc1b602082015290565b8160005b8115613980578061396a81614fd0565b91506139799050600a836146ea565b915061395a565b6000816001600160401b0381111561399a5761399a6141e3565b6040519080825280601f01601f1916602001820160405280156139c4576020820181803683370190505b5090505b84156116e3576139d9600183614a64565b91506139e6600a86614fe9565b6139f19060306146aa565b60f81b818381518110613a0657613a066146fe565b60200101906001600160f81b031916908160001a905350613a28600a866146ea565b94506139c8565b60608151600003613a4e57505060408051602081019091526000815290565b600060405180606001604052806040815260200161504d6040913990506000600384516002613a7d91906146aa565b613a8791906146ea565b613a929060046146bd565b6001600160401b03811115613aa957613aa96141e3565b6040519080825280601f01601f191660200182016040528015613ad3576020820181803683370190505b509050600182016020820185865187015b80821015613b3f576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250613ae4565b5050600386510660018114613b5b5760028114613b6e57613b76565b603d6001830353603d6002830353613b76565b603d60018303535b509195945050505050565b6000613bd6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613c539092919063ffffffff16565b80519091501561103c5780806020019051810190613bf49190614ffd565b61103c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108ea565b60606116e3848460008585600080866001600160a01b03168587604051613c7a919061501a565b60006040518083038185875af1925050503d8060008114613cb7576040519150601f19603f3d011682016040523d82523d6000602084013e613cbc565b606091505b5091509150613ccd87838387613cd8565b979650505050505050565b60608315613d47578251600003613d40576001600160a01b0385163b613d405760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108ea565b50816116e3565b6116e38383815115613d5c5781518083602001fd5b8060405162461bcd60e51b81526004016108ea9190613eb8565b508054613d8290614599565b6000825580601f10613d92575050565b601f0160209004906000526020600020908101906108fc9190613e1c565b60408051608081018252600080825260208201819052918101829052606081019190915290565b604051806040016040528060008019168152602001613e176040518060800160405280606081526020016060815260200160608152602001606081525090565b905290565b5b80821115613e315760008155600101613e1d565b5090565b6001600160e01b0319811681146108fc57600080fd5b600060208284031215613e5d57600080fd5b813561235081613e35565b60005b83811015613e83578181015183820152602001613e6b565b50506000910152565b60008151808452613ea4816020860160208601613e68565b601f01601f19169290920160200192915050565b6020815260006123506020830184613e8c565b6001600160a01b0391909116815260200190565b600060208284031215613ef157600080fd5b5035919050565b6001600160a01b03811681146108fc57600080fd5b60008060408385031215613f2057600080fd5b8235613f2b81613ef8565b946020939093013593505050565b600060208284031215613f4b57600080fd5b813561235081613ef8565b600060808284031215613f6857600080fd5b50919050565b60008060008060008060c08789031215613f8757600080fd5b863595506020870135613f9981613ef8565b9450604087013593506060870135613fb081613ef8565b92506080870135915060a08701356001600160401b03811115613fd257600080fd5b613fde89828a01613f56565b9150509295509295509295565b60008060006060848603121561400057600080fd5b833561400b81613ef8565b9250602084013561401b81613ef8565b929592945050506040919091013590565b6000806040838503121561403f57600080fd5b50508035926020909101359150565b6001600160a01b03929092168252602082015260400190565b6000806040838503121561407a57600080fd5b82356001600160401b0381111561409057600080fd5b61409c85828601613f56565b95602094909401359450505050565b6020815281516020820152602082015160408201526040820151606082015260608201516080820152608082015160a082015260a082015160c082015260018060a01b0360c08301511660e0820152600060e08301516101008081850152506116e3610120840182613e8c565b80151581146108fc57600080fd5b60008060006040848603121561413b57600080fd5b83356001600160401b038082111561415257600080fd5b818601915086601f83011261416657600080fd5b81358181111561417557600080fd5b8760208260051b850101111561418a57600080fd5b602092830195509350508401356141a081614118565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612b09578351835292840192918401916001016141c7565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561421b5761421b6141e3565b60405290565b600082601f83011261423257600080fd5b81356001600160401b038082111561424c5761424c6141e3565b604051601f8301601f19908116603f01168101908282118183101715614274576142746141e3565b8160405283815286602085880101111561428d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c087890312156142c657600080fd5b86356142d181613ef8565b95506020870135945060408701356142e881613ef8565b93506060870135925060808701356001600160401b038082111561430b57600080fd5b6143178a838b01613f56565b935060a089013591508082111561432d57600080fd5b50613fde89828a01614221565b60006020828403121561434c57600080fd5b81356001600160401b0381111561436257600080fd5b6116e384828501614221565b60008060006060848603121561438357600080fd5b833561438e81613ef8565b95602085013595506040909401359392505050565b6000806000606084860312156143b857600080fd5b83359250602084013561401b81613ef8565b600080604083850312156143dd57600080fd5b82356143e881613ef8565b915060208301356143f881614118565b809150509250929050565b6000806040838503121561441657600080fd5b8235915060208301356143f881613ef8565b6000806000806080858703121561443e57600080fd5b843561444981613ef8565b9350602085013561445981613ef8565b92506040850135915060608501356001600160401b0381111561447b57600080fd5b61448787828801614221565b91505092959194509250565b600080604083850312156144a657600080fd5b82356144b181613ef8565b915060208301356143f881613ef8565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b8381101561458b57603f19898403810186528251805185528801518885018890528051608089870181905261452260c0880183613e8c565b91508a83015160608589850301818a015261453d8483613e8c565b93508b85015191508589850301838a01526145588483613e8c565b940151888503860160a08a0152939250614576915082905083613e8c565b978a01979550505091870191506001016144ea565b509098975050505050505050565b600181811c908216806145ad57607f821691505b602082108103613f6857634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6020808252602f908201527f5368617265644d6574616461746142617463683a2063616e6e6f74207365742060408201526e736861726564206d6574616461746160881b606082015260800190565b6000808335601e1984360301811261465b57600080fd5b8301803591506001600160401b0382111561467557600080fd5b6020019150600581901b360382131561468d57600080fd5b9250929050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107b8576107b8614694565b80820281158282048414176107b8576107b8614694565b634e487b7160e01b600052601260045260246000fd5b6000826146f9576146f96146d4565b500490565b634e487b7160e01b600052603260045260246000fd5b6000823560fe1983360301811261472a57600080fd5b9190910192915050565b6000808335601e1984360301811261474b57600080fd5b8301803591506001600160401b0382111561476557600080fd5b60200191503681900382131561468d57600080fd5b601f82111561103c576000816000526020600020601f850160051c810160208610156147a35750805b601f850160051c820191505b81811015612b15578281556001016147af565b600019600383901b1c191660019190911b1790565b6001600160401b038311156147ee576147ee6141e3565b614802836147fc8354614599565b8361477a565b6000601f841160018114614830576000851561481e5750838201355b61482886826147c2565b8455506136b0565b600083815260209020601f19861690835b828110156148615786850135825560209485019460019092019101614841565b508682101561487e5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a082013560058201556006810160c08301356148d881613ef8565b81546001600160a01b0319166001600160a01b039190911617905561490060e0830183614734565b6119d58183600786016147d7565b6000808335601e1984360301811261492557600080fd5b83016020810192503590506001600160401b0381111561494457600080fd5b80360382131561468d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408082528181018490526000906060808401600587901b850182018885805b8a811015614a4e57888403605f190185528235368d900360fe190181126149c1578283fd5b8c018035855260208082013581870152888201358987015287820135888701526080808301359087015260a080830135908701526101009060c080840135614a0881613ef8565b6001600160a01b03169088015260e0614a238482018561490e565b945083828a0152614a37848a018683614953565b99830199985050509490940193505060010161499c565b505050861515602087015293506116e392505050565b818103818111156107b8576107b8614694565b600081614a8657614a86614694565b506000190190565b600060208284031215614aa057600080fd5b815161235081613ef8565b600060208284031215614abd57600080fd5b5051919050565b6020808252600f908201526e45786365656473206d61782062707360881b604082015260600190565b600060808236031215614aff57600080fd5b614b076141f9565b82356001600160401b0380821115614b1e57600080fd5b614b2a36838701614221565b83526020850135915080821115614b4057600080fd5b614b4c36838701614221565b60208401526040850135915080821115614b6557600080fd5b614b7136838701614221565b60408401526060850135915080821115614b8a57600080fd5b50614b9736828601614221565b60608301525092915050565b81516001600160401b03811115614bbc57614bbc6141e3565b614bd081614bca8454614599565b8461477a565b602080601f831160018114614bff5760008415614bed5750858301515b614bf785826147c2565b865550612b15565b600085815260208120601f198616915b82811015614c2e57888601518255948401946001909101908401614c0f565b5085821015614c4c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608081526000614c70608083018a8c614953565b8281036020840152614c8381898b614953565b90508281036040840152614c98818789614953565b90508281036060840152614cad818587614953565b9b9a5050505050505050505050565b604081526000614ccf6040830185613e8c565b8281036020840152614ce18185613e8c565b95945050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090614d1d90830184613e8c565b9695505050505050565b600060208284031215614d3957600080fd5b815161235081613e35565b634e487b7160e01b600052603160045260246000fd5b60008151614d6c818560208601613e68565b9290920192915050565b6834b6b0b3b2911d101160b91b81528251600090614d9b816009850160208801613e68565b741116101130b734b6b0ba34b7b72fbab936111d101160591b6009918401918201528351614dd081601e840160208801613e68565b631116101160e11b601e9290910191820152602201949350505050565b6834b6b0b3b2911d101160b91b81528151600090614e12816009850160208701613e68565b631116101160e11b6009939091019283015250600d01919050565b7030b734b6b0ba34b7b72fbab936111d101160791b81528151600090614e5a816011850160208701613e68565b631116101160e11b6011939091019283015250601501919050565b693d913730b6b2911d101160b11b81528651600090614e9b81600a850160208c01613e68565b600160fd1b600a918401918201528751614ebc81600b840160208c01613e68565b631116101160e11b600b929091019182018190526e3232b9b1b934b83a34b7b7111d101160891b600f8301528751614efb81601e850160208c01613e68565b601e9201918201528551614f16816022840160208a01613e68565b770383937b832b93a34b2b9911d103d91373ab6b132b9111d160451b60229290910191820152614f7e614f6f614f69614f52603a850189614d5a565b6a1610113730b6b2911d101160a91b8152600b0190565b86614d5a565b62227d7d60e81b815260030190565b9998505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251614fc381601d850160208701613e68565b91909101601d0192915050565b600060018201614fe257614fe2614694565b5060010190565b600082614ff857614ff86146d4565b500690565b60006020828403121561500f57600080fd5b815161235081614118565b6000825161472a818460208701613e6856fe8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220cd750e17fb9b6d6d7ce6e265ca744424818e26a9ba9669eba221779e8e7d6cd564736f6c63430008170033";

type EvolvingNFTLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EvolvingNFTLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EvolvingNFTLogic__factory extends ContractFactory {
  constructor(...args: EvolvingNFTLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EvolvingNFTLogic> {
    return super.deploy(overrides || {}) as Promise<EvolvingNFTLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EvolvingNFTLogic {
    return super.attach(address) as EvolvingNFTLogic;
  }
  override connect(signer: Signer): EvolvingNFTLogic__factory {
    return super.connect(signer) as EvolvingNFTLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EvolvingNFTLogicInterface {
    return new utils.Interface(_abi) as EvolvingNFTLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EvolvingNFTLogic {
    return new Contract(address, _abi, signerOrProvider) as EvolvingNFTLogic;
  }
}
