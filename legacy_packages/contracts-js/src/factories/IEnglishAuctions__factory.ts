/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IEnglishAuctions,
  IEnglishAuctionsInterface,
} from "../IEnglishAuctions";

const _abi = [
  {
    type: "function",
    name: "bidInAuction",
    inputs: [
      {
        name: "_auctionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_bidAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "cancelAuction",
    inputs: [
      {
        name: "_auctionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collectAuctionPayout",
    inputs: [
      {
        name: "_auctionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collectAuctionTokens",
    inputs: [
      {
        name: "_auctionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createAuction",
    inputs: [
      {
        name: "_params",
        type: "tuple",
        internalType: "struct IEnglishAuctions.AuctionParameters",
        components: [
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "minimumBidAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "buyoutBidAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timeBufferInSeconds",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "bidBufferBps",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "startTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "endTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "auctionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllAuctions",
    inputs: [
      {
        name: "_startId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_endId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "auctions",
        type: "tuple[]",
        internalType: "struct IEnglishAuctions.Auction[]",
        components: [
          {
            name: "auctionId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumBidAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "buyoutBidAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timeBufferInSeconds",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "bidBufferBps",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "startTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "endTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "auctionCreator",
            type: "address",
            internalType: "address",
          },
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenType",
            type: "uint8",
            internalType: "enum IEnglishAuctions.TokenType",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IEnglishAuctions.Status",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllValidAuctions",
    inputs: [
      {
        name: "_startId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_endId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "auctions",
        type: "tuple[]",
        internalType: "struct IEnglishAuctions.Auction[]",
        components: [
          {
            name: "auctionId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumBidAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "buyoutBidAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timeBufferInSeconds",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "bidBufferBps",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "startTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "endTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "auctionCreator",
            type: "address",
            internalType: "address",
          },
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenType",
            type: "uint8",
            internalType: "enum IEnglishAuctions.TokenType",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IEnglishAuctions.Status",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAuction",
    inputs: [
      {
        name: "_auctionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "auction",
        type: "tuple",
        internalType: "struct IEnglishAuctions.Auction",
        components: [
          {
            name: "auctionId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumBidAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "buyoutBidAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timeBufferInSeconds",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "bidBufferBps",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "startTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "endTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "auctionCreator",
            type: "address",
            internalType: "address",
          },
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenType",
            type: "uint8",
            internalType: "enum IEnglishAuctions.TokenType",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IEnglishAuctions.Status",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWinningBid",
    inputs: [
      {
        name: "_auctionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "bidder",
        type: "address",
        internalType: "address",
      },
      {
        name: "currency",
        type: "address",
        internalType: "address",
      },
      {
        name: "bidAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isAuctionExpired",
    inputs: [
      {
        name: "_auctionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isNewWinningBid",
    inputs: [
      {
        name: "_auctionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_bidAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AuctionClosed",
    inputs: [
      {
        name: "auctionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "assetContract",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "closer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "auctionCreator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "winningBidder",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CancelledAuction",
    inputs: [
      {
        name: "auctionCreator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "auctionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewAuction",
    inputs: [
      {
        name: "auctionCreator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "auctionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "assetContract",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "auction",
        type: "tuple",
        indexed: false,
        internalType: "struct IEnglishAuctions.Auction",
        components: [
          {
            name: "auctionId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumBidAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "buyoutBidAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timeBufferInSeconds",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "bidBufferBps",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "startTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "endTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "auctionCreator",
            type: "address",
            internalType: "address",
          },
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenType",
            type: "uint8",
            internalType: "enum IEnglishAuctions.TokenType",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IEnglishAuctions.Status",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewBid",
    inputs: [
      {
        name: "auctionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "bidder",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "assetContract",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "bidAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "auction",
        type: "tuple",
        indexed: false,
        internalType: "struct IEnglishAuctions.Auction",
        components: [
          {
            name: "auctionId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumBidAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "buyoutBidAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timeBufferInSeconds",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "bidBufferBps",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "startTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "endTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "auctionCreator",
            type: "address",
            internalType: "address",
          },
          {
            name: "assetContract",
            type: "address",
            internalType: "address",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenType",
            type: "uint8",
            internalType: "enum IEnglishAuctions.TokenType",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IEnglishAuctions.Status",
          },
        ],
      },
    ],
    anonymous: false,
  },
];

export class IEnglishAuctions__factory {
  static readonly abi = _abi;
  static createInterface(): IEnglishAuctionsInterface {
    return new utils.Interface(_abi) as IEnglishAuctionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEnglishAuctions {
    return new Contract(address, _abi, signerOrProvider) as IEnglishAuctions;
  }
}
