/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISharedMetadataBatch,
  ISharedMetadataBatchInterface,
} from "../ISharedMetadataBatch";

const _abi = [
  {
    type: "function",
    name: "deleteSharedMetadata",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllSharedMetadata",
    inputs: [],
    outputs: [
      {
        name: "metadata",
        type: "tuple[]",
        internalType: "struct ISharedMetadataBatch.SharedMetadataWithId[]",
        components: [
          {
            name: "id",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "metadata",
            type: "tuple",
            internalType: "struct ISharedMetadataBatch.SharedMetadataInfo",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "description",
                type: "string",
                internalType: "string",
              },
              {
                name: "imageURI",
                type: "string",
                internalType: "string",
              },
              {
                name: "animationURI",
                type: "string",
                internalType: "string",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setSharedMetadata",
    inputs: [
      {
        name: "metadata",
        type: "tuple",
        internalType: "struct ISharedMetadataBatch.SharedMetadataInfo",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
          {
            name: "imageURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "animationURI",
            type: "string",
            internalType: "string",
          },
        ],
      },
      {
        name: "id",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "SharedMetadataDeleted",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SharedMetadataUpdated",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "name",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "description",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "imageURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "animationURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
];

export class ISharedMetadataBatch__factory {
  static readonly abi = _abi;
  static createInterface(): ISharedMetadataBatchInterface {
    return new utils.Interface(_abi) as ISharedMetadataBatchInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISharedMetadataBatch {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ISharedMetadataBatch;
  }
}
