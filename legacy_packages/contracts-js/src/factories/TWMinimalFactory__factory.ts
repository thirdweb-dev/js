/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BytesLike,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TWMinimalFactory,
  TWMinimalFactoryInterface,
} from "../TWMinimalFactory";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_implementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "_data",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "_salt",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "payable",
  },
];

const _bytecode =
  "0x60806040526040516103cb3803806103cb83398101604081905261002291610266565b6040516001600160601b03193360601b1660208201526034810182905260009081906054016040516020818303038152906040528051906020012090506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528560601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152816037826000f59250506000845111156101af57600080836001600160a01b031634876040516100d691906102df565b60006040518083038185875af1925050503d8060008114610113576040519150601f19603f3d011682016040523d82523d6000602084013e610118565b606091505b5091509150816101ac576044815110156101795760405162461bcd60e51b815260206004820152601d60248201527f5472616e73616374696f6e2072657665727465642073696c656e746c7900000060448201526064015b60405180910390fd5b6004810190508080602001905181019061019391906102fb565b60405162461bcd60e51b8152600401610170919061034b565b50505b505050505061037e565b634e487b7160e01b600052604160045260246000fd5b60005b838110156101ea5781810151838201526020016101d2565b50506000910152565b60006001600160401b038084111561020d5761020d6101b9565b604051601f8501601f19908116603f01168101908282118183101715610235576102356101b9565b8160405280935085815286868601111561024e57600080fd5b61025c8660208301876101cf565b5050509392505050565b60008060006060848603121561027b57600080fd5b83516001600160a01b038116811461029257600080fd5b60208501519093506001600160401b038111156102ae57600080fd5b8401601f810186136102bf57600080fd5b6102ce868251602084016101f3565b925050604084015190509250925092565b600082516102f18184602087016101cf565b9190910192915050565b60006020828403121561030d57600080fd5b81516001600160401b0381111561032357600080fd5b8201601f8101841361033457600080fd5b610343848251602084016101f3565b949350505050565b602081526000825180602084015261036a8160408501602087016101cf565b601f01601f19169190910160400192915050565b603f8061038c6000396000f3fe6080604052600080fdfea264697066735822122040568c9e28965ed92bb0fba73fe0b45581a675291f69c6c94d977e9d3d34725864736f6c63430008170033";

type TWMinimalFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TWMinimalFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TWMinimalFactory__factory extends ContractFactory {
  constructor(...args: TWMinimalFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _implementation: string,
    _data: BytesLike,
    _salt: BytesLike,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<TWMinimalFactory> {
    return super.deploy(
      _implementation,
      _data,
      _salt,
      overrides || {}
    ) as Promise<TWMinimalFactory>;
  }
  override getDeployTransaction(
    _implementation: string,
    _data: BytesLike,
    _salt: BytesLike,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _implementation,
      _data,
      _salt,
      overrides || {}
    );
  }
  override attach(address: string): TWMinimalFactory {
    return super.attach(address) as TWMinimalFactory;
  }
  override connect(signer: Signer): TWMinimalFactory__factory {
    return super.connect(signer) as TWMinimalFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TWMinimalFactoryInterface {
    return new utils.Interface(_abi) as TWMinimalFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TWMinimalFactory {
    return new Contract(address, _abi, signerOrProvider) as TWMinimalFactory;
  }
}
