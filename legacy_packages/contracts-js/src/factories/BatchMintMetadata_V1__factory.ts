/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BatchMintMetadata_V1,
  BatchMintMetadata_V1Interface,
} from "../BatchMintMetadata_V1";

const _abi = [
  {
    type: "function",
    name: "getBaseURICount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatchIdAtIndex",
    inputs: [
      {
        name: "_index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061012a806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80632419f51b14603757806363b45e2d146058575b600080fd5b6046604236600460c6565b605f565b60405190815260200160405180910390f35b6000546046565b60008054821060a45760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b604482015260640160405180910390fd5b6000828154811060b45760b460de565b90600052602060002001549050919050565b60006020828403121560d757600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fdfea26469706673582212206cc7d2e7b5672289915a993f54afadaef169cba9830a59aefb3a4260708529f664736f6c63430008170033";

type BatchMintMetadata_V1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchMintMetadata_V1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchMintMetadata_V1__factory extends ContractFactory {
  constructor(...args: BatchMintMetadata_V1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchMintMetadata_V1> {
    return super.deploy(overrides || {}) as Promise<BatchMintMetadata_V1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BatchMintMetadata_V1 {
    return super.attach(address) as BatchMintMetadata_V1;
  }
  override connect(signer: Signer): BatchMintMetadata_V1__factory {
    return super.connect(signer) as BatchMintMetadata_V1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchMintMetadata_V1Interface {
    return new utils.Interface(_abi) as BatchMintMetadata_V1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchMintMetadata_V1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BatchMintMetadata_V1;
  }
}
