/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IBurnToClaim, IBurnToClaimInterface } from "../IBurnToClaim";

const _abi = [
  {
    type: "function",
    name: "setBurnToClaimInfo",
    inputs: [
      {
        name: "burnToClaimInfo",
        type: "tuple",
        internalType: "struct IBurnToClaim.BurnToClaimInfo",
        components: [
          {
            name: "originContractAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "tokenType",
            type: "uint8",
            internalType: "enum IBurnToClaim.TokenType",
          },
          {
            name: "tokenId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "mintPriceForNewToken",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "TokensBurnedAndClaimed",
    inputs: [
      {
        name: "originContract",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "burnTokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "quantity",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
];

export class IBurnToClaim__factory {
  static readonly abi = _abi;
  static createInterface(): IBurnToClaimInterface {
    return new utils.Interface(_abi) as IBurnToClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBurnToClaim {
    return new Contract(address, _abi, signerOrProvider) as IBurnToClaim;
  }
}
