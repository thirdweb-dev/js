/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IAirdropERC20, IAirdropERC20Interface } from "../IAirdropERC20";

const _abi = [
  {
    type: "function",
    name: "airdropERC20",
    inputs: [
      {
        name: "tokenAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "contents",
        type: "tuple[]",
        internalType: "struct IAirdropERC20.AirdropContent[]",
        components: [
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AirdropFailed",
    inputs: [
      {
        name: "tokenAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "recipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
];

export class IAirdropERC20__factory {
  static readonly abi = _abi;
  static createInterface(): IAirdropERC20Interface {
    return new utils.Interface(_abi) as IAirdropERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAirdropERC20 {
    return new Contract(address, _abi, signerOrProvider) as IAirdropERC20;
  }
}
